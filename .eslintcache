[{"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\index.js":"1","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\App.js":"2","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Signup.js":"3","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\firebase\\config.js":"4","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FireState.js":"5","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FirebaseContext.js":"6","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FireReducer.js":"7","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Login.js":"8","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Profile.js":"9","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Loader.js":"10","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\PrivateRoutes.js":"11","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Header.js":"12","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\credentials.js":"13","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Posts.js":"14","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Post.js":"15","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Saved.js":"16","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Explore.js":"17"},{"size":434,"mtime":1609853688756,"results":"18","hashOfConfig":"19"},{"size":1309,"mtime":1611238275298,"results":"20","hashOfConfig":"19"},{"size":8100,"mtime":1610188362635,"results":"21","hashOfConfig":"19"},{"size":190,"mtime":1610865826593,"results":"22","hashOfConfig":"19"},{"size":5713,"mtime":1610986347319,"results":"23","hashOfConfig":"19"},{"size":120,"mtime":1609915551878,"results":"24","hashOfConfig":"19"},{"size":800,"mtime":1610178065587,"results":"25","hashOfConfig":"19"},{"size":6015,"mtime":1610188142280,"results":"26","hashOfConfig":"19"},{"size":21489,"mtime":1611247119793,"results":"27","hashOfConfig":"19"},{"size":396,"mtime":1610184129630,"results":"28","hashOfConfig":"19"},{"size":614,"mtime":1610184116014,"results":"29","hashOfConfig":"19"},{"size":6643,"mtime":1611238756220,"results":"30","hashOfConfig":"19"},{"size":327,"mtime":1610865791395,"results":"31","hashOfConfig":"19"},{"size":2732,"mtime":1611153500566,"results":"32","hashOfConfig":"19"},{"size":12292,"mtime":1611246906123,"results":"33","hashOfConfig":"19"},{"size":2878,"mtime":1611247173210,"results":"34","hashOfConfig":"19"},{"size":2440,"mtime":1611240833963,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1h9jy1v",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"38"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"38"},"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\index.js",[],["84","85"],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\App.js",["86"],"import \"./App.css\";\nimport \"./mobile.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Signup from \"./components/Signup\";\nimport FireState from \"./Context/Firebase/FireState\";\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\nimport Login from \"./components/Login\";\nimport Profile from \"./components/Profile\";\nimport PrivateRoute from \"./components/PrivateRoutes\";\nimport Header from \"./components/Header\";\nimport Post from \"./components/Post\";\nimport Explore from \"./components/Explore\";\n\nconst DefaultContainer = () => (\n  <div>\n    <div className=\"container\">\n      <Header />\n      <PrivateRoute exact path=\"/posts/:postId\" component={Post} />\n      <PrivateRoute exact path=\"/explore/posts\" component={Explore} />\n      <PrivateRoute exact path=\"/:userName\" component={Profile} />\n    </div>\n  </div>\n);\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToastProvider>\n        <FireState>\n          <Router>\n            <Switch>\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/\" component={Login} />\n              <PrivateRoute component={DefaultContainer} />\n            </Switch>\n          </Router>\n        </FireState>\n      </ToastProvider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Signup.js",["87","88","89","90","91","92","93","94","95","96","97","98","99"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MailOutlined,\r\n  FacebookFilled,\r\n} from \"@ant-design/icons\";\r\nimport InstaImage from \"../images/insta_image.png\";\r\nimport Illustation from \"../images/login_illus.jpg\";\r\nimport \"antd/dist/antd.css\";\r\nimport { auth } from \"../firebase/config\";\r\nimport firebase from \"firebase/app\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Signup = (props) => {\r\n  const { addToast } = useToasts();\r\n  const [form] = Form.useForm();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [loading, setLoading] = useState({});\r\n  const {\r\n    user,\r\n    signup,\r\n    facebookSignup,\r\n    isAuthenticated,\r\n    loading: newLoading,\r\n  } = useContext(FirebaseContext);\r\n\r\n  const onFinish = async (values) => {\r\n    if (!loading?.help2?.length && !loading?.help1?.length)\r\n      await signup(values);\r\n  };\r\n  useEffect(() => {\r\n    if (user) props.history.push(`/${user.userName}`);\r\n  }, [user]);\r\n\r\n  const checkUserName = (e) => {\r\n    setLoading({ ...loading, status1: \"validating\" });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"userName\", \"==\", e.target.value)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.docs.length) {\r\n          setLoading({\r\n            ...loading,\r\n            status1: \"error\",\r\n            help1: \"This username already exists\",\r\n          });\r\n        } else if (e.target.value === \"\") {\r\n          setLoading({\r\n            ...loading,\r\n            status1: \"error\",\r\n            help1: \"Please input your username!\",\r\n          });\r\n        } else {\r\n          setLoading({ ...loading, status1: \"success\", help1: \"\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  const checkEmail = (e) => {\r\n    setLoading({ ...loading, status2: \"validating\" });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"==\", e.target.value)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.docs.length) {\r\n          setLoading({\r\n            ...loading,\r\n            status2: \"error\",\r\n            help2: \"This email already exists\",\r\n          });\r\n        } else if (e.target.value === \"\") {\r\n          setLoading({\r\n            ...loading,\r\n            status2: \"error\",\r\n            help2: \"Please input your email id!\",\r\n          });\r\n        } else if (e.target.value) {\r\n          setLoading({ ...loading, status2: \"success\", help2: \"\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  const [password, setPassword] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    validateStatus: \"\",\r\n    help: \"\",\r\n  });\r\n  const handleClick = (e) => {\r\n    var provider = new firebase.auth.FacebookAuthProvider();\r\n    provider.setCustomParameters({\r\n      display: \"popup\",\r\n    });\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        var credential = result.credential;\r\n\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        let email = user.email,\r\n          name = user.displayName,\r\n          photoURL = user.photoURL;\r\n        facebookSignup({ email, name, photoURL });\r\n\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var accessToken = credential.accessToken;\r\n\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n\r\n        // ...\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ToastProvider>\r\n      <div>\r\n        {newLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div className=\"flex_login\">\r\n            <div>\r\n              <img\r\n                src={Illustation}\r\n                alt=\"illustration\"\r\n                className=\"image_illus\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"signup_form\">\r\n              <img src={InstaImage} className=\"insta_image\" />\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button fb_button\"\r\n                onClick={handleClick}\r\n              >\r\n                <FacebookFilled width=\"2rem\" /> Signup with Facebook\r\n              </Button>\r\n\r\n              <span className=\"breaker\">OR</span>\r\n              <Form\r\n                form={form}\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                onFinish={onFinish}\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  hasFeedback\r\n                  validateStatus={loading.status2}\r\n                  help={loading.help2}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your email id!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={checkEmail}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your Name!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    placeholder=\"Full Name\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"userName\"\r\n                  hasFeedback\r\n                  validateStatus={loading.status1}\r\n                  help={loading.help1}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your Username!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    placeholder=\"Username\"\r\n                    onChange={checkUserName}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  allowClear\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your Password!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    onChange={(e) =>\r\n                      setPassword({ ...password, password: e.target.value })\r\n                    }\r\n                    placeholder=\"Password\"\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                    style={{ margin: \"auto 0.5rem\" }}\r\n                  >\r\n                    Signup\r\n                  </Button>\r\n                  Or <Link to=\"/\">login now!</Link>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </ToastProvider>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\firebase\\config.js",[],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FireState.js",["100","101"],"import React, { useContext, useReducer, useEffect } from \"react\";\r\nimport FirebaseContext from \"./FirebaseContext\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport FireReducer from \"./FireReducer\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst FireState = (props) => {\r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    user: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n  const [state, dispatch] = useReducer(FireReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\r\n      if (!user) {\r\n        dispatch({ type: \"USER_LOADED\", payload: null });\r\n      } else {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .doc(user.email)\r\n          .onSnapshot((snap) => {\r\n            dispatch({ type: \"USER_LOADED\", payload: snap.data() });\r\n          });\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (state.user) {\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(state.user.email)\r\n        .onSnapshot((snap) => {\r\n          dispatch({ type: \"USER_LOADED\", payload: snap.data() });\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const signup = async (values) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(values.email, values.password)\r\n      .then(async (resp) => {\r\n        const docRef = firebase.firestore().doc(`/users/${values.email}`);\r\n        let user = {};\r\n        user.name = values.name;\r\n        user.email = values.email;\r\n        user.photoURL = resp.user.photoURL;\r\n        user.userName = values.userName;\r\n        docRef.set(user);\r\n        dispatch({ type: \"SIGNUP\", payload: user });\r\n      });\r\n  };\r\n\r\n  const login = async (values) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(values.email, values.password)\r\n      .then(async (resp) => {\r\n        const docRef = firebase.firestore().doc(`/users/${values.email}`);\r\n        docRef.get().then((data) => {\r\n          dispatch({ type: \"SIGNUP\", payload: data.data() });\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        dispatch({ type: \"SET_ERROR\", payload: e.message });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"REMOVE_ERROR\" });\r\n        }, 2000);\r\n      });\r\n  };\r\n\r\n  const facebookSignup = ({ name, email, photoURL }) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"==\", email)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.docs.length) {\r\n          let user = {};\r\n          user.name = name;\r\n          user.email = email;\r\n          user.photoURL = photoURL;\r\n          dispatch({ type: \"SIGNUP\", payload: data.docs[0].data() });\r\n        } else {\r\n          const docRef = firebase.firestore().doc(`/users/${email}`);\r\n          let user = {};\r\n          user.name = name;\r\n          user.email = email;\r\n          user.photoURL = photoURL;\r\n          user.userName = nanoid(10);\r\n          docRef.set(user);\r\n          dispatch({ type: \"SIGNUP\", payload: user });\r\n        }\r\n      });\r\n  };\r\n\r\n  const updateProfile = async (values) => {\r\n    if (values.file) {\r\n      var metadata = {\r\n        contentType: values.file.type,\r\n      };\r\n      const filePath = `users/${state.user.email}/profile-image`;\r\n      const fileRef = firebase.storage().ref().child(filePath);\r\n      const uploadTask = fileRef.put(values.file, metadata);\r\n      uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n        firebase\r\n          .storage()\r\n          .ref()\r\n          .child(filePath)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            console.log(values);\r\n            firebase.firestore().collection(\"users\").doc(values.email).update({\r\n              name: values.name,\r\n              userName: values.username,\r\n              bio: values.bio,\r\n              photoURL: url,\r\n              website: values.website,\r\n            });\r\n          });\r\n      });\r\n    } else {\r\n      firebase.firestore().collection(\"users\").doc(values.email).update({\r\n        name: values.name,\r\n        userName: values.username,\r\n        bio: values.bio,\r\n        website: values.website,\r\n      });\r\n    }\r\n  };\r\n\r\n  const uploadPost = (file, caption) => {\r\n    let id = nanoid(15);\r\n    var metadata = {\r\n      contentType: file.type,\r\n    };\r\n    const filePath = `posts/${id}`;\r\n    const fileRef = firebase.storage().ref().child(filePath);\r\n    const uploadTask = fileRef.put(file, metadata);\r\n    uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n      firebase\r\n        .storage()\r\n        .ref()\r\n        .child(filePath)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          let post = {};\r\n          post.id = id;\r\n          post.email = state.user.email;\r\n          post.url = url;\r\n          post.caption = caption;\r\n          post.timestamp = firebase.firestore.FieldValue.serverTimestamp();\r\n          firebase\r\n            .firestore()\r\n            .collection(\"posts\")\r\n            .doc(id)\r\n            .set(post)\r\n            .then(() => {\r\n              console.log(\"posted successfully\");\r\n            });\r\n        });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FirebaseContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        loading: state.loading,\r\n        signup: signup,\r\n        facebookSignup: facebookSignup,\r\n        login: login,\r\n        error: state.error,\r\n        updateProfile,\r\n        uploadPost,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      {props.children}{\" \"}\r\n    </FirebaseContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FireState;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FirebaseContext.js",["102"],"import React, { createContext } from \"react\";\r\nconst FirebaseContext = createContext();\r\nexport default FirebaseContext;","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FireReducer.js",["103","104","105"],"import { act } from \"react-dom/test-utils\";\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n      case \"USER_LOADED\":\r\n          let isAuth = false;\r\n          if(action.payload)\r\n            isAuth = true\r\n        return {\r\n          ...state,\r\n          isAuthenticated: isAuth,\r\n          loading: false,\r\n          user : action.payload\r\n        };\r\n        case \"SIGNUP\":\r\n          return {\r\n            ...state,\r\n            isAuthenticated: true,\r\n            loading: false,\r\n            user : action.payload\r\n          };\r\n        case \"SET_ERROR\":\r\n          return {\r\n            ...state,\r\n            error : action.payload\r\n          }\r\n        case \"REMOVE_ERROR\":\r\n          return{\r\n            ...state,\r\n            error : null\r\n          }\r\n     \r\n    }\r\n}","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Login.js",["106","107","108","109","110","111","112","113","114","115","116","117"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MailOutlined,\r\n  FacebookFilled,\r\n} from \"@ant-design/icons\";\r\nimport InstaImage from \"../images/insta_image.png\";\r\nimport Illustation from \"../images/login_illus.jpg\";\r\nimport \"antd/dist/antd.css\";\r\nimport { auth } from \"../firebase/config\";\r\nimport firebase from \"firebase/app\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Login = (props) => {\r\n  const [form] = Form.useForm();\r\n  const { addToast } = useToasts();\r\n  const [loading, setLoading] = useState({});\r\n  const {\r\n    user,\r\n    login,\r\n    facebookSignup,\r\n    error,\r\n    loading: newLoading,\r\n  } = useContext(FirebaseContext);\r\n\r\n  const onFinish = async (values) => {\r\n    if (!loading?.help2?.length && !loading?.help1?.length) await login(values);\r\n  };\r\n  useEffect(() => {\r\n    if (error) addToast(error, { appearance: \"error\", autoDismiss: true });\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (user) props.history.push(`/${user.userName}`);\r\n  }, [user]);\r\n\r\n  const checkEmail = (e) => {\r\n    setLoading({ ...loading, status2: \"validating\" });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"==\", e.target.value)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (!data.docs.length) {\r\n          setLoading({\r\n            ...loading,\r\n            status2: \"error\",\r\n            help2: \"This account is not registered\",\r\n          });\r\n        } else if (e.target.value === \"\") {\r\n          setLoading({\r\n            ...loading,\r\n            status2: \"error\",\r\n            help2: \"Please input your email id!\",\r\n          });\r\n        } else if (e.target.value) {\r\n          setLoading({ ...loading, status2: \"success\", help2: \"\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  const [password, setPassword] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    validateStatus: \"\",\r\n    help: \"\",\r\n  });\r\n  const handleClick = (e) => {\r\n    var provider = new firebase.auth.FacebookAuthProvider();\r\n    provider.setCustomParameters({\r\n      display: \"popup\",\r\n    });\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        var credential = result.credential;\r\n\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        let email = user.email,\r\n          name = user.displayName,\r\n          photoURL = user.photoURL;\r\n        facebookSignup({ email, name, photoURL });\r\n\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var accessToken = credential.accessToken;\r\n\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n\r\n        // ...\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {newLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"flex_login\">\r\n          <div>\r\n            <img src={Illustation} alt=\"illustration\" className=\"image_illus\" />\r\n          </div>\r\n\r\n          <div className=\"signup_form\">\r\n            <img src={InstaImage} className=\"insta_image\" />\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button fb_button\"\r\n              onClick={handleClick}\r\n            >\r\n              <FacebookFilled width=\"2rem\" /> Login with Facebook\r\n            </Button>\r\n\r\n            <span className=\"breaker\">OR</span>\r\n            <Form\r\n              form={form}\r\n              name=\"normal_login\"\r\n              className=\"login-form\"\r\n              onFinish={onFinish}\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n            >\r\n              <Form.Item\r\n                name=\"email\"\r\n                hasFeedback\r\n                validateStatus={loading.status2}\r\n                help={loading.help2}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your email id!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={checkEmail}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"password\"\r\n                allowClear\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your Password!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  onChange={(e) =>\r\n                    setPassword({ ...password, password: e.target.value })\r\n                  }\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"login-form-button\"\r\n                  style={{ margin: \"auto 0.5rem\" }}\r\n                >\r\n                  Login\r\n                </Button>\r\n                Or <Link to=\"/signup\">signup now!</Link>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Profile.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147"],"import FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link, useParams, Redirect } from \"react-router-dom\";\r\nimport UserImage from \"../images/user.svg\";\r\nimport firebase from \"firebase/app\";\r\nimport { Button, Modal, Form, Input, Upload, Tabs } from \"antd\";\r\nimport Loader from \"./Loader\";\r\nimport Posts from \"./Posts\";\r\nimport PostImage from \"../icons/posts.png\";\r\nimport Bookmark from \"../icons/bookmark.svg\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\nimport {\r\n  UploadOutlined,\r\n  AppleOutlined,\r\n  AndroidOutlined,\r\n} from \"@ant-design/icons\";\r\nimport ImgCrop from \"antd-img-crop\";\r\nimport \"antd/es/modal/style\";\r\nimport \"antd/es/slider/style\";\r\nimport Saved from \"./Saved\";\r\nconst Profile = (props) => {\r\n  const [contextUser, setContextUser] = useState(null);\r\n  const { addToast } = useToasts();\r\n  const [follow, setFollow] = useState(null);\r\n  const { user, updateProfile } = useContext(FirebaseContext);\r\n  let { userName } = useParams();\r\n  const [file, setFile] = useState(null);\r\n  const { TabPane } = Tabs;\r\n  const [User, setUser] = useState(null);\r\n  const [preview, setPreview] = useState(null);\r\n  const normFile = (e) => {\r\n    setFile(e.target.files[0]);\r\n    var reader = new FileReader();\r\n    var url = reader.readAsDataURL(e.target.files[0]);\r\n    reader.onloadend = (e) => {\r\n      let imgSrc = [reader.result];\r\n      setPreview(imgSrc);\r\n    };\r\n  };\r\n  const [loading, setLoading] = useState(true);\r\n  const [validation, setValidation] = useState({});\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"userName\", \"==\", userName)\r\n      .onSnapshot((snap) => {\r\n        if (!snap.docs.length) props.history.push(\"/\");\r\n        else {\r\n          setUser(snap.docs[0].data());\r\n          if (\r\n            user.following &&\r\n            user.following.includes(snap.docs[0].data().email)\r\n          ) {\r\n            setFollow(true);\r\n          } else setFollow(false);\r\n          setLoading(false);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const [follwers_show, setFollowers_show] = useState(null);\r\n  const [follwing_show, setFollowing_show] = useState(null);\r\n  const [isModalVisible1, setIsModalVisible1] = useState(false);\r\n  const [isModalVisible2, setIsModalVisible2] = useState(false);\r\n\r\n  const showModal1 = () => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"in\", User.followers)\r\n      .get()\r\n      .then((data) => {\r\n        let x = data.docs;\r\n        x = x.map((data) => {\r\n          let obj = {};\r\n          const { name, email, userName, photoURL } = data.data();\r\n          obj.email = email;\r\n          obj.name = name;\r\n          obj.userName = userName;\r\n          obj.photoURL = photoURL;\r\n          return obj;\r\n        });\r\n        setFollowers_show(x);\r\n        setIsModalVisible1(true);\r\n      });\r\n  };\r\n  const showModal2 = () => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"in\", User.following)\r\n      .get()\r\n      .then((data) => {\r\n        let x = data.docs;\r\n        x = x.map((data) => {\r\n          let obj = {};\r\n          const { name, email, userName, photoURL } = data.data();\r\n          obj.email = email;\r\n          obj.name = name;\r\n          obj.userName = userName;\r\n          obj.photoURL = photoURL;\r\n          return obj;\r\n        });\r\n        setFollowing_show(x);\r\n        setIsModalVisible2(true);\r\n      });\r\n  };\r\n  const handleOk2 = () => {\r\n    setIsModalVisible2(false);\r\n  };\r\n\r\n  const handleCancel2 = () => {\r\n    setIsModalVisible2(false);\r\n  };\r\n\r\n  const handleOk1 = () => {\r\n    setIsModalVisible1(false);\r\n  };\r\n\r\n  const handleCancel1 = () => {\r\n    setIsModalVisible1(false);\r\n  };\r\n\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n  const handleUserName = (e) => {\r\n    setValidation({ ...validation, status: \"validaing\" });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"userName\", \"==\", e.target.value)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.docs.length && data.docs[0].data().userName != user.userName) {\r\n          setValidation({\r\n            ...validation,\r\n            status1: \"error\",\r\n            help1: \"This username already exists\",\r\n          });\r\n        } else if (e.target.value === \"\") {\r\n          setValidation({\r\n            ...validation,\r\n            status1: \"error\",\r\n            help1: \"Please input your username!\",\r\n          });\r\n        } else {\r\n          setValidation({ ...validation, status1: \"success\", help1: \"\" });\r\n        }\r\n      });\r\n  };\r\n  const [postsLen, setLen] = useState(0);\r\n  useEffect(() => {\r\n    setContextUser(user);\r\n    if (User) {\r\n      if (user.following && user.following.includes(User.email))\r\n        setFollow(true);\r\n      else setFollow(false);\r\n      firebase\r\n        .firestore()\r\n        .collection(\"posts\")\r\n        .where(\"email\", \"==\", User.email)\r\n        .get()\r\n        .then((data) => {\r\n          setLen(data.docs.length);\r\n        });\r\n    }\r\n  }, [user, User]);\r\n\r\n  const [form] = Form.useForm();\r\n  const [formLayout, setFormLayout] = useState(\"horizontal\");\r\n  const handleFinish = async (values) => {\r\n    if (!validation?.help1?.length) {\r\n      values.file = file;\r\n      await updateProfile(values);\r\n      setVisible(false);\r\n      addToast(\"Profile Updated Successfully\", {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n      });\r\n    }\r\n  };\r\n  const onFormLayoutChange = ({ layout }) => {\r\n    setFormLayout(layout);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n  const handleFollow = () => {\r\n    let following = user.following;\r\n    if (!following) {\r\n      following = [];\r\n    }\r\n    following.push(User.email);\r\n    firebase\r\n      .firestore()\r\n      .doc(`/users/${contextUser.email}`)\r\n      .update({\r\n        following: following,\r\n      })\r\n      .then(() => {\r\n        let followers = User.followers;\r\n        if (!followers) followers = [];\r\n        followers.push(contextUser.email);\r\n        firebase.firestore().doc(`/users/${User.email}`).update({\r\n          followers: followers,\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleFollow1 = (userEmail) => {\r\n    let following = user.following;\r\n    if (!following) {\r\n      following = [];\r\n    }\r\n    following.push(userEmail);\r\n    firebase\r\n      .firestore()\r\n      .doc(`/users/${contextUser.email}`)\r\n      .update({\r\n        following: following,\r\n      })\r\n      .then(() => {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .doc(userEmail)\r\n          .get()\r\n          .then((data) => {\r\n            let followers = data.data().followers;\r\n            if (!followers) followers = [];\r\n            followers.push(contextUser.email);\r\n            firebase.firestore().collection(\"users\").doc(userEmail).update({\r\n              followers: followers,\r\n            });\r\n          });\r\n      });\r\n  };\r\n\r\n  const handleUnFollow = () => {\r\n    let following = user.following;\r\n    following = following.filter((user1) => {\r\n      return !(user1 == User.email);\r\n    });\r\n    firebase\r\n      .firestore()\r\n      .doc(`/users/${contextUser.email}`)\r\n      .update({\r\n        following: following,\r\n      })\r\n      .then(() => {\r\n        let followers = User.followers;\r\n        followers = followers.filter((user2) => {\r\n          return !(user2 == contextUser.email);\r\n        });\r\n        firebase.firestore().doc(`/users/${User.email}`).update({\r\n          followers: followers,\r\n        });\r\n      });\r\n  };\r\n  const handleUnFollow1 = (userEmail) => {\r\n    let following = user.following;\r\n    following = following.filter((user1) => {\r\n      return !(user1 == userEmail);\r\n    });\r\n    firebase\r\n      .firestore()\r\n      .doc(`/users/${contextUser.email}`)\r\n      .update({\r\n        following: following,\r\n      })\r\n      .then(() => {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .doc(userEmail)\r\n          .get()\r\n          .then((data) => {\r\n            let followers = data.data().followers;\r\n            followers = followers.filter((user2) => {\r\n              return !(user2 == contextUser.email);\r\n            });\r\n            firebase.firestore().doc(`/users/${userEmail}`).update({\r\n              followers: followers,\r\n            });\r\n          });\r\n      });\r\n  };\r\n\r\n  const formItemLayout =\r\n    formLayout === \"horizontal\"\r\n      ? {\r\n          labelCol: {\r\n            span: 4,\r\n          },\r\n          wrapperCol: {\r\n            span: 14,\r\n          },\r\n        }\r\n      : null;\r\n  const buttonItemLayout =\r\n    formLayout === \"horizontal\"\r\n      ? {\r\n          wrapperCol: {\r\n            span: 14,\r\n            offset: 4,\r\n          },\r\n        }\r\n      : null;\r\n\r\n  return (\r\n    <ImgCrop>\r\n      <div>\r\n        {User ? (\r\n          <div>\r\n            <Modal\r\n              title=\"Followers\"\r\n              visible={isModalVisible1}\r\n              onOk={handleOk1}\r\n              onCancel={handleCancel1}\r\n              footer={null}\r\n            >\r\n              {follwers_show\r\n                ? follwers_show.map((follower) => (\r\n                    <div className=\"modal_div\">\r\n                      {follower.photoURL ? (\r\n                        <img src={follower.photoURL} />\r\n                      ) : (\r\n                        <img src={UserImage} />\r\n                      )}\r\n                      <div className=\"modal_div_grid\">\r\n                        <a href={follower.userName}>\r\n                          <span className=\"modal_div_userName\">\r\n                            {follower.userName}\r\n                          </span>\r\n                        </a>\r\n                        <span className=\"modal_div_name\">\r\n                          {follower.userName}\r\n                        </span>\r\n                      </div>\r\n                      <div>\r\n                        {follower.email ===\r\n                        contextUser.email ? null : contextUser.following.includes(\r\n                            follower.email\r\n                          ) ? (\r\n                          <button\r\n                            className=\"edit_btn\"\r\n                            onClick={() => handleUnFollow1(follower.email)}\r\n                          >\r\n                            Unfollow\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            className=\"follow_btn\"\r\n                            onClick={() => handleFollow1(follower.email)}\r\n                          >\r\n                            Follow\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                : null}\r\n            </Modal>\r\n            <Modal\r\n              title=\"Following\"\r\n              visible={isModalVisible2}\r\n              onOk={handleOk2}\r\n              onCancel={handleCancel2}\r\n              footer={null}\r\n            >\r\n              {follwing_show\r\n                ? follwing_show.map((follower) => (\r\n                    <div className=\"modal_div\">\r\n                      {follower.photoURL ? (\r\n                        <img src={follower.photoURL} />\r\n                      ) : (\r\n                        <img src={UserImage} />\r\n                      )}\r\n                      <div className=\"modal_div_grid\">\r\n                        <a href={follower.userName}>\r\n                          <span className=\"modal_div_userName\">\r\n                            {follower.userName}\r\n                          </span>\r\n                        </a>\r\n                        <span className=\"modal_div_name\">\r\n                          {follower.userName}\r\n                        </span>\r\n                      </div>\r\n                      <div>\r\n                        {follower.email ===\r\n                        contextUser.email ? null : contextUser.following.includes(\r\n                            follower.email\r\n                          ) ? (\r\n                          <button\r\n                            className=\"edit_btn\"\r\n                            onClick={() => handleUnFollow1(follower.email)}\r\n                          >\r\n                            Unfollow\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            className=\"follow_btn\"\r\n                            onClick={() => handleFollow1(follower.email)}\r\n                          >\r\n                            Follow\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                : null}\r\n            </Modal>\r\n            <div className=\"profile_grid\">\r\n              <div className=\"profile_image\">\r\n                {User.photoURL ? (\r\n                  <img src={User.photoURL} className=\"user_image\" />\r\n                ) : (\r\n                  <img src={UserImage} className=\"user_image\" />\r\n                )}\r\n              </div>\r\n              <div className=\"flex_info\">\r\n                <span className=\"userName_profile\">\r\n                  {User.userName}{\" \"}\r\n                  {User.admin ? (\r\n                    <img\r\n                      src=\"https://www.flaticon.com/svg/static/icons/svg/1271/1271380.svg\"\r\n                      className=\"verify_icons\"\r\n                    />\r\n                  ) : null}{\" \"}\r\n                </span>{\" \"}\r\n                {contextUser.email == User.email ? (\r\n                  <button className=\"edit_btn1\" onClick={showModal}>\r\n                    Edit Profile\r\n                  </button>\r\n                ) : follow ? (\r\n                  <button className=\"edit_btn\" onClick={handleUnFollow}>\r\n                    Unfollow\r\n                  </button>\r\n                ) : (\r\n                  <button className=\"follow_btn\" onClick={handleFollow}>\r\n                    Follow\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <div className=\"info_profile\">\r\n                <div className=\"info_grid\">\r\n                  <div>\r\n                    <span className=\"span_1\">{postsLen} </span>\r\n                    <span className=\"span_2\">posts</span>\r\n                  </div>\r\n\r\n                  {!User.followers || !User.followers.length ? (\r\n                    <div>\r\n                      <span className=\"span_1\">0 </span>\r\n                      <span className=\"span_2\">followers</span>\r\n                    </div>\r\n                  ) : (\r\n                    <div onClick={showModal1} className=\"pointer_div\">\r\n                      <span className=\"span_1\">{User.followers.length} </span>\r\n                      <span className=\"span_2\">followers</span>\r\n                    </div>\r\n                  )}\r\n                  {!User.following || !User.following.length ? (\r\n                    <div>\r\n                      <span className=\"span_1\">0 </span>\r\n                      <span className=\"span_2\">following</span>\r\n                    </div>\r\n                  ) : (\r\n                    <div onClick={showModal2} className=\"pointer_div\">\r\n                      <span className=\"span_1 \">{User.following.length} </span>\r\n                      <span className=\"span_2\">following</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <div>\r\n                    <span className=\"user_name_style\">{User.name}</span>\r\n                  </div>\r\n                  <div>\r\n                    {User.bio ? (\r\n                      <div className=\"bio_div\">{User.bio}</div>\r\n                    ) : null}\r\n                  </div>\r\n                  {User.website ? (\r\n                    <div>\r\n                      <a\r\n                        href={User.website}\r\n                        target=\"_blank\"\r\n                        className=\"website_div\"\r\n                      >\r\n                        {User.website}\r\n                      </a>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Modal\r\n              title=\"Edit Profile\"\r\n              visible={visible}\r\n              confirmLoading={confirmLoading}\r\n              okButtonProps={{ style: { display: \"none\" } }}\r\n              onCancel={handleCancel}\r\n            >\r\n              <div className=\"image_div\">\r\n                {User.photoURL ? (\r\n                  <img\r\n                    src={preview ? preview : User.photoURL}\r\n                    className=\"edit_image\"\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={preview ? preview : UserImage}\r\n                    className=\"edit_image\"\r\n                  />\r\n                )}{\" \"}\r\n                <div className=\"edit_userName\">{user.userName}</div>\r\n                <br />\r\n                <label for=\"file-upload\" class=\"image_upload\">\r\n                  <span id=\"profile_btn\">Choose profile photo</span>\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"file-upload\"\r\n                  name=\"avatar\"\r\n                  accept=\"image/*\"\r\n                  onChange={normFile}\r\n                />\r\n              </div>\r\n              <Form\r\n                {...formItemLayout}\r\n                layout={formLayout}\r\n                form={form}\r\n                style={{ marginTop: \"2rem\" }}\r\n                onFinish={handleFinish}\r\n                initialValues={{\r\n                  layout: formLayout,\r\n                  username: User.userName,\r\n                  email: User.email,\r\n                  name: User.name,\r\n                  bio: User.bio,\r\n                  website: User.website,\r\n                }}\r\n                onValuesChange={onFormLayoutChange}\r\n              >\r\n                <Form.Item label=\"Email\">\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    noStyle\r\n                    rules={[\r\n                      { required: true, message: \"Username is required\" },\r\n                    ]}\r\n                  >\r\n                    <Input placeholder=\"Please input\" disabled />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item label=\"Username\">\r\n                  <Form.Item\r\n                    name=\"username\"\r\n                    hasFeedback\r\n                    validateStatus={validation.status1}\r\n                    style={{ height: \"30px\" }}\r\n                    help={validation.help1}\r\n                    rules={[\r\n                      { required: true, message: \"Username is required\" },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      placeholder=\"Please input\"\r\n                      onChange={handleUserName}\r\n                    />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item label=\"Website\">\r\n                  <Form.Item name=\"website\" style={{ height: \"30px\" }}>\r\n                    <Input placeholder=\"Your website\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Name\">\r\n                  <Form.Item\r\n                    name=\"name\"\r\n                    noStyle\r\n                    rules={[{ required: true, message: \"Name is required\" }]}\r\n                  >\r\n                    <Input placeholder=\"Your name\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Bio\">\r\n                  <Form.Item name=\"bio\" noStyle>\r\n                    <Input.TextArea />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                    style={{ margin: \"auto 0\" }}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </Modal>\r\n            <Tabs defaultActiveKey=\"1\" centered=\"true\">\r\n              <TabPane\r\n                tab={\r\n                  <span>\r\n                    <img\r\n                      src={PostImage}\r\n                      className=\"icons\"\r\n                      style={{ height: \"1.8rem\" }}\r\n                    />\r\n                    Posts\r\n                  </span>\r\n                }\r\n                key=\"1\"\r\n              >\r\n                <Posts userName={userName} />\r\n              </TabPane>\r\n              {User.userName === user.userName && (\r\n                <TabPane\r\n                  tab={\r\n                    <span>\r\n                      <img src={Bookmark} className=\"icons\" />\r\n                      Saved\r\n                    </span>\r\n                  }\r\n                  key=\"2\"\r\n                >\r\n                  <Saved />\r\n                </TabPane>\r\n              )}\r\n            </Tabs>\r\n            ,\r\n          </div>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </div>\r\n    </ImgCrop>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Loader.js",[],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\PrivateRoutes.js",[],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Header.js",["148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport InstaImage from \"../images/insta_image.png\";\r\nimport Home from \"../icons/home.svg\";\r\nimport Plus from \"../icons/plus.svg\";\r\nimport Logout from \"../icons/log-out.svg\";\r\nimport UserImage from \"../images/user.svg\";\r\nimport Explore from \"../icons/explore.svg\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport firebase from \"firebase/app\";\r\nimport { Modal, Form, Button, Upload, Input, Alert } from \"antd\";\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\n\r\nconst Header = () => {\r\n  const { user, updateProfile, loading, uploadPost } = useContext(\r\n    FirebaseContext\r\n  );\r\n  const { addToast } = useToasts();\r\n  const [users, setUsers] = useState(null);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      span: 6,\r\n    },\r\n    wrapperCol: {\r\n      span: 14,\r\n    },\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        // Sign-out successful.\r\n      })\r\n      .catch((error) => {\r\n        // An error happened.\r\n      });\r\n  };\r\n\r\n  const onFinish = async (data) => {\r\n    if (!file) {\r\n      setError(true);\r\n      setTimeout(() => {\r\n        setError(null);\r\n      }, 2000);\r\n    } else {\r\n      await uploadPost(file, data.caption);\r\n      setIsModalVisible(false);\r\n      addToast(\"Posted successfully\", {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n      });\r\n    }\r\n  };\r\n  const normFile = (e) => {\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n\r\n    return e && e.fileList;\r\n  };\r\n  const handleFileChange = (e) => {\r\n    setFile(e.file.originFileObj);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const [showUsers, setShowUsers] = useState([]);\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .get()\r\n      .then((data) => {\r\n        let arr = [];\r\n        data.docs.forEach((x) => {\r\n          const { name, userName, photoURL } = x.data();\r\n          let y = {};\r\n          y.name = name;\r\n          y.userName = userName;\r\n          y.photoURL = photoURL;\r\n          arr.push(y);\r\n        });\r\n        setUsers(arr);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const regex = new RegExp(e.target.value, \"gi\");\r\n    let arr = [];\r\n    if (e.target.value == \"\") {\r\n      setShowUsers(arr);\r\n    } else {\r\n      users.forEach((item) => {\r\n        if (item.name.match(regex) || item.userName.match(regex))\r\n          arr.push(item);\r\n      });\r\n      setShowUsers(arr);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {!loading ? (\r\n        <nav>\r\n          <label>\r\n            <img src={InstaImage} className=\"logo\" />\r\n          </label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"input_header\"\r\n              placeholder=\"Search\"\r\n              onChange={handleChange}\r\n            />\r\n            <ul className=\"list-group\">\r\n              {showUsers.map((data) => (\r\n                <>\r\n                  <a href={`/${data.userName}`}>\r\n                    <li className=\"list-group-item\">\r\n                      {data.photoURL ? (\r\n                        <img src={data.photoURL} className=\"search_img\" />\r\n                      ) : (\r\n                        <img src={UserImage} className=\"search_img\" />\r\n                      )}\r\n                      <div className=\"serach_flex\">\r\n                        <span className=\"userName_search\">{data.userName}</span>\r\n                        <span className=\"name_search\">{data.name}</span>\r\n                      </div>\r\n                    </li>\r\n                  </a>\r\n                </>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <ul className=\"header_list\">\r\n            <li>\r\n              <img src={Home} />\r\n            </li>\r\n            <a href=\"/explore/posts\">\r\n              <li>\r\n                <img src={Explore} className=\"display_explore\" />\r\n              </li>\r\n            </a>\r\n            <li>\r\n              <img\r\n                src={Plus}\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={showModal}\r\n              />\r\n            </li>\r\n            <a href={`/${user.userName}`}>\r\n              <li>\r\n                {user.photoURL ? (\r\n                  <img src={user.photoURL} className=\"user_header\" />\r\n                ) : (\r\n                  <img src={UserImage} className=\"user_header\" />\r\n                )}\r\n              </li>\r\n            </a>\r\n            <li>\r\n              <img src={Logout} onClick={handleLogout} />\r\n            </li>\r\n          </ul>\r\n          <Modal\r\n            title=\"Add a new post\"\r\n            visible={isModalVisible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            className=\"wrapper\"\r\n          >\r\n            {error && (\r\n              <Alert\r\n                message=\"Please select a file!\"\r\n                type=\"error\"\r\n                showIcon\r\n                className=\"alert_show\"\r\n              />\r\n            )}\r\n\r\n            <Form name=\"validate_other\" {...formItemLayout} onFinish={onFinish}>\r\n              <Form.Item\r\n                name=\"upload\"\r\n                label=\"Upload\"\r\n                valuePropName=\"fileList\"\r\n                getValueFromEvent={normFile}\r\n              >\r\n                <Upload\r\n                  name=\"logo\"\r\n                  listType=\"picture\"\r\n                  maxCount={1}\r\n                  onChange={handleFileChange}\r\n                >\r\n                  <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n                </Upload>\r\n              </Form.Item>\r\n              <Form.Item label=\"Caption\">\r\n                <Form.Item name=\"caption\" noStyle>\r\n                  <Input.TextArea />\r\n                </Form.Item>\r\n              </Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                size=\"middle\"\r\n                className=\"margin_upload\"\r\n              >\r\n                Upload Post\r\n              </Button>\r\n            </Form>\r\n          </Modal>\r\n        </nav>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\credentials.js",[],["162","163"],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Posts.js",["164","165","166","167","168","169","170"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport firebase from \"firebase/app\";\r\nimport Heart from \"../icons/heart.svg\";\r\nimport Upload from \"../icons/upload.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spin } from \"antd\";\r\nimport Loader from \"./Loader\";\r\nconst Posts = (props) => {\r\n  const { user, updateProfile } = useContext(FirebaseContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [posts, setPosts] = useState([]);\r\n  useEffect(() => {\r\n    if (props.userName) {\r\n      let x = [];\r\n      setLoading(true);\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .where(\"userName\", \"==\", props.userName)\r\n        .get()\r\n        .then((u) => {\r\n          firebase\r\n            .firestore()\r\n            .collection(\"posts\")\r\n            .where(\"email\", \"==\", u.docs[0].data().email)\r\n            .get()\r\n            .then((data) => {\r\n              data.docs.forEach((post) => {\r\n                x.push(post.data());\r\n              });\r\n              setPosts(x);\r\n              setLoading(false);\r\n            });\r\n        });\r\n    }\r\n  }, [props.userName]);\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spin className=\"spin_loader\" />\r\n      ) : posts.length ? (\r\n        <div className=\"grid_posts\">\r\n          {posts.map((post) => (\r\n            <a href={`posts/${post.id}`}>\r\n              <div className=\"image_1\">\r\n                <img src={post.url} className=\"image_post\" />\r\n                <div className=\"middle1\">\r\n                  <div className=\"text1\">\r\n                    {!post.likes ? (\r\n                      <span>\r\n                        0 <i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                    ) : (\r\n                      <span>\r\n                        {post.likes.length}{\" \"}\r\n                        <i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                    )}\r\n                    &nbsp;&nbsp;\r\n                    {!post.comments ? (\r\n                      <span>\r\n                        0 <i class=\"fa fa-comment-o\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                    ) : (\r\n                      <span>\r\n                        {post.comments.length}{\" \"}\r\n                        <i class=\"fa fa-comment-o\" aria-hidden=\"true\" />\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <img src={Upload} className=\"no_post\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Post.js",["171","172","173","174","175","176","177","178","179"],"import React, { useEffect, useState, useContext, useRef } from \"react\";\r\nimport { Link, useParams, Redirect } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport Loader from \"./Loader\";\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport { Popconfirm } from \"antd\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\n\r\nconst Post = (props) => {\r\n  const { postId } = useParams();\r\n  const [post, setPost] = useState(null);\r\n  const [owner, setOwner] = useState(null);\r\n  const [heart, setHeart] = useState(false);\r\n  const myRef = useRef(null);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n  const [latestComments, setLatest] = useState([]);\r\n\r\n  const handleConfirm = () => {\r\n    var postRef = firebase.storage().ref().child(`/posts/${post.id}`);\r\n    postRef\r\n      .delete()\r\n      .then(function () {\r\n        firebase\r\n          .firestore()\r\n          .doc(`/posts/${post.id}`)\r\n          .delete()\r\n          .then(() => {\r\n            props.history.push(\"/\");\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        // Uh-oh, an error occurred!\r\n      });\r\n  };\r\n  const { user, updateProfile } = useContext(FirebaseContext);\r\n\r\n  const compare = (a, b) => {\r\n    return a.time < b.time;\r\n  };\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .doc(`/posts/${postId}`)\r\n      .onSnapshot((data) => {\r\n        if (!data.exists) {\r\n          props.history.push(\"/\");\r\n        } else {\r\n          if (data.data().comments) {\r\n            data.data().comments.sort(compare);\r\n          }\r\n\r\n          if (data.data().comments) {\r\n            let newComments = [];\r\n            data.data().comments.forEach((d) => {\r\n              firebase\r\n                .firestore()\r\n                .doc(`/users/${d.email}`)\r\n                .get()\r\n                .then((u) => {\r\n                  d.userName = u.data().userName;\r\n                  d.photoURL = u.data().photoURL;\r\n                  newComments.push(d);\r\n                });\r\n            });\r\n            let count = 0;\r\n            var newArr = [];\r\n\r\n            for (let i = data.data().comments.length - 1; i >= 0; i--) {\r\n              if (count == 2) break;\r\n              firebase\r\n                .firestore()\r\n                .doc(`/users/${data.data().comments[i].email}`)\r\n                .get()\r\n                .then((u) => {\r\n                  let temp = {};\r\n                  temp.comment = data.data().comments[i].comment;\r\n                  temp.time = data.data().comments[i].comment;\r\n\r\n                  temp.userName = u.data().userName;\r\n                  temp.photoURL = u.data().photoURL;\r\n\r\n                  newArr.push(temp);\r\n                });\r\n              count += 1;\r\n            }\r\n            setLatest(newArr);\r\n            setComments(newComments);\r\n          }\r\n          setPost(data.data());\r\n\r\n          firebase\r\n            .firestore()\r\n            .doc(`/users/${data.data().email}`)\r\n            .get()\r\n            .then((u) => {\r\n              setOwner(u.data());\r\n            });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const handleDBClick = () => {\r\n    setHeart(true);\r\n    setTimeout(() => {\r\n      setHeart(false);\r\n    }, 800);\r\n    if (post.likes) {\r\n      if (!post.likes.includes(user.email)) {\r\n        post.likes.push(user.email);\r\n        firebase\r\n          .firestore()\r\n          .doc(`/posts/${post.id}`)\r\n          .update({\r\n            likes: post.likes,\r\n          })\r\n          .then(() => {});\r\n      }\r\n    } else {\r\n      let likes = [];\r\n      likes.push(user.email);\r\n      firebase\r\n        .firestore()\r\n        .doc(`/posts/${post.id}`)\r\n        .update({\r\n          likes,\r\n        })\r\n        .then(() => {});\r\n    }\r\n  };\r\n\r\n  const handleLike = () => {\r\n    if (post.likes) {\r\n      if (!post.likes.includes(user.email)) {\r\n        post.likes.push(user.email);\r\n        firebase\r\n          .firestore()\r\n          .doc(`/posts/${post.id}`)\r\n          .update({\r\n            likes: post.likes,\r\n          })\r\n          .then(() => {});\r\n      } else {\r\n        let likes = post.likes;\r\n        likes = likes.filter((like) => like !== user.email);\r\n        firebase\r\n          .firestore()\r\n          .doc(`/posts/${post.id}`)\r\n          .update({\r\n            likes,\r\n          })\r\n          .then(() => {});\r\n      }\r\n    } else {\r\n      let likes = [];\r\n      likes.push(user.email);\r\n      firebase\r\n        .firestore()\r\n        .doc(`/posts/${post.id}`)\r\n        .update({\r\n          likes,\r\n        })\r\n        .then(() => {});\r\n    }\r\n  };\r\n\r\n  const handleBookmark = () => {\r\n    console.log(user);\r\n    if (user.bookmarks) {\r\n      if (!user.bookmarks.includes(post.id)) {\r\n        let bookmarks = user.bookmarks;\r\n        bookmarks.push(post.id);\r\n        firebase\r\n          .firestore()\r\n          .doc(`/users/${user.email}`)\r\n          .update({\r\n            bookmarks,\r\n          })\r\n          .then(() => {});\r\n      } else {\r\n        let bookmarks = user.bookmarks;\r\n        bookmarks = bookmarks.filter((like) => like !== post.id);\r\n        firebase\r\n          .firestore()\r\n          .doc(`/users/${user.email}`)\r\n          .update({\r\n            bookmarks,\r\n          })\r\n          .then(() => {});\r\n      }\r\n    } else {\r\n      let bookmarks = [];\r\n      bookmarks.push(post.id);\r\n      firebase\r\n        .firestore()\r\n        .doc(`/users/${user.email}`)\r\n        .update({\r\n          bookmarks,\r\n        })\r\n        .then(() => {});\r\n    }\r\n  };\r\n\r\n  const handleComment = (e) => {\r\n    e.preventDefault();\r\n    if (comment.length) {\r\n      let newComment = {};\r\n      newComment.time = Date.now();\r\n      newComment.comment = comment;\r\n      newComment.email = user.email;\r\n      if (post.comments) {\r\n        let comments = post.comments;\r\n        comments.push(newComment);\r\n        firebase\r\n          .firestore()\r\n          .doc(`/posts/${post.id}`)\r\n          .update({ comments })\r\n          .then(() => {});\r\n      } else {\r\n        let comments = [];\r\n        comments.push(newComment);\r\n        firebase\r\n          .firestore()\r\n          .doc(`/posts/${post.id}`)\r\n          .update({ comments })\r\n          .then(() => {});\r\n      }\r\n    }\r\n    if (myRef && myRef.current)\r\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    setComment(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!post || !owner ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"post_grid\">\r\n          <div className=\"post_photo_grid\">\r\n            <div className=\"post_info_grid\">\r\n              {owner.photoURL ? (\r\n                <img src={owner.photoURL} className=\"image_circle\" />\r\n              ) : null}\r\n              <div>\r\n                <a href={`/${owner.userName}`} style={{ color: \"black\" }}>\r\n                  {owner.userName}\r\n                </a>\r\n              </div>\r\n              {user.email === post.email && (\r\n                <Popconfirm\r\n                  placement=\"top\"\r\n                  title=\"Delete this post?\"\r\n                  okText=\"Yes\"\r\n                  cancelText=\"No\"\r\n                  onConfirm={handleConfirm}\r\n                >\r\n                  <EllipsisOutlined\r\n                    style={{ fontSize: \"1.5rem\", marginRight: \"0.5rem\" }}\r\n                    className=\"delete_post\"\r\n                  />\r\n                </Popconfirm>\r\n              )}\r\n            </div>\r\n            <div className=\"inner_div1\">\r\n              <img\r\n                src={post.url}\r\n                className=\"post_image\"\r\n                onDoubleClick={handleDBClick}\r\n              />\r\n              {heart && <i className=\"fa fa-heart\" aria-hidden=\"true\" />}\r\n            </div>\r\n          </div>\r\n          <div className=\"bio_grid\">\r\n            {owner.photoURL ? (\r\n              <img src={owner.photoURL} className=\"image_circle1\" />\r\n            ) : null}\r\n            <div>\r\n              <a href={`/${owner.userName}`} style={{ color: \"black\" }}>\r\n                {\" \"}\r\n                <span className=\"post_userName\">{owner.userName}</span>{\" \"}\r\n              </a>{\" \"}\r\n              {post.caption}\r\n            </div>\r\n          </div>\r\n          <div className=\"comments_grid\">\r\n            <div className=\"grid_c_div\">\r\n              {comments.length ? (\r\n                <>\r\n                  {comments.map((c) => (\r\n                    <div className=\"comment_grid\">\r\n                      <img src={c.photoURL} className=\"comment_img\" />\r\n                      <div>\r\n                        {\" \"}\r\n                        <span className=\"post_userName\">\r\n                          <a href={`/${c.username}`} style={{ color: \"black\" }}>\r\n                            {c.userName}\r\n                          </a>\r\n                        </span>\r\n                        <span>{c.comment}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  <div ref={myRef}></div>\r\n                </>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          {comments.length && (\r\n            <div className=\"mobile_comments\">\r\n              <span className=\"view_comments\">\r\n                View all {comments.length} comments\r\n              </span>\r\n              {latestComments.length\r\n                ? latestComments.map((com) => (\r\n                    <div>\r\n                      <span className=\"post_userName\">\r\n                        <a href={`/${com.username}`} style={{ color: \"black\" }}>\r\n                          {com.userName}\r\n                        </a>\r\n                      </span>\r\n                      &nbsp;\r\n                      {com.comment}\r\n                    </div>\r\n                  ))\r\n                : null}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"compo_grid\">\r\n            <div className=\"heart_grid\">\r\n              <div>\r\n                <i\r\n                  class={`${\r\n                    !post.likes\r\n                      ? `fa fa-heart-o`\r\n                      : post.likes.includes(user.email)\r\n                      ? `fa fa-heart`\r\n                      : `fa fa-heart-o`\r\n                  }`}\r\n                  aria-hidden=\"true\"\r\n                  onClick={handleLike}\r\n                />\r\n                <i class=\"fa fa-comment-o\" aria-hidden=\"true\"></i>\r\n                <i class=\"fa fa-share\" aria-hidden=\"true\"></i>\r\n              </div>\r\n              <i\r\n                className={`${\r\n                  !user.bookmarks\r\n                    ? `fa fa-bookmark-o bookmark`\r\n                    : user.bookmarks.includes(post.id)\r\n                    ? `fa fa-bookmark bookmark`\r\n                    : `fa fa-bookmark-o bookmark`\r\n                }`}\r\n                aria-hidden=\"true\"\r\n                onClick={handleBookmark}\r\n                style={{ marginRight: \"0.5rem\" }}\r\n              ></i>\r\n            </div>\r\n            <div className=\"separate\">\r\n              {post.likes ? (\r\n                <span className=\"likes_div\">{post.likes.length} likes</span>\r\n              ) : (\r\n                <span className=\"likes_div\">0 likes</span>\r\n              )}\r\n            </div>\r\n            <div className=\"text_input_post\">\r\n              <form onSubmit={handleComment}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Add a comment\"\r\n                  onChange={(e) => setComment(e.target.value)}\r\n                  value={comment}\r\n                />\r\n                <button className=\"post_comment\" onClick={handleComment}>\r\n                  Post\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div className=\"hidden_input\">\r\n            <div className=\"text_input_post1\">\r\n              <form onSubmit={handleComment}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Add a comment\"\r\n                  onChange={(e) => setComment(e.target.value)}\r\n                  value={comment}\r\n                />\r\n                <button className=\"post_comment\" type=\"submit\">\r\n                  Post\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Saved.js",["180","181","182","183","184","185","186"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport firebase from \"firebase/app\";\r\nimport Heart from \"../icons/heart.svg\";\r\nimport Upload from \"../icons/upload.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spin } from \"antd\";\r\nimport Loader from \"./Loader\";\r\nconst Saved = (props) => {\r\n  const { user, updateProfile } = useContext(FirebaseContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [posts, setPosts] = useState([]);\r\n  useEffect(() => {\r\n    let x = [];\r\n    let y = [];\r\n    setLoading(true);\r\n\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(user.email)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.data().bookmarks) {\r\n          data.data().bookmarks.forEach((post) => {\r\n            x.push(post);\r\n          });\r\n          if (x.length) {\r\n            firebase\r\n              .firestore()\r\n              .collection(\"posts\")\r\n              .where(\"id\", \"in\", x)\r\n              .get()\r\n              .then((data) => {\r\n                data.docs.forEach((d) => {\r\n                  y.push(d.data());\r\n                });\r\n                setPosts(y);\r\n              });\r\n          }\r\n        } else {\r\n          setPosts(y);\r\n        }\r\n\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spin className=\"spin_loader\" />\r\n      ) : posts.length ? (\r\n        <div className=\"grid_posts\">\r\n          {posts.map((post) => (\r\n            <a href={`posts/${post.id}`}>\r\n              <div className=\"image_1\">\r\n                <img src={post.url} className=\"image_post\" />\r\n                <div className=\"middle1\">\r\n                  <div className=\"text1\">\r\n                    {!post.likes ? (\r\n                      <span>\r\n                        0 <i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                    ) : (\r\n                      <span>\r\n                        {post.likes.length}{\" \"}\r\n                        <i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                    )}\r\n                    &nbsp;&nbsp;\r\n                    {!post.comments ? (\r\n                      <span>\r\n                        0 <i class=\"fa fa-comment-o\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                    ) : (\r\n                      <span>\r\n                        {post.comments.length}{\" \"}\r\n                        <i class=\"fa fa-comment-o\" aria-hidden=\"true\" />\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <img src={Upload} className=\"no_post\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Saved;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Explore.js",["187","188","189","190","191","192","193"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport firebase from \"firebase/app\";\r\nimport Heart from \"../icons/heart.svg\";\r\nimport Upload from \"../icons/upload.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spin } from \"antd\";\r\nimport Loader from \"./Loader\";\r\nconst Explore = (props) => {\r\n  const { user, updateProfile } = useContext(FirebaseContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [posts, setPosts] = useState([]);\r\n  useEffect(() => {\r\n    let x = [];\r\n    firebase\r\n      .firestore()\r\n      .collection(\"posts\")\r\n      .orderBy(\"timestamp\")\r\n      .limit(9)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.docs.length) {\r\n          data.docs.forEach((post) => {\r\n            x.push(post.data());\r\n          });\r\n        }\r\n        setPosts(x);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : posts.length ? (\r\n        <div className=\"grid_posts\">\r\n          {posts.map((post) => (\r\n            <a href={`/posts/${post.id}`}>\r\n              <div className=\"image_1\">\r\n                <img src={post.url} className=\"image_post\" />\r\n                <div className=\"middle1\">\r\n                  <div className=\"text1\">\r\n                    {!post.likes ? (\r\n                      <span>\r\n                        0 <i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                    ) : (\r\n                      <span>\r\n                        {post.likes.length}{\" \"}\r\n                        <i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                    )}\r\n                    &nbsp;&nbsp;\r\n                    {!post.comments ? (\r\n                      <span>\r\n                        0 <i class=\"fa fa-comment-o\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                    ) : (\r\n                      <span>\r\n                        {post.comments.length}{\" \"}\r\n                        <i class=\"fa fa-comment-o\" aria-hidden=\"true\" />\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <img src={Upload} className=\"no_post\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Explore;\r\n",{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":6,"column":25,"nodeType":"200","messageId":"201","endLine":6,"endColumn":34},{"ruleId":"198","severity":1,"message":"202","line":2,"column":31,"nodeType":"200","messageId":"201","endLine":2,"endColumn":39},{"ruleId":"198","severity":1,"message":"203","line":12,"column":10,"nodeType":"200","messageId":"201","endLine":12,"endColumn":14},{"ruleId":"198","severity":1,"message":"204","line":20,"column":11,"nodeType":"200","messageId":"201","endLine":20,"endColumn":19},{"ruleId":"198","severity":1,"message":"205","line":22,"column":10,"nodeType":"200","messageId":"201","endLine":22,"endColumn":18},{"ruleId":"198","severity":1,"message":"206","line":22,"column":20,"nodeType":"200","messageId":"201","endLine":22,"endColumn":31},{"ruleId":"198","severity":1,"message":"207","line":28,"column":5,"nodeType":"200","messageId":"201","endLine":28,"endColumn":20},{"ruleId":"208","severity":1,"message":"209","line":38,"column":6,"nodeType":"210","endLine":38,"endColumn":12,"suggestions":"211"},{"ruleId":"198","severity":1,"message":"212","line":120,"column":13,"nodeType":"200","messageId":"201","endLine":120,"endColumn":24},{"ruleId":"198","severity":1,"message":"213","line":126,"column":13,"nodeType":"200","messageId":"201","endLine":126,"endColumn":22},{"ruleId":"198","severity":1,"message":"214","line":127,"column":13,"nodeType":"200","messageId":"201","endLine":127,"endColumn":25},{"ruleId":"198","severity":1,"message":"215","line":129,"column":13,"nodeType":"200","messageId":"201","endLine":129,"endColumn":18},{"ruleId":"198","severity":1,"message":"216","line":131,"column":13,"nodeType":"200","messageId":"201","endLine":131,"endColumn":23},{"ruleId":"217","severity":1,"message":"218","line":153,"column":15,"nodeType":"219","endLine":153,"endColumn":63},{"ruleId":"198","severity":1,"message":"220","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":27},{"ruleId":"208","severity":1,"message":"221","line":45,"column":6,"nodeType":"210","endLine":45,"endColumn":8,"suggestions":"222"},{"ruleId":"198","severity":1,"message":"223","line":1,"column":8,"nodeType":"200","messageId":"201","endLine":1,"endColumn":13},{"ruleId":"198","severity":1,"message":"224","line":1,"column":10,"nodeType":"200","messageId":"201","endLine":1,"endColumn":13},{"ruleId":"225","severity":1,"message":"226","line":3,"column":1,"nodeType":"227","endLine":34,"endColumn":2},{"ruleId":"228","severity":1,"message":"229","line":4,"column":5,"nodeType":"230","messageId":"231","endLine":33,"endColumn":6},{"ruleId":"198","severity":1,"message":"202","line":2,"column":31,"nodeType":"200","messageId":"201","endLine":2,"endColumn":39},{"ruleId":"198","severity":1,"message":"232","line":4,"column":3,"nodeType":"200","messageId":"201","endLine":4,"endColumn":15},{"ruleId":"198","severity":1,"message":"203","line":12,"column":10,"nodeType":"200","messageId":"201","endLine":12,"endColumn":14},{"ruleId":"198","severity":1,"message":"233","line":15,"column":10,"nodeType":"200","messageId":"201","endLine":15,"endColumn":23},{"ruleId":"208","severity":1,"message":"234","line":36,"column":6,"nodeType":"210","endLine":36,"endColumn":13,"suggestions":"235"},{"ruleId":"208","severity":1,"message":"209","line":40,"column":6,"nodeType":"210","endLine":40,"endColumn":12,"suggestions":"236"},{"ruleId":"198","severity":1,"message":"212","line":95,"column":13,"nodeType":"200","messageId":"201","endLine":95,"endColumn":24},{"ruleId":"198","severity":1,"message":"213","line":101,"column":13,"nodeType":"200","messageId":"201","endLine":101,"endColumn":22},{"ruleId":"198","severity":1,"message":"214","line":102,"column":13,"nodeType":"200","messageId":"201","endLine":102,"endColumn":25},{"ruleId":"198","severity":1,"message":"215","line":104,"column":13,"nodeType":"200","messageId":"201","endLine":104,"endColumn":18},{"ruleId":"198","severity":1,"message":"216","line":106,"column":13,"nodeType":"200","messageId":"201","endLine":106,"endColumn":23},{"ruleId":"217","severity":1,"message":"218","line":123,"column":13,"nodeType":"219","endLine":123,"endColumn":61},{"ruleId":"198","severity":1,"message":"237","line":3,"column":10,"nodeType":"200","messageId":"201","endLine":3,"endColumn":14},{"ruleId":"198","severity":1,"message":"238","line":3,"column":27,"nodeType":"200","messageId":"201","endLine":3,"endColumn":35},{"ruleId":"198","severity":1,"message":"239","line":6,"column":38,"nodeType":"200","messageId":"201","endLine":6,"endColumn":44},{"ruleId":"198","severity":1,"message":"233","line":11,"column":10,"nodeType":"200","messageId":"201","endLine":11,"endColumn":23},{"ruleId":"198","severity":1,"message":"240","line":13,"column":3,"nodeType":"200","messageId":"201","endLine":13,"endColumn":17},{"ruleId":"198","severity":1,"message":"241","line":14,"column":3,"nodeType":"200","messageId":"201","endLine":14,"endColumn":16},{"ruleId":"198","severity":1,"message":"242","line":15,"column":3,"nodeType":"200","messageId":"201","endLine":15,"endColumn":18},{"ruleId":"198","severity":1,"message":"243","line":34,"column":9,"nodeType":"200","messageId":"201","endLine":34,"endColumn":12},{"ruleId":"198","severity":1,"message":"244","line":40,"column":10,"nodeType":"200","messageId":"201","endLine":40,"endColumn":17},{"ruleId":"208","severity":1,"message":"245","line":61,"column":6,"nodeType":"210","endLine":61,"endColumn":8,"suggestions":"246"},{"ruleId":"198","severity":1,"message":"247","line":127,"column":26,"nodeType":"200","messageId":"201","endLine":127,"endColumn":43},{"ruleId":"248","severity":1,"message":"249","line":137,"column":62,"nodeType":"250","messageId":"251","endLine":137,"endColumn":64},{"ruleId":"248","severity":1,"message":"252","line":250,"column":22,"nodeType":"250","messageId":"251","endLine":250,"endColumn":24},{"ruleId":"248","severity":1,"message":"252","line":261,"column":26,"nodeType":"250","messageId":"251","endLine":261,"endColumn":28},{"ruleId":"248","severity":1,"message":"252","line":271,"column":22,"nodeType":"250","messageId":"251","endLine":271,"endColumn":24},{"ruleId":"248","severity":1,"message":"252","line":288,"column":30,"nodeType":"250","messageId":"251","endLine":288,"endColumn":32},{"ruleId":"198","severity":1,"message":"253","line":308,"column":9,"nodeType":"200","messageId":"201","endLine":308,"endColumn":25},{"ruleId":"217","severity":1,"message":"218","line":334,"column":25,"nodeType":"219","endLine":334,"endColumn":56},{"ruleId":"217","severity":1,"message":"218","line":336,"column":25,"nodeType":"219","endLine":336,"endColumn":48},{"ruleId":"217","severity":1,"message":"218","line":383,"column":25,"nodeType":"219","endLine":383,"endColumn":56},{"ruleId":"217","severity":1,"message":"218","line":385,"column":25,"nodeType":"219","endLine":385,"endColumn":48},{"ruleId":"217","severity":1,"message":"218","line":424,"column":19,"nodeType":"219","endLine":424,"endColumn":69},{"ruleId":"217","severity":1,"message":"218","line":426,"column":19,"nodeType":"219","endLine":426,"endColumn":65},{"ruleId":"217","severity":1,"message":"218","line":433,"column":21,"nodeType":"219","endLine":436,"endColumn":23},{"ruleId":"248","severity":1,"message":"252","line":439,"column":36,"nodeType":"250","messageId":"251","endLine":439,"endColumn":38},{"ruleId":"254","severity":1,"message":"255","line":495,"column":23,"nodeType":"219","endLine":499,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":516,"column":19,"nodeType":"219","endLine":519,"endColumn":21},{"ruleId":"217","severity":1,"message":"218","line":521,"column":19,"nodeType":"219","endLine":524,"endColumn":21},{"ruleId":"217","severity":1,"message":"218","line":620,"column":21,"nodeType":"219","endLine":624,"endColumn":23},{"ruleId":"217","severity":1,"message":"218","line":636,"column":23,"nodeType":"219","endLine":636,"endColumn":63},{"ruleId":"198","severity":1,"message":"256","line":11,"column":26,"nodeType":"200","messageId":"201","endLine":11,"endColumn":39},{"ruleId":"198","severity":1,"message":"257","line":12,"column":10,"nodeType":"200","messageId":"201","endLine":12,"endColumn":17},{"ruleId":"198","severity":1,"message":"233","line":13,"column":10,"nodeType":"200","messageId":"201","endLine":13,"endColumn":23},{"ruleId":"198","severity":1,"message":"258","line":16,"column":17,"nodeType":"200","messageId":"201","endLine":16,"endColumn":30},{"ruleId":"248","severity":1,"message":"252","line":106,"column":24,"nodeType":"250","messageId":"251","endLine":106,"endColumn":26},{"ruleId":"217","severity":1,"message":"218","line":121,"column":13,"nodeType":"219","endLine":121,"endColumn":54},{"ruleId":"217","severity":1,"message":"218","line":136,"column":25,"nodeType":"219","endLine":136,"endColumn":75},{"ruleId":"217","severity":1,"message":"218","line":138,"column":25,"nodeType":"219","endLine":138,"endColumn":71},{"ruleId":"217","severity":1,"message":"218","line":152,"column":15,"nodeType":"219","endLine":152,"endColumn":33},{"ruleId":"217","severity":1,"message":"218","line":156,"column":17,"nodeType":"219","endLine":156,"endColumn":66},{"ruleId":"217","severity":1,"message":"218","line":160,"column":15,"nodeType":"219","endLine":164,"endColumn":17},{"ruleId":"217","severity":1,"message":"218","line":169,"column":19,"nodeType":"219","endLine":169,"endColumn":70},{"ruleId":"217","severity":1,"message":"218","line":171,"column":19,"nodeType":"219","endLine":171,"endColumn":66},{"ruleId":"217","severity":1,"message":"218","line":176,"column":15,"nodeType":"219","endLine":176,"endColumn":58},{"ruleId":"194","replacedBy":"259"},{"ruleId":"196","replacedBy":"260"},{"ruleId":"198","severity":1,"message":"261","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":13},{"ruleId":"198","severity":1,"message":"237","line":6,"column":10,"nodeType":"200","messageId":"201","endLine":6,"endColumn":14},{"ruleId":"198","severity":1,"message":"262","line":8,"column":8,"nodeType":"200","messageId":"201","endLine":8,"endColumn":14},{"ruleId":"198","severity":1,"message":"263","line":10,"column":11,"nodeType":"200","messageId":"201","endLine":10,"endColumn":15},{"ruleId":"198","severity":1,"message":"258","line":10,"column":17,"nodeType":"200","messageId":"201","endLine":10,"endColumn":30},{"ruleId":"217","severity":1,"message":"218","line":47,"column":17,"nodeType":"219","endLine":47,"endColumn":62},{"ruleId":"217","severity":1,"message":"218","line":78,"column":9,"nodeType":"219","endLine":78,"endColumn":49},{"ruleId":"198","severity":1,"message":"237","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":14},{"ruleId":"198","severity":1,"message":"238","line":2,"column":27,"nodeType":"200","messageId":"201","endLine":2,"endColumn":35},{"ruleId":"198","severity":1,"message":"258","line":36,"column":17,"nodeType":"200","messageId":"201","endLine":36,"endColumn":30},{"ruleId":"248","severity":1,"message":"252","line":71,"column":25,"nodeType":"250","messageId":"251","endLine":71,"endColumn":27},{"ruleId":"208","severity":1,"message":"264","line":102,"column":6,"nodeType":"210","endLine":102,"endColumn":8,"suggestions":"265"},{"ruleId":"217","severity":1,"message":"218","line":244,"column":17,"nodeType":"219","endLine":244,"endColumn":70},{"ruleId":"217","severity":1,"message":"218","line":267,"column":15,"nodeType":"219","endLine":271,"endColumn":17},{"ruleId":"217","severity":1,"message":"218","line":277,"column":15,"nodeType":"219","endLine":277,"endColumn":69},{"ruleId":"217","severity":1,"message":"218","line":293,"column":23,"nodeType":"219","endLine":293,"endColumn":71},{"ruleId":"198","severity":1,"message":"261","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":13},{"ruleId":"198","severity":1,"message":"237","line":6,"column":10,"nodeType":"200","messageId":"201","endLine":6,"endColumn":14},{"ruleId":"198","severity":1,"message":"262","line":8,"column":8,"nodeType":"200","messageId":"201","endLine":8,"endColumn":14},{"ruleId":"198","severity":1,"message":"258","line":10,"column":17,"nodeType":"200","messageId":"201","endLine":10,"endColumn":30},{"ruleId":"208","severity":1,"message":"266","line":47,"column":6,"nodeType":"210","endLine":47,"endColumn":8,"suggestions":"267"},{"ruleId":"217","severity":1,"message":"218","line":57,"column":17,"nodeType":"219","endLine":57,"endColumn":62},{"ruleId":"217","severity":1,"message":"218","line":88,"column":9,"nodeType":"219","endLine":88,"endColumn":49},{"ruleId":"198","severity":1,"message":"261","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":13},{"ruleId":"198","severity":1,"message":"237","line":6,"column":10,"nodeType":"200","messageId":"201","endLine":6,"endColumn":14},{"ruleId":"198","severity":1,"message":"268","line":7,"column":10,"nodeType":"200","messageId":"201","endLine":7,"endColumn":14},{"ruleId":"198","severity":1,"message":"263","line":10,"column":11,"nodeType":"200","messageId":"201","endLine":10,"endColumn":15},{"ruleId":"198","severity":1,"message":"258","line":10,"column":17,"nodeType":"200","messageId":"201","endLine":10,"endColumn":30},{"ruleId":"217","severity":1,"message":"218","line":40,"column":17,"nodeType":"219","endLine":40,"endColumn":62},{"ruleId":"217","severity":1,"message":"218","line":71,"column":9,"nodeType":"219","endLine":71,"endColumn":49},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"no-unused-vars","'useToasts' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'auth' is defined but never used.","'addToast' is assigned a value but never used.","'userName' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["271"],"'accessToken' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'state.user'. Either include it or remove the dependency array.",["272"],"'React' is defined but never used.","'act' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'UserOutlined' is defined but never used.","'ToastProvider' is defined but never used.","React Hook useEffect has a missing dependency: 'addToast'. Either include it or remove the dependency array.",["273"],["274"],"'Link' is defined but never used.","'Redirect' is defined but never used.","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.","'AppleOutlined' is defined but never used.","'AndroidOutlined' is defined but never used.","'url' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history', 'user.following', and 'userName'. Either include them or remove the dependency array.",["275"],"'setConfirmLoading' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'buttonItemLayout' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'InboxOutlined' is defined but never used.","'NavLink' is defined but never used.","'updateProfile' is assigned a value but never used.",["269"],["270"],"'Heart' is defined but never used.","'Loader' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'postId' and 'props.history'. Either include them or remove the dependency array.",["276"],"React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.",["277"],"'Spin' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"278","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},"Update the dependencies array to be: [props.history, user]",{"range":"291","text":"292"},"Update the dependencies array to be: [state.user]",{"range":"293","text":"294"},"Update the dependencies array to be: [addToast, error]",{"range":"295","text":"296"},{"range":"297","text":"292"},"Update the dependencies array to be: [props.history, user.following, userName]",{"range":"298","text":"299"},"Update the dependencies array to be: [postId, props.history]",{"range":"300","text":"301"},"Update the dependencies array to be: [user.email]",{"range":"302","text":"303"},[1219,1225],"[props.history, user]",[1276,1278],"[state.user]",[1171,1178],"[addToast, error]",[1266,1272],[2119,2121],"[props.history, user.following, userName]",[3145,3147],"[postId, props.history]",[1349,1351],"[user.email]"]