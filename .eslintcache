[{"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\index.js":"1","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\App.js":"2","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Signup.js":"3","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\firebase\\config.js":"4","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FireState.js":"5","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FirebaseContext.js":"6","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FireReducer.js":"7","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Login.js":"8","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Profile.js":"9","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Loader.js":"10","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\PrivateRoutes.js":"11","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Header.js":"12","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\credentials.js":"13","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Posts.js":"14","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Post.js":"15"},{"size":434,"mtime":1609853688756,"results":"16","hashOfConfig":"17"},{"size":1194,"mtime":1610981189891,"results":"18","hashOfConfig":"17"},{"size":8100,"mtime":1610188362635,"results":"19","hashOfConfig":"17"},{"size":190,"mtime":1610865826593,"results":"20","hashOfConfig":"17"},{"size":5713,"mtime":1610986347319,"results":"21","hashOfConfig":"17"},{"size":120,"mtime":1609915551878,"results":"22","hashOfConfig":"17"},{"size":800,"mtime":1610178065587,"results":"23","hashOfConfig":"17"},{"size":6015,"mtime":1610188142280,"results":"24","hashOfConfig":"17"},{"size":20783,"mtime":1610898153852,"results":"25","hashOfConfig":"17"},{"size":396,"mtime":1610184129630,"results":"26","hashOfConfig":"17"},{"size":614,"mtime":1610184116014,"results":"27","hashOfConfig":"17"},{"size":6574,"mtime":1610981243283,"results":"28","hashOfConfig":"17"},{"size":327,"mtime":1610865791395,"results":"29","hashOfConfig":"17"},{"size":2497,"mtime":1610980922936,"results":"30","hashOfConfig":"17"},{"size":3997,"mtime":1610990267198,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1h9jy1v",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\index.js",[],["69","70"],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\App.js",["71"],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Signup.js",["72","73","74","75","76","77","78","79","80","81","82","83","84"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MailOutlined,\r\n  FacebookFilled,\r\n} from \"@ant-design/icons\";\r\nimport InstaImage from \"../images/insta_image.png\";\r\nimport Illustation from \"../images/login_illus.jpg\";\r\nimport \"antd/dist/antd.css\";\r\nimport { auth } from \"../firebase/config\";\r\nimport firebase from \"firebase/app\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Signup = (props) => {\r\n  const { addToast } = useToasts();\r\n  const [form] = Form.useForm();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [loading, setLoading] = useState({});\r\n  const {\r\n    user,\r\n    signup,\r\n    facebookSignup,\r\n    isAuthenticated,\r\n    loading: newLoading,\r\n  } = useContext(FirebaseContext);\r\n\r\n  const onFinish = async (values) => {\r\n    if (!loading?.help2?.length && !loading?.help1?.length)\r\n      await signup(values);\r\n  };\r\n  useEffect(() => {\r\n    if (user) props.history.push(`/${user.userName}`);\r\n  }, [user]);\r\n\r\n  const checkUserName = (e) => {\r\n    setLoading({ ...loading, status1: \"validating\" });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"userName\", \"==\", e.target.value)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.docs.length) {\r\n          setLoading({\r\n            ...loading,\r\n            status1: \"error\",\r\n            help1: \"This username already exists\",\r\n          });\r\n        } else if (e.target.value === \"\") {\r\n          setLoading({\r\n            ...loading,\r\n            status1: \"error\",\r\n            help1: \"Please input your username!\",\r\n          });\r\n        } else {\r\n          setLoading({ ...loading, status1: \"success\", help1: \"\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  const checkEmail = (e) => {\r\n    setLoading({ ...loading, status2: \"validating\" });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"==\", e.target.value)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.docs.length) {\r\n          setLoading({\r\n            ...loading,\r\n            status2: \"error\",\r\n            help2: \"This email already exists\",\r\n          });\r\n        } else if (e.target.value === \"\") {\r\n          setLoading({\r\n            ...loading,\r\n            status2: \"error\",\r\n            help2: \"Please input your email id!\",\r\n          });\r\n        } else if (e.target.value) {\r\n          setLoading({ ...loading, status2: \"success\", help2: \"\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  const [password, setPassword] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    validateStatus: \"\",\r\n    help: \"\",\r\n  });\r\n  const handleClick = (e) => {\r\n    var provider = new firebase.auth.FacebookAuthProvider();\r\n    provider.setCustomParameters({\r\n      display: \"popup\",\r\n    });\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        var credential = result.credential;\r\n\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        let email = user.email,\r\n          name = user.displayName,\r\n          photoURL = user.photoURL;\r\n        facebookSignup({ email, name, photoURL });\r\n\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var accessToken = credential.accessToken;\r\n\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n\r\n        // ...\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ToastProvider>\r\n      <div>\r\n        {newLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div className=\"flex_login\">\r\n            <div>\r\n              <img\r\n                src={Illustation}\r\n                alt=\"illustration\"\r\n                className=\"image_illus\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"signup_form\">\r\n              <img src={InstaImage} className=\"insta_image\" />\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button fb_button\"\r\n                onClick={handleClick}\r\n              >\r\n                <FacebookFilled width=\"2rem\" /> Signup with Facebook\r\n              </Button>\r\n\r\n              <span className=\"breaker\">OR</span>\r\n              <Form\r\n                form={form}\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                onFinish={onFinish}\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  hasFeedback\r\n                  validateStatus={loading.status2}\r\n                  help={loading.help2}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your email id!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={checkEmail}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your Name!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    placeholder=\"Full Name\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"userName\"\r\n                  hasFeedback\r\n                  validateStatus={loading.status1}\r\n                  help={loading.help1}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your Username!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    placeholder=\"Username\"\r\n                    onChange={checkUserName}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  allowClear\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your Password!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    onChange={(e) =>\r\n                      setPassword({ ...password, password: e.target.value })\r\n                    }\r\n                    placeholder=\"Password\"\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                    style={{ margin: \"auto 0.5rem\" }}\r\n                  >\r\n                    Signup\r\n                  </Button>\r\n                  Or <Link to=\"/\">login now!</Link>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </ToastProvider>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\firebase\\config.js",[],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FireState.js",["85","86"],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FirebaseContext.js",["87"],"import React, { createContext } from \"react\";\r\nconst FirebaseContext = createContext();\r\nexport default FirebaseContext;","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FireReducer.js",["88","89","90"],"import { act } from \"react-dom/test-utils\";\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n      case \"USER_LOADED\":\r\n          let isAuth = false;\r\n          if(action.payload)\r\n            isAuth = true\r\n        return {\r\n          ...state,\r\n          isAuthenticated: isAuth,\r\n          loading: false,\r\n          user : action.payload\r\n        };\r\n        case \"SIGNUP\":\r\n          return {\r\n            ...state,\r\n            isAuthenticated: true,\r\n            loading: false,\r\n            user : action.payload\r\n          };\r\n        case \"SET_ERROR\":\r\n          return {\r\n            ...state,\r\n            error : action.payload\r\n          }\r\n        case \"REMOVE_ERROR\":\r\n          return{\r\n            ...state,\r\n            error : null\r\n          }\r\n     \r\n    }\r\n}","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Login.js",["91","92","93","94","95","96","97","98","99","100","101","102"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MailOutlined,\r\n  FacebookFilled,\r\n} from \"@ant-design/icons\";\r\nimport InstaImage from \"../images/insta_image.png\";\r\nimport Illustation from \"../images/login_illus.jpg\";\r\nimport \"antd/dist/antd.css\";\r\nimport { auth } from \"../firebase/config\";\r\nimport firebase from \"firebase/app\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Login = (props) => {\r\n  const [form] = Form.useForm();\r\n  const { addToast } = useToasts();\r\n  const [loading, setLoading] = useState({});\r\n  const {\r\n    user,\r\n    login,\r\n    facebookSignup,\r\n    error,\r\n    loading: newLoading,\r\n  } = useContext(FirebaseContext);\r\n\r\n  const onFinish = async (values) => {\r\n    if (!loading?.help2?.length && !loading?.help1?.length) await login(values);\r\n  };\r\n  useEffect(() => {\r\n    if (error) addToast(error, { appearance: \"error\", autoDismiss: true });\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (user) props.history.push(`/${user.userName}`);\r\n  }, [user]);\r\n\r\n  const checkEmail = (e) => {\r\n    setLoading({ ...loading, status2: \"validating\" });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"==\", e.target.value)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (!data.docs.length) {\r\n          setLoading({\r\n            ...loading,\r\n            status2: \"error\",\r\n            help2: \"This account is not registered\",\r\n          });\r\n        } else if (e.target.value === \"\") {\r\n          setLoading({\r\n            ...loading,\r\n            status2: \"error\",\r\n            help2: \"Please input your email id!\",\r\n          });\r\n        } else if (e.target.value) {\r\n          setLoading({ ...loading, status2: \"success\", help2: \"\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  const [password, setPassword] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    validateStatus: \"\",\r\n    help: \"\",\r\n  });\r\n  const handleClick = (e) => {\r\n    var provider = new firebase.auth.FacebookAuthProvider();\r\n    provider.setCustomParameters({\r\n      display: \"popup\",\r\n    });\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        var credential = result.credential;\r\n\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        let email = user.email,\r\n          name = user.displayName,\r\n          photoURL = user.photoURL;\r\n        facebookSignup({ email, name, photoURL });\r\n\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var accessToken = credential.accessToken;\r\n\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n\r\n        // ...\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {newLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"flex_login\">\r\n          <div>\r\n            <img src={Illustation} alt=\"illustration\" className=\"image_illus\" />\r\n          </div>\r\n\r\n          <div className=\"signup_form\">\r\n            <img src={InstaImage} className=\"insta_image\" />\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button fb_button\"\r\n              onClick={handleClick}\r\n            >\r\n              <FacebookFilled width=\"2rem\" /> Login with Facebook\r\n            </Button>\r\n\r\n            <span className=\"breaker\">OR</span>\r\n            <Form\r\n              form={form}\r\n              name=\"normal_login\"\r\n              className=\"login-form\"\r\n              onFinish={onFinish}\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n            >\r\n              <Form.Item\r\n                name=\"email\"\r\n                hasFeedback\r\n                validateStatus={loading.status2}\r\n                help={loading.help2}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your email id!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={checkEmail}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"password\"\r\n                allowClear\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your Password!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  onChange={(e) =>\r\n                    setPassword({ ...password, password: e.target.value })\r\n                  }\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"login-form-button\"\r\n                  style={{ margin: \"auto 0.5rem\" }}\r\n                >\r\n                  Login\r\n                </Button>\r\n                Or <Link to=\"/signup\">signup now!</Link>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Profile.js",["103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131"],"import FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link, useParams, Redirect } from \"react-router-dom\";\r\nimport UserImage from \"../images/user.svg\";\r\nimport firebase from \"firebase/app\";\r\nimport { Button, Modal, Form, Input, Upload, Tabs } from \"antd\";\r\nimport Loader from \"./Loader\";\r\nimport Posts from \"./Posts\";\r\nimport PostImage from \"../icons/posts.png\";\r\nimport Bookmark from \"../icons/bookmark.svg\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\nimport {\r\n  UploadOutlined,\r\n  AppleOutlined,\r\n  AndroidOutlined,\r\n} from \"@ant-design/icons\";\r\nimport ImgCrop from \"antd-img-crop\";\r\nimport \"antd/es/modal/style\";\r\nimport \"antd/es/slider/style\";\r\nconst Profile = (props) => {\r\n  const [contextUser, setContextUser] = useState(null);\r\n  const { addToast } = useToasts();\r\n  const [follow, setFollow] = useState(null);\r\n  const { user, updateProfile } = useContext(FirebaseContext);\r\n  let { userName } = useParams();\r\n  const [file, setFile] = useState(null);\r\n  const { TabPane } = Tabs;\r\n  const [User, setUser] = useState(null);\r\n  const normFile = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n  const [loading, setLoading] = useState(true);\r\n  const [validation, setValidation] = useState({});\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"userName\", \"==\", userName)\r\n      .onSnapshot((snap) => {\r\n        if (!snap.docs.length) props.history.push(\"/\");\r\n        else {\r\n          setUser(snap.docs[0].data());\r\n          if (\r\n            user.following &&\r\n            user.following.includes(snap.docs[0].data().email)\r\n          ) {\r\n            setFollow(true);\r\n          } else setFollow(false);\r\n          setLoading(false);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const [follwers_show, setFollowers_show] = useState(null);\r\n  const [follwing_show, setFollowing_show] = useState(null);\r\n  const [isModalVisible1, setIsModalVisible1] = useState(false);\r\n  const [isModalVisible2, setIsModalVisible2] = useState(false);\r\n\r\n  const showModal1 = () => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"in\", User.followers)\r\n      .get()\r\n      .then((data) => {\r\n        let x = data.docs;\r\n        x = x.map((data) => {\r\n          let obj = {};\r\n          const { name, email, userName, photoURL } = data.data();\r\n          obj.email = email;\r\n          obj.name = name;\r\n          obj.userName = userName;\r\n          obj.photoURL = photoURL;\r\n          return obj;\r\n        });\r\n        setFollowers_show(x);\r\n        setIsModalVisible1(true);\r\n      });\r\n  };\r\n  const showModal2 = () => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"in\", User.following)\r\n      .get()\r\n      .then((data) => {\r\n        let x = data.docs;\r\n        x = x.map((data) => {\r\n          let obj = {};\r\n          const { name, email, userName, photoURL } = data.data();\r\n          obj.email = email;\r\n          obj.name = name;\r\n          obj.userName = userName;\r\n          obj.photoURL = photoURL;\r\n          return obj;\r\n        });\r\n        setFollowing_show(x);\r\n        setIsModalVisible2(true);\r\n      });\r\n  };\r\n  const handleOk2 = () => {\r\n    setIsModalVisible2(false);\r\n  };\r\n\r\n  const handleCancel2 = () => {\r\n    setIsModalVisible2(false);\r\n  };\r\n\r\n  const handleOk1 = () => {\r\n    setIsModalVisible1(false);\r\n  };\r\n\r\n  const handleCancel1 = () => {\r\n    setIsModalVisible1(false);\r\n  };\r\n\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n  const handleUserName = (e) => {\r\n    setValidation({ ...validation, status: \"validaing\" });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"userName\", \"==\", e.target.value)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.docs.length && data.docs[0].data().userName != user.userName) {\r\n          setValidation({\r\n            ...validation,\r\n            status1: \"error\",\r\n            help1: \"This username already exists\",\r\n          });\r\n        } else if (e.target.value === \"\") {\r\n          setValidation({\r\n            ...validation,\r\n            status1: \"error\",\r\n            help1: \"Please input your username!\",\r\n          });\r\n        } else {\r\n          setValidation({ ...validation, status1: \"success\", help1: \"\" });\r\n        }\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    setContextUser(user);\r\n    if (User) {\r\n      if (user.following && user.following.includes(User.email))\r\n        setFollow(true);\r\n      else setFollow(false);\r\n    }\r\n  }, [user, User]);\r\n\r\n  const [form] = Form.useForm();\r\n  const [formLayout, setFormLayout] = useState(\"horizontal\");\r\n  const handleFinish = async (values) => {\r\n    if (!validation?.help1?.length) {\r\n      values.file = file;\r\n      await updateProfile(values);\r\n      setVisible(false);\r\n      addToast(\"Profile Updated Successfully\", {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n      });\r\n    }\r\n  };\r\n  const onFormLayoutChange = ({ layout }) => {\r\n    setFormLayout(layout);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n  const handleFollow = () => {\r\n    let following = user.following;\r\n    if (!following) {\r\n      following = [];\r\n    }\r\n    following.push(User.email);\r\n    firebase\r\n      .firestore()\r\n      .doc(`/users/${contextUser.email}`)\r\n      .update({\r\n        following: following,\r\n      })\r\n      .then(() => {\r\n        let followers = User.followers;\r\n        if (!followers) followers = [];\r\n        followers.push(contextUser.email);\r\n        firebase.firestore().doc(`/users/${User.email}`).update({\r\n          followers: followers,\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleFollow1 = (userEmail) => {\r\n    let following = user.following;\r\n    if (!following) {\r\n      following = [];\r\n    }\r\n    following.push(userEmail);\r\n    firebase\r\n      .firestore()\r\n      .doc(`/users/${contextUser.email}`)\r\n      .update({\r\n        following: following,\r\n      })\r\n      .then(() => {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .doc(userEmail)\r\n          .get()\r\n          .then((data) => {\r\n            let followers = data.data().followers;\r\n            if (!followers) followers = [];\r\n            followers.push(contextUser.email);\r\n            firebase.firestore().collection(\"users\").doc(userEmail).update({\r\n              followers: followers,\r\n            });\r\n          });\r\n      });\r\n  };\r\n\r\n  const handleUnFollow = () => {\r\n    let following = user.following;\r\n    following = following.filter((user1) => {\r\n      return !(user1 == User.email);\r\n    });\r\n    firebase\r\n      .firestore()\r\n      .doc(`/users/${contextUser.email}`)\r\n      .update({\r\n        following: following,\r\n      })\r\n      .then(() => {\r\n        let followers = User.followers;\r\n        followers = followers.filter((user2) => {\r\n          return !(user2 == contextUser.email);\r\n        });\r\n        firebase.firestore().doc(`/users/${User.email}`).update({\r\n          followers: followers,\r\n        });\r\n      });\r\n  };\r\n  const handleUnFollow1 = (userEmail) => {\r\n    let following = user.following;\r\n    following = following.filter((user1) => {\r\n      return !(user1 == userEmail);\r\n    });\r\n    firebase\r\n      .firestore()\r\n      .doc(`/users/${contextUser.email}`)\r\n      .update({\r\n        following: following,\r\n      })\r\n      .then(() => {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .doc(userEmail)\r\n          .get()\r\n          .then((data) => {\r\n            let followers = data.data().followers;\r\n            followers = followers.filter((user2) => {\r\n              return !(user2 == contextUser.email);\r\n            });\r\n            firebase.firestore().doc(`/users/${userEmail}`).update({\r\n              followers: followers,\r\n            });\r\n          });\r\n      });\r\n  };\r\n\r\n  const formItemLayout =\r\n    formLayout === \"horizontal\"\r\n      ? {\r\n          labelCol: {\r\n            span: 4,\r\n          },\r\n          wrapperCol: {\r\n            span: 14,\r\n          },\r\n        }\r\n      : null;\r\n  const buttonItemLayout =\r\n    formLayout === \"horizontal\"\r\n      ? {\r\n          wrapperCol: {\r\n            span: 14,\r\n            offset: 4,\r\n          },\r\n        }\r\n      : null;\r\n\r\n  return (\r\n    <ImgCrop>\r\n      <div>\r\n        {User ? (\r\n          <div>\r\n            <Modal\r\n              title=\"Followers\"\r\n              visible={isModalVisible1}\r\n              onOk={handleOk1}\r\n              onCancel={handleCancel1}\r\n              footer={null}\r\n            >\r\n              {follwers_show\r\n                ? follwers_show.map((follower) => (\r\n                    <div className=\"modal_div\">\r\n                      {follower.photoURL ? (\r\n                        <img src={follower.photoURL} />\r\n                      ) : (\r\n                        <img src={UserImage} />\r\n                      )}\r\n                      <div className=\"modal_div_grid\">\r\n                        <a href={follower.userName}>\r\n                          <span className=\"modal_div_userName\">\r\n                            {follower.userName}\r\n                          </span>\r\n                        </a>\r\n                        <span className=\"modal_div_name\">\r\n                          {follower.userName}\r\n                        </span>\r\n                      </div>\r\n                      <div>\r\n                        {follower.email ===\r\n                        contextUser.email ? null : contextUser.following.includes(\r\n                            follower.email\r\n                          ) ? (\r\n                          <button\r\n                            className=\"edit_btn\"\r\n                            onClick={() => handleUnFollow1(follower.email)}\r\n                          >\r\n                            Unfollow\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            className=\"follow_btn\"\r\n                            onClick={() => handleFollow1(follower.email)}\r\n                          >\r\n                            Follow\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                : null}\r\n            </Modal>\r\n            <Modal\r\n              title=\"Following\"\r\n              visible={isModalVisible2}\r\n              onOk={handleOk2}\r\n              onCancel={handleCancel2}\r\n              footer={null}\r\n            >\r\n              {follwing_show\r\n                ? follwing_show.map((follower) => (\r\n                    <div className=\"modal_div\">\r\n                      {follower.photoURL ? (\r\n                        <img src={follower.photoURL} />\r\n                      ) : (\r\n                        <img src={UserImage} />\r\n                      )}\r\n                      <div className=\"modal_div_grid\">\r\n                        <a href={follower.userName}>\r\n                          <span className=\"modal_div_userName\">\r\n                            {follower.userName}\r\n                          </span>\r\n                        </a>\r\n                        <span className=\"modal_div_name\">\r\n                          {follower.userName}\r\n                        </span>\r\n                      </div>\r\n                      <div>\r\n                        {follower.email ===\r\n                        contextUser.email ? null : contextUser.following.includes(\r\n                            follower.email\r\n                          ) ? (\r\n                          <button\r\n                            className=\"edit_btn\"\r\n                            onClick={() => handleUnFollow1(follower.email)}\r\n                          >\r\n                            Unfollow\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            className=\"follow_btn\"\r\n                            onClick={() => handleFollow1(follower.email)}\r\n                          >\r\n                            Follow\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                : null}\r\n            </Modal>\r\n            <div className=\"profile_grid\">\r\n              <div className=\"profile_image\">\r\n                {User.photoURL ? (\r\n                  <img src={User.photoURL} className=\"user_image\" />\r\n                ) : (\r\n                  <img src={UserImage} className=\"user_image\" />\r\n                )}\r\n              </div>\r\n              <div className=\"flex_info\">\r\n                <span className=\"userName_profile\">\r\n                  {User.userName}{\" \"}\r\n                  {User.admin ? (\r\n                    <img\r\n                      src=\"https://www.flaticon.com/svg/static/icons/svg/1271/1271380.svg\"\r\n                      className=\"verify_icons\"\r\n                    />\r\n                  ) : null}{\" \"}\r\n                </span>{\" \"}\r\n                {contextUser.email == User.email ? (\r\n                  <button className=\"edit_btn1\" onClick={showModal}>\r\n                    Edit Profile\r\n                  </button>\r\n                ) : follow ? (\r\n                  <button className=\"edit_btn\" onClick={handleUnFollow}>\r\n                    Unfollow\r\n                  </button>\r\n                ) : (\r\n                  <button className=\"follow_btn\" onClick={handleFollow}>\r\n                    Follow\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <div className=\"info_profile\">\r\n                <div className=\"info_grid\">\r\n                  {!User.posts ? (\r\n                    <div>\r\n                      <span className=\"span_1\">0 </span>\r\n                      <span className=\"span_2\">posts</span>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <span>{User.posts.length} </span>\r\n                      <span>posts</span>\r\n                    </div>\r\n                  )}\r\n                  {!User.followers || !User.followers.length ? (\r\n                    <div>\r\n                      <span className=\"span_1\">0 </span>\r\n                      <span className=\"span_2\">followers</span>\r\n                    </div>\r\n                  ) : (\r\n                    <div onClick={showModal1} className=\"pointer_div\">\r\n                      <span className=\"span_1\">{User.followers.length} </span>\r\n                      <span className=\"span_2\">followers</span>\r\n                    </div>\r\n                  )}\r\n                  {!User.following || !User.following.length ? (\r\n                    <div>\r\n                      <span className=\"span_1\">0 </span>\r\n                      <span className=\"span_2\">following</span>\r\n                    </div>\r\n                  ) : (\r\n                    <div onClick={showModal2} className=\"pointer_div\">\r\n                      <span className=\"span_1 \">{User.following.length} </span>\r\n                      <span className=\"span_2\">following</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <div>\r\n                    <span className=\"user_name_style\">{User.name}</span>\r\n                  </div>\r\n                  <div>\r\n                    {User.bio ? (\r\n                      <div className=\"bio_div\">{User.bio}</div>\r\n                    ) : null}\r\n                  </div>\r\n                  {User.website ? (\r\n                    <div>\r\n                      <a\r\n                        href={User.website}\r\n                        target=\"_blank\"\r\n                        className=\"website_div\"\r\n                      >\r\n                        {User.website}\r\n                      </a>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Modal\r\n              title=\"Edit Profile\"\r\n              visible={visible}\r\n              confirmLoading={confirmLoading}\r\n              okButtonProps={{ style: { display: \"none\" } }}\r\n              onCancel={handleCancel}\r\n            >\r\n              <div className=\"image_div\">\r\n                {User.photoURL ? (\r\n                  <img src={User.photoURL} className=\"edit_image\" />\r\n                ) : (\r\n                  <img src={UserImage} className=\"edit_image\" />\r\n                )}{\" \"}\r\n                <div className=\"edit_userName\">{user.userName}</div>\r\n                <br />\r\n                <label for=\"file-upload\" class=\"image_upload\">\r\n                  <span id=\"profile_btn\">Choose profile photo</span>\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"file-upload\"\r\n                  name=\"avatar\"\r\n                  accept=\"image/*\"\r\n                  onChange={normFile}\r\n                />\r\n              </div>\r\n              <Form\r\n                {...formItemLayout}\r\n                layout={formLayout}\r\n                form={form}\r\n                style={{ marginTop: \"2rem\" }}\r\n                onFinish={handleFinish}\r\n                initialValues={{\r\n                  layout: formLayout,\r\n                  username: User.userName,\r\n                  email: User.email,\r\n                  name: User.name,\r\n                  bio: User.bio,\r\n                  website: User.website,\r\n                }}\r\n                onValuesChange={onFormLayoutChange}\r\n              >\r\n                <Form.Item label=\"Email\">\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    noStyle\r\n                    rules={[\r\n                      { required: true, message: \"Username is required\" },\r\n                    ]}\r\n                  >\r\n                    <Input placeholder=\"Please input\" disabled />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item label=\"Username\">\r\n                  <Form.Item\r\n                    name=\"username\"\r\n                    hasFeedback\r\n                    validateStatus={validation.status1}\r\n                    style={{ height: \"30px\" }}\r\n                    help={validation.help1}\r\n                    rules={[\r\n                      { required: true, message: \"Username is required\" },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      placeholder=\"Please input\"\r\n                      onChange={handleUserName}\r\n                    />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item label=\"Website\">\r\n                  <Form.Item name=\"website\" style={{ height: \"30px\" }}>\r\n                    <Input placeholder=\"Your website\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Name\">\r\n                  <Form.Item\r\n                    name=\"name\"\r\n                    noStyle\r\n                    rules={[{ required: true, message: \"Name is required\" }]}\r\n                  >\r\n                    <Input placeholder=\"Your name\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Bio\">\r\n                  <Form.Item name=\"bio\" noStyle>\r\n                    <Input.TextArea />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                    style={{ margin: \"auto 0\" }}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </Modal>\r\n            <Tabs defaultActiveKey=\"1\" centered=\"true\">\r\n              <TabPane\r\n                tab={\r\n                  <span>\r\n                    <img src={PostImage} className=\"icons\" />\r\n                    Posts\r\n                  </span>\r\n                }\r\n                key=\"1\"\r\n              >\r\n                <Posts userName={userName} />\r\n              </TabPane>\r\n              <TabPane\r\n                tab={\r\n                  <span>\r\n                    <img src={Bookmark} className=\"icons\" />\r\n                    Saved\r\n                  </span>\r\n                }\r\n                key=\"2\"\r\n              ></TabPane>\r\n            </Tabs>\r\n            ,\r\n          </div>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </div>\r\n    </ImgCrop>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Loader.js",[],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\PrivateRoutes.js",[],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Header.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145"],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\credentials.js",[],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Posts.js",["146","147","148","149","150","151"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport firebase from \"firebase/app\";\r\nimport Heart from \"../icons/heart.svg\";\r\nimport Upload from \"../icons/upload.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Posts = (props) => {\r\n  const { user, updateProfile } = useContext(FirebaseContext);\r\n  const [posts, setPosts] = useState([]);\r\n  useEffect(() => {\r\n    if (props.userName) {\r\n      let x = [];\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .where(\"userName\", \"==\", props.userName)\r\n        .get()\r\n        .then((u) => {\r\n          firebase\r\n            .firestore()\r\n            .collection(\"posts\")\r\n            .where(\"email\", \"==\", u.docs[0].data().email)\r\n            .get()\r\n            .then((data) => {\r\n              data.docs.forEach((post) => {\r\n                x.push(post.data());\r\n              });\r\n              setPosts(x);\r\n            });\r\n        });\r\n    }\r\n  }, [props.userName]);\r\n  return (\r\n    <div>\r\n      {posts.length ? (\r\n        <div className=\"grid_posts\">\r\n          {posts.map((post) => (\r\n            <a href={`posts/${post.id}`}>\r\n              <div className=\"image_1\">\r\n                <img src={post.url} className=\"image_post\" />\r\n                <div className=\"middle1\">\r\n                  <div className=\"text1\">\r\n                    {!post.likes ? (\r\n                      <span>\r\n                        0 <i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                    ) : (\r\n                      <span>\r\n                        {post.likes.length}{\" \"}\r\n                        <i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                    )}\r\n                    &nbsp;&nbsp;\r\n                    {!post.comments ? (\r\n                      <span>\r\n                        0 <i class=\"fa fa-comment-o\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                    ) : (\r\n                      <span>\r\n                        {post.comments.length}{\" \"}\r\n                        <i class=\"fa fa-comment-o\" aria-hidden=\"true\" />\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <img src={Upload} className=\"no_post\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Post.js",["152","153","154","155","156","157","158"],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":6,"column":25,"nodeType":"165","messageId":"166","endLine":6,"endColumn":34},{"ruleId":"163","severity":1,"message":"167","line":2,"column":31,"nodeType":"165","messageId":"166","endLine":2,"endColumn":39},{"ruleId":"163","severity":1,"message":"168","line":12,"column":10,"nodeType":"165","messageId":"166","endLine":12,"endColumn":14},{"ruleId":"163","severity":1,"message":"169","line":20,"column":11,"nodeType":"165","messageId":"166","endLine":20,"endColumn":19},{"ruleId":"163","severity":1,"message":"170","line":22,"column":10,"nodeType":"165","messageId":"166","endLine":22,"endColumn":18},{"ruleId":"163","severity":1,"message":"171","line":22,"column":20,"nodeType":"165","messageId":"166","endLine":22,"endColumn":31},{"ruleId":"163","severity":1,"message":"172","line":28,"column":5,"nodeType":"165","messageId":"166","endLine":28,"endColumn":20},{"ruleId":"173","severity":1,"message":"174","line":38,"column":6,"nodeType":"175","endLine":38,"endColumn":12,"suggestions":"176"},{"ruleId":"163","severity":1,"message":"177","line":120,"column":13,"nodeType":"165","messageId":"166","endLine":120,"endColumn":24},{"ruleId":"163","severity":1,"message":"178","line":126,"column":13,"nodeType":"165","messageId":"166","endLine":126,"endColumn":22},{"ruleId":"163","severity":1,"message":"179","line":127,"column":13,"nodeType":"165","messageId":"166","endLine":127,"endColumn":25},{"ruleId":"163","severity":1,"message":"180","line":129,"column":13,"nodeType":"165","messageId":"166","endLine":129,"endColumn":18},{"ruleId":"163","severity":1,"message":"181","line":131,"column":13,"nodeType":"165","messageId":"166","endLine":131,"endColumn":23},{"ruleId":"182","severity":1,"message":"183","line":153,"column":15,"nodeType":"184","endLine":153,"endColumn":63},{"ruleId":"163","severity":1,"message":"185","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":27},{"ruleId":"173","severity":1,"message":"186","line":45,"column":6,"nodeType":"175","endLine":45,"endColumn":8,"suggestions":"187"},{"ruleId":"163","severity":1,"message":"188","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"163","severity":1,"message":"189","line":1,"column":10,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"190","severity":1,"message":"191","line":3,"column":1,"nodeType":"192","endLine":34,"endColumn":2},{"ruleId":"193","severity":1,"message":"194","line":4,"column":5,"nodeType":"195","messageId":"196","endLine":33,"endColumn":6},{"ruleId":"163","severity":1,"message":"167","line":2,"column":31,"nodeType":"165","messageId":"166","endLine":2,"endColumn":39},{"ruleId":"163","severity":1,"message":"197","line":4,"column":3,"nodeType":"165","messageId":"166","endLine":4,"endColumn":15},{"ruleId":"163","severity":1,"message":"168","line":12,"column":10,"nodeType":"165","messageId":"166","endLine":12,"endColumn":14},{"ruleId":"163","severity":1,"message":"198","line":15,"column":10,"nodeType":"165","messageId":"166","endLine":15,"endColumn":23},{"ruleId":"173","severity":1,"message":"199","line":36,"column":6,"nodeType":"175","endLine":36,"endColumn":13,"suggestions":"200"},{"ruleId":"173","severity":1,"message":"174","line":40,"column":6,"nodeType":"175","endLine":40,"endColumn":12,"suggestions":"201"},{"ruleId":"163","severity":1,"message":"177","line":95,"column":13,"nodeType":"165","messageId":"166","endLine":95,"endColumn":24},{"ruleId":"163","severity":1,"message":"178","line":101,"column":13,"nodeType":"165","messageId":"166","endLine":101,"endColumn":22},{"ruleId":"163","severity":1,"message":"179","line":102,"column":13,"nodeType":"165","messageId":"166","endLine":102,"endColumn":25},{"ruleId":"163","severity":1,"message":"180","line":104,"column":13,"nodeType":"165","messageId":"166","endLine":104,"endColumn":18},{"ruleId":"163","severity":1,"message":"181","line":106,"column":13,"nodeType":"165","messageId":"166","endLine":106,"endColumn":23},{"ruleId":"182","severity":1,"message":"183","line":123,"column":13,"nodeType":"184","endLine":123,"endColumn":61},{"ruleId":"163","severity":1,"message":"202","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":14},{"ruleId":"163","severity":1,"message":"203","line":3,"column":27,"nodeType":"165","messageId":"166","endLine":3,"endColumn":35},{"ruleId":"163","severity":1,"message":"204","line":6,"column":38,"nodeType":"165","messageId":"166","endLine":6,"endColumn":44},{"ruleId":"163","severity":1,"message":"198","line":11,"column":10,"nodeType":"165","messageId":"166","endLine":11,"endColumn":23},{"ruleId":"163","severity":1,"message":"205","line":13,"column":3,"nodeType":"165","messageId":"166","endLine":13,"endColumn":17},{"ruleId":"163","severity":1,"message":"206","line":14,"column":3,"nodeType":"165","messageId":"166","endLine":14,"endColumn":16},{"ruleId":"163","severity":1,"message":"207","line":15,"column":3,"nodeType":"165","messageId":"166","endLine":15,"endColumn":18},{"ruleId":"163","severity":1,"message":"208","line":32,"column":10,"nodeType":"165","messageId":"166","endLine":32,"endColumn":17},{"ruleId":"173","severity":1,"message":"209","line":53,"column":6,"nodeType":"175","endLine":53,"endColumn":8,"suggestions":"210"},{"ruleId":"163","severity":1,"message":"211","line":119,"column":26,"nodeType":"165","messageId":"166","endLine":119,"endColumn":43},{"ruleId":"212","severity":1,"message":"213","line":129,"column":62,"nodeType":"214","messageId":"215","endLine":129,"endColumn":64},{"ruleId":"212","severity":1,"message":"216","line":233,"column":22,"nodeType":"214","messageId":"215","endLine":233,"endColumn":24},{"ruleId":"212","severity":1,"message":"216","line":244,"column":26,"nodeType":"214","messageId":"215","endLine":244,"endColumn":28},{"ruleId":"212","severity":1,"message":"216","line":254,"column":22,"nodeType":"214","messageId":"215","endLine":254,"endColumn":24},{"ruleId":"212","severity":1,"message":"216","line":271,"column":30,"nodeType":"214","messageId":"215","endLine":271,"endColumn":32},{"ruleId":"163","severity":1,"message":"217","line":291,"column":9,"nodeType":"165","messageId":"166","endLine":291,"endColumn":25},{"ruleId":"182","severity":1,"message":"183","line":317,"column":25,"nodeType":"184","endLine":317,"endColumn":56},{"ruleId":"182","severity":1,"message":"183","line":319,"column":25,"nodeType":"184","endLine":319,"endColumn":48},{"ruleId":"182","severity":1,"message":"183","line":366,"column":25,"nodeType":"184","endLine":366,"endColumn":56},{"ruleId":"182","severity":1,"message":"183","line":368,"column":25,"nodeType":"184","endLine":368,"endColumn":48},{"ruleId":"182","severity":1,"message":"183","line":407,"column":19,"nodeType":"184","endLine":407,"endColumn":69},{"ruleId":"182","severity":1,"message":"183","line":409,"column":19,"nodeType":"184","endLine":409,"endColumn":65},{"ruleId":"182","severity":1,"message":"183","line":416,"column":21,"nodeType":"184","endLine":419,"endColumn":23},{"ruleId":"212","severity":1,"message":"216","line":422,"column":36,"nodeType":"214","messageId":"215","endLine":422,"endColumn":38},{"ruleId":"218","severity":1,"message":"219","line":484,"column":23,"nodeType":"184","endLine":488,"endColumn":24},{"ruleId":"182","severity":1,"message":"183","line":505,"column":19,"nodeType":"184","endLine":505,"endColumn":69},{"ruleId":"182","severity":1,"message":"183","line":507,"column":19,"nodeType":"184","endLine":507,"endColumn":65},{"ruleId":"182","severity":1,"message":"183","line":603,"column":21,"nodeType":"184","endLine":603,"endColumn":62},{"ruleId":"182","severity":1,"message":"183","line":614,"column":21,"nodeType":"184","endLine":614,"endColumn":61},{"ruleId":"163","severity":1,"message":"220","line":11,"column":26,"nodeType":"165","messageId":"166","endLine":11,"endColumn":39},{"ruleId":"163","severity":1,"message":"221","line":12,"column":10,"nodeType":"165","messageId":"166","endLine":12,"endColumn":17},{"ruleId":"163","severity":1,"message":"198","line":13,"column":10,"nodeType":"165","messageId":"166","endLine":13,"endColumn":23},{"ruleId":"163","severity":1,"message":"222","line":16,"column":17,"nodeType":"165","messageId":"166","endLine":16,"endColumn":30},{"ruleId":"212","severity":1,"message":"216","line":106,"column":24,"nodeType":"214","messageId":"215","endLine":106,"endColumn":26},{"ruleId":"182","severity":1,"message":"183","line":121,"column":13,"nodeType":"184","endLine":121,"endColumn":54},{"ruleId":"182","severity":1,"message":"183","line":136,"column":25,"nodeType":"184","endLine":136,"endColumn":75},{"ruleId":"182","severity":1,"message":"183","line":138,"column":25,"nodeType":"184","endLine":138,"endColumn":71},{"ruleId":"182","severity":1,"message":"183","line":152,"column":15,"nodeType":"184","endLine":152,"endColumn":33},{"ruleId":"182","severity":1,"message":"183","line":155,"column":15,"nodeType":"184","endLine":155,"endColumn":64},{"ruleId":"182","severity":1,"message":"183","line":158,"column":15,"nodeType":"184","endLine":162,"endColumn":17},{"ruleId":"182","severity":1,"message":"183","line":167,"column":19,"nodeType":"184","endLine":167,"endColumn":70},{"ruleId":"182","severity":1,"message":"183","line":169,"column":19,"nodeType":"184","endLine":169,"endColumn":66},{"ruleId":"182","severity":1,"message":"183","line":174,"column":15,"nodeType":"184","endLine":174,"endColumn":58},{"ruleId":"163","severity":1,"message":"223","line":4,"column":8,"nodeType":"165","messageId":"166","endLine":4,"endColumn":13},{"ruleId":"163","severity":1,"message":"202","line":6,"column":10,"nodeType":"165","messageId":"166","endLine":6,"endColumn":14},{"ruleId":"163","severity":1,"message":"224","line":8,"column":11,"nodeType":"165","messageId":"166","endLine":8,"endColumn":15},{"ruleId":"163","severity":1,"message":"222","line":8,"column":17,"nodeType":"165","messageId":"166","endLine":8,"endColumn":30},{"ruleId":"182","severity":1,"message":"183","line":40,"column":17,"nodeType":"184","endLine":40,"endColumn":62},{"ruleId":"182","severity":1,"message":"183","line":71,"column":9,"nodeType":"184","endLine":71,"endColumn":49},{"ruleId":"163","severity":1,"message":"202","line":2,"column":10,"nodeType":"165","messageId":"166","endLine":2,"endColumn":14},{"ruleId":"163","severity":1,"message":"203","line":2,"column":27,"nodeType":"165","messageId":"166","endLine":2,"endColumn":35},{"ruleId":"163","severity":1,"message":"222","line":30,"column":17,"nodeType":"165","messageId":"166","endLine":30,"endColumn":30},{"ruleId":"173","severity":1,"message":"225","line":49,"column":6,"nodeType":"175","endLine":49,"endColumn":8,"suggestions":"226"},{"ruleId":"182","severity":1,"message":"183","line":60,"column":17,"nodeType":"184","endLine":60,"endColumn":70},{"ruleId":"182","severity":1,"message":"183","line":82,"column":13,"nodeType":"184","endLine":82,"endColumn":58},{"ruleId":"182","severity":1,"message":"183","line":86,"column":15,"nodeType":"184","endLine":86,"endColumn":69},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'useToasts' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'auth' is defined but never used.","'addToast' is assigned a value but never used.","'userName' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["229"],"'accessToken' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'state.user'. Either include it or remove the dependency array.",["230"],"'React' is defined but never used.","'act' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'UserOutlined' is defined but never used.","'ToastProvider' is defined but never used.","React Hook useEffect has a missing dependency: 'addToast'. Either include it or remove the dependency array.",["231"],["232"],"'Link' is defined but never used.","'Redirect' is defined but never used.","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.","'AppleOutlined' is defined but never used.","'AndroidOutlined' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history', 'user.following', and 'userName'. Either include them or remove the dependency array.",["233"],"'setConfirmLoading' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'buttonItemLayout' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'InboxOutlined' is defined but never used.","'NavLink' is defined but never used.","'updateProfile' is assigned a value but never used.","'Heart' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'postId' and 'props.history'. Either include them or remove the dependency array.",["234"],"no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"235","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [props.history, user]",{"range":"246","text":"247"},"Update the dependencies array to be: [state.user]",{"range":"248","text":"249"},"Update the dependencies array to be: [addToast, error]",{"range":"250","text":"251"},{"range":"252","text":"247"},"Update the dependencies array to be: [props.history, user.following, userName]",{"range":"253","text":"254"},"Update the dependencies array to be: [postId, props.history]",{"range":"255","text":"256"},[1219,1225],"[props.history, user]",[1276,1278],"[state.user]",[1171,1178],"[addToast, error]",[1266,1272],[1843,1845],"[props.history, user.following, userName]",[1467,1469],"[postId, props.history]"]