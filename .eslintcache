[{"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\index.js":"1","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\App.js":"2","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Signup.js":"3","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\firebase\\config.js":"4","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FireState.js":"5","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FirebaseContext.js":"6","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FireReducer.js":"7","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Login.js":"8","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Profile.js":"9","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Loader.js":"10","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\PrivateRoutes.js":"11","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Header.js":"12","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\credentials.js":"13"},{"size":434,"mtime":1609853688756,"results":"14","hashOfConfig":"15"},{"size":939,"mtime":1610633122773,"results":"16","hashOfConfig":"15"},{"size":8100,"mtime":1610188362635,"results":"17","hashOfConfig":"15"},{"size":190,"mtime":1610865826593,"results":"18","hashOfConfig":"15"},{"size":4723,"mtime":1610553987972,"results":"19","hashOfConfig":"15"},{"size":120,"mtime":1609915551878,"results":"20","hashOfConfig":"15"},{"size":800,"mtime":1610178065587,"results":"21","hashOfConfig":"15"},{"size":6015,"mtime":1610188142280,"results":"22","hashOfConfig":"15"},{"size":19906,"mtime":1610808477124,"results":"23","hashOfConfig":"15"},{"size":396,"mtime":1610184129630,"results":"24","hashOfConfig":"15"},{"size":614,"mtime":1610184116014,"results":"25","hashOfConfig":"15"},{"size":5085,"mtime":1610816482393,"results":"26","hashOfConfig":"15"},{"size":327,"mtime":1610865791395,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1h9jy1v",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\index.js",[],["63","64"],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\App.js",["65"],"import \"./App.css\";\nimport \"./mobile.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Signup from \"./components/Signup\";\nimport FireState from \"./Context/Firebase/FireState\";\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\nimport Login from \"./components/Login\";\nimport Profile from \"./components/Profile\";\nimport PrivateRoute from \"./components/PrivateRoutes\";\nimport Header from \"./components/Header\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToastProvider>\n        <FireState>\n          <Router>\n            <Header />\n            <Switch>\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/\" component={Login} />\n              <PrivateRoute path=\"/:userName\" component={Profile} />\n            </Switch>\n          </Router>\n        </FireState>\n      </ToastProvider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Signup.js",["66","67","68","69","70","71","72","73","74","75","76","77","78"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MailOutlined,\r\n  FacebookFilled,\r\n} from \"@ant-design/icons\";\r\nimport InstaImage from \"../images/insta_image.png\";\r\nimport Illustation from \"../images/login_illus.jpg\";\r\nimport \"antd/dist/antd.css\";\r\nimport { auth } from \"../firebase/config\";\r\nimport firebase from \"firebase/app\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Signup = (props) => {\r\n  const { addToast } = useToasts();\r\n  const [form] = Form.useForm();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [loading, setLoading] = useState({});\r\n  const {\r\n    user,\r\n    signup,\r\n    facebookSignup,\r\n    isAuthenticated,\r\n    loading: newLoading,\r\n  } = useContext(FirebaseContext);\r\n\r\n  const onFinish = async (values) => {\r\n    if (!loading?.help2?.length && !loading?.help1?.length)\r\n      await signup(values);\r\n  };\r\n  useEffect(() => {\r\n    if (user) props.history.push(`/${user.userName}`);\r\n  }, [user]);\r\n\r\n  const checkUserName = (e) => {\r\n    setLoading({ ...loading, status1: \"validating\" });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"userName\", \"==\", e.target.value)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.docs.length) {\r\n          setLoading({\r\n            ...loading,\r\n            status1: \"error\",\r\n            help1: \"This username already exists\",\r\n          });\r\n        } else if (e.target.value === \"\") {\r\n          setLoading({\r\n            ...loading,\r\n            status1: \"error\",\r\n            help1: \"Please input your username!\",\r\n          });\r\n        } else {\r\n          setLoading({ ...loading, status1: \"success\", help1: \"\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  const checkEmail = (e) => {\r\n    setLoading({ ...loading, status2: \"validating\" });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"==\", e.target.value)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.docs.length) {\r\n          setLoading({\r\n            ...loading,\r\n            status2: \"error\",\r\n            help2: \"This email already exists\",\r\n          });\r\n        } else if (e.target.value === \"\") {\r\n          setLoading({\r\n            ...loading,\r\n            status2: \"error\",\r\n            help2: \"Please input your email id!\",\r\n          });\r\n        } else if (e.target.value) {\r\n          setLoading({ ...loading, status2: \"success\", help2: \"\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  const [password, setPassword] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    validateStatus: \"\",\r\n    help: \"\",\r\n  });\r\n  const handleClick = (e) => {\r\n    var provider = new firebase.auth.FacebookAuthProvider();\r\n    provider.setCustomParameters({\r\n      display: \"popup\",\r\n    });\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        var credential = result.credential;\r\n\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        let email = user.email,\r\n          name = user.displayName,\r\n          photoURL = user.photoURL;\r\n        facebookSignup({ email, name, photoURL });\r\n\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var accessToken = credential.accessToken;\r\n\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n\r\n        // ...\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ToastProvider>\r\n      <div>\r\n        {newLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div className=\"flex_login\">\r\n            <div>\r\n              <img\r\n                src={Illustation}\r\n                alt=\"illustration\"\r\n                className=\"image_illus\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"signup_form\">\r\n              <img src={InstaImage} className=\"insta_image\" />\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button fb_button\"\r\n                onClick={handleClick}\r\n              >\r\n                <FacebookFilled width=\"2rem\" /> Signup with Facebook\r\n              </Button>\r\n\r\n              <span className=\"breaker\">OR</span>\r\n              <Form\r\n                form={form}\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                onFinish={onFinish}\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  hasFeedback\r\n                  validateStatus={loading.status2}\r\n                  help={loading.help2}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your email id!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={checkEmail}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your Name!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    placeholder=\"Full Name\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"userName\"\r\n                  hasFeedback\r\n                  validateStatus={loading.status1}\r\n                  help={loading.help1}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your Username!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    placeholder=\"Username\"\r\n                    onChange={checkUserName}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  allowClear\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your Password!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    onChange={(e) =>\r\n                      setPassword({ ...password, password: e.target.value })\r\n                    }\r\n                    placeholder=\"Password\"\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                    style={{ margin: \"auto 0.5rem\" }}\r\n                  >\r\n                    Signup\r\n                  </Button>\r\n                  Or <Link to=\"/\">login now!</Link>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </ToastProvider>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\firebase\\config.js",[],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FireState.js",["79","80"],"import React, { useContext, useReducer, useEffect } from \"react\";\r\nimport FirebaseContext from \"./FirebaseContext\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport FireReducer from \"./FireReducer\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst FireState = (props) => {\r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    user: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n  const [state, dispatch] = useReducer(FireReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\r\n      if (!user) {\r\n        dispatch({ type: \"USER_LOADED\", payload: null });\r\n      } else {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .doc(user.email)\r\n          .onSnapshot((snap) => {\r\n            dispatch({ type: \"USER_LOADED\", payload: snap.data() });\r\n          });\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (state.user) {\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(state.user.email)\r\n        .onSnapshot((snap) => {\r\n          dispatch({ type: \"USER_LOADED\", payload: snap.data() });\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const signup = async (values) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(values.email, values.password)\r\n      .then(async (resp) => {\r\n        const docRef = firebase.firestore().doc(`/users/${values.email}`);\r\n        let user = {};\r\n        user.name = values.name;\r\n        user.email = values.email;\r\n        user.photoURL = resp.user.photoURL;\r\n        user.userName = values.userName;\r\n        docRef.set(user);\r\n        dispatch({ type: \"SIGNUP\", payload: user });\r\n      });\r\n  };\r\n\r\n  const login = async (values) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(values.email, values.password)\r\n      .then(async (resp) => {\r\n        const docRef = firebase.firestore().doc(`/users/${values.email}`);\r\n        docRef.get().then((data) => {\r\n          dispatch({ type: \"SIGNUP\", payload: data.data() });\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        dispatch({ type: \"SET_ERROR\", payload: e.message });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"REMOVE_ERROR\" });\r\n        }, 2000);\r\n      });\r\n  };\r\n\r\n  const facebookSignup = ({ name, email, photoURL }) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"==\", email)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.docs.length) {\r\n          let user = {};\r\n          user.name = name;\r\n          user.email = email;\r\n          user.photoURL = photoURL;\r\n          dispatch({ type: \"SIGNUP\", payload: data.docs[0].data() });\r\n        } else {\r\n          const docRef = firebase.firestore().doc(`/users/${email}`);\r\n          let user = {};\r\n          user.name = name;\r\n          user.email = email;\r\n          user.photoURL = photoURL;\r\n          user.userName = nanoid(10);\r\n          docRef.set(user);\r\n          dispatch({ type: \"SIGNUP\", payload: user });\r\n        }\r\n      });\r\n  };\r\n\r\n  const updateProfile = async (values) => {\r\n    if (values.file) {\r\n      var metadata = {\r\n        contentType: values.file.type,\r\n      };\r\n      const filePath = `users/${state.user.email}/profile-image`;\r\n      const fileRef = firebase.storage().ref().child(filePath);\r\n      const uploadTask = fileRef.put(values.file, metadata);\r\n      uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n        firebase\r\n          .storage()\r\n          .ref()\r\n          .child(filePath)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            console.log(values);\r\n            firebase.firestore().collection(\"users\").doc(values.email).update({\r\n              name: values.name,\r\n              userName: values.username,\r\n              bio: values.bio,\r\n              photoURL: url,\r\n              website: values.website,\r\n            });\r\n          });\r\n      });\r\n    } else {\r\n      firebase.firestore().collection(\"users\").doc(values.email).update({\r\n        name: values.name,\r\n        userName: values.username,\r\n        bio: values.bio,\r\n        website: values.website,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FirebaseContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        loading: state.loading,\r\n        signup: signup,\r\n        facebookSignup: facebookSignup,\r\n        login: login,\r\n        error: state.error,\r\n        updateProfile,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      {props.children}{\" \"}\r\n    </FirebaseContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FireState;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FirebaseContext.js",["81"],"import React, { createContext } from \"react\";\r\nconst FirebaseContext = createContext();\r\nexport default FirebaseContext;","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FireReducer.js",["82","83","84"],"import { act } from \"react-dom/test-utils\";\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n      case \"USER_LOADED\":\r\n          let isAuth = false;\r\n          if(action.payload)\r\n            isAuth = true\r\n        return {\r\n          ...state,\r\n          isAuthenticated: isAuth,\r\n          loading: false,\r\n          user : action.payload\r\n        };\r\n        case \"SIGNUP\":\r\n          return {\r\n            ...state,\r\n            isAuthenticated: true,\r\n            loading: false,\r\n            user : action.payload\r\n          };\r\n        case \"SET_ERROR\":\r\n          return {\r\n            ...state,\r\n            error : action.payload\r\n          }\r\n        case \"REMOVE_ERROR\":\r\n          return{\r\n            ...state,\r\n            error : null\r\n          }\r\n     \r\n    }\r\n}","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Login.js",["85","86","87","88","89","90","91","92","93","94","95","96"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MailOutlined,\r\n  FacebookFilled,\r\n} from \"@ant-design/icons\";\r\nimport InstaImage from \"../images/insta_image.png\";\r\nimport Illustation from \"../images/login_illus.jpg\";\r\nimport \"antd/dist/antd.css\";\r\nimport { auth } from \"../firebase/config\";\r\nimport firebase from \"firebase/app\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Login = (props) => {\r\n  const [form] = Form.useForm();\r\n  const { addToast } = useToasts();\r\n  const [loading, setLoading] = useState({});\r\n  const {\r\n    user,\r\n    login,\r\n    facebookSignup,\r\n    error,\r\n    loading: newLoading,\r\n  } = useContext(FirebaseContext);\r\n\r\n  const onFinish = async (values) => {\r\n    if (!loading?.help2?.length && !loading?.help1?.length) await login(values);\r\n  };\r\n  useEffect(() => {\r\n    if (error) addToast(error, { appearance: \"error\", autoDismiss: true });\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (user) props.history.push(`/${user.userName}`);\r\n  }, [user]);\r\n\r\n  const checkEmail = (e) => {\r\n    setLoading({ ...loading, status2: \"validating\" });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"==\", e.target.value)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (!data.docs.length) {\r\n          setLoading({\r\n            ...loading,\r\n            status2: \"error\",\r\n            help2: \"This account is not registered\",\r\n          });\r\n        } else if (e.target.value === \"\") {\r\n          setLoading({\r\n            ...loading,\r\n            status2: \"error\",\r\n            help2: \"Please input your email id!\",\r\n          });\r\n        } else if (e.target.value) {\r\n          setLoading({ ...loading, status2: \"success\", help2: \"\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  const [password, setPassword] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    validateStatus: \"\",\r\n    help: \"\",\r\n  });\r\n  const handleClick = (e) => {\r\n    var provider = new firebase.auth.FacebookAuthProvider();\r\n    provider.setCustomParameters({\r\n      display: \"popup\",\r\n    });\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        var credential = result.credential;\r\n\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        let email = user.email,\r\n          name = user.displayName,\r\n          photoURL = user.photoURL;\r\n        facebookSignup({ email, name, photoURL });\r\n\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var accessToken = credential.accessToken;\r\n\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n\r\n        // ...\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {newLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"flex_login\">\r\n          <div>\r\n            <img src={Illustation} alt=\"illustration\" className=\"image_illus\" />\r\n          </div>\r\n\r\n          <div className=\"signup_form\">\r\n            <img src={InstaImage} className=\"insta_image\" />\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button fb_button\"\r\n              onClick={handleClick}\r\n            >\r\n              <FacebookFilled width=\"2rem\" /> Login with Facebook\r\n            </Button>\r\n\r\n            <span className=\"breaker\">OR</span>\r\n            <Form\r\n              form={form}\r\n              name=\"normal_login\"\r\n              className=\"login-form\"\r\n              onFinish={onFinish}\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n            >\r\n              <Form.Item\r\n                name=\"email\"\r\n                hasFeedback\r\n                validateStatus={loading.status2}\r\n                help={loading.help2}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your email id!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={checkEmail}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"password\"\r\n                allowClear\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your Password!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  onChange={(e) =>\r\n                    setPassword({ ...password, password: e.target.value })\r\n                  }\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"login-form-button\"\r\n                  style={{ margin: \"auto 0.5rem\" }}\r\n                >\r\n                  Login\r\n                </Button>\r\n                Or <Link to=\"/signup\">signup now!</Link>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Profile.js",["97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121"],"import FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link, useParams, Redirect } from \"react-router-dom\";\r\nimport UserImage from \"../images/user.svg\";\r\nimport firebase from \"firebase/app\";\r\nimport { Button, Modal, Form, Input, Upload } from \"antd\";\r\nimport Loader from \"./Loader\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport ImgCrop from \"antd-img-crop\";\r\nimport \"antd/es/modal/style\";\r\nimport \"antd/es/slider/style\";\r\nconst Profile = (props) => {\r\n  const [contextUser, setContextUser] = useState(null);\r\n  const { addToast } = useToasts();\r\n  const [follow, setFollow] = useState(null);\r\n  const { user, updateProfile } = useContext(FirebaseContext);\r\n  let { userName } = useParams();\r\n  const [file, setFile] = useState(null);\r\n  const [User, setUser] = useState(null);\r\n  const normFile = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n  const [loading, setLoading] = useState(true);\r\n  const [validation, setValidation] = useState({});\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"userName\", \"==\", userName)\r\n      .onSnapshot((snap) => {\r\n        if (!snap.docs.length) props.history.push(\"/\");\r\n        else {\r\n          setUser(snap.docs[0].data());\r\n          if (\r\n            user.following &&\r\n            user.following.includes(snap.docs[0].data().email)\r\n          ) {\r\n            setFollow(true);\r\n          } else setFollow(false);\r\n          setLoading(false);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const [follwers_show, setFollowers_show] = useState(null);\r\n  const [follwing_show, setFollowing_show] = useState(null);\r\n  const [isModalVisible1, setIsModalVisible1] = useState(false);\r\n  const [isModalVisible2, setIsModalVisible2] = useState(false);\r\n\r\n  const showModal1 = () => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"in\", User.followers)\r\n      .get()\r\n      .then((data) => {\r\n        let x = data.docs;\r\n        x = x.map((data) => {\r\n          let obj = {};\r\n          const { name, email, userName, photoURL } = data.data();\r\n          obj.email = email;\r\n          obj.name = name;\r\n          obj.userName = userName;\r\n          obj.photoURL = photoURL;\r\n          return obj;\r\n        });\r\n        setFollowers_show(x);\r\n        setIsModalVisible1(true);\r\n      });\r\n  };\r\n  const showModal2 = () => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"in\", User.following)\r\n      .get()\r\n      .then((data) => {\r\n        let x = data.docs;\r\n        x = x.map((data) => {\r\n          let obj = {};\r\n          const { name, email, userName, photoURL } = data.data();\r\n          obj.email = email;\r\n          obj.name = name;\r\n          obj.userName = userName;\r\n          obj.photoURL = photoURL;\r\n          return obj;\r\n        });\r\n        setFollowing_show(x);\r\n        setIsModalVisible2(true);\r\n      });\r\n  };\r\n  const handleOk2 = () => {\r\n    setIsModalVisible2(false);\r\n  };\r\n\r\n  const handleCancel2 = () => {\r\n    setIsModalVisible2(false);\r\n  };\r\n\r\n  const handleOk1 = () => {\r\n    setIsModalVisible1(false);\r\n  };\r\n\r\n  const handleCancel1 = () => {\r\n    setIsModalVisible1(false);\r\n  };\r\n\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n  const handleUserName = (e) => {\r\n    setValidation({ ...validation, status: \"validaing\" });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"userName\", \"==\", e.target.value)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.docs.length && data.docs[0].data().userName != user.userName) {\r\n          setValidation({\r\n            ...validation,\r\n            status1: \"error\",\r\n            help1: \"This username already exists\",\r\n          });\r\n        } else if (e.target.value === \"\") {\r\n          setValidation({\r\n            ...validation,\r\n            status1: \"error\",\r\n            help1: \"Please input your username!\",\r\n          });\r\n        } else {\r\n          setValidation({ ...validation, status1: \"success\", help1: \"\" });\r\n        }\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    setContextUser(user);\r\n    if (User) {\r\n      if (user.following && user.following.includes(User.email))\r\n        setFollow(true);\r\n      else setFollow(false);\r\n    }\r\n  }, [user, User]);\r\n\r\n  const [form] = Form.useForm();\r\n  const [formLayout, setFormLayout] = useState(\"horizontal\");\r\n  const handleFinish = async (values) => {\r\n    if (!validation?.help1?.length) {\r\n      values.file = file;\r\n      await updateProfile(values);\r\n      setVisible(false);\r\n      addToast(\"Profile Updated Successfully\", {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n      });\r\n    }\r\n  };\r\n  const onFormLayoutChange = ({ layout }) => {\r\n    setFormLayout(layout);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n  const handleFollow = () => {\r\n    let following = user.following;\r\n    if (!following) {\r\n      following = [];\r\n    }\r\n    following.push(User.email);\r\n    firebase\r\n      .firestore()\r\n      .doc(`/users/${contextUser.email}`)\r\n      .update({\r\n        following: following,\r\n      })\r\n      .then(() => {\r\n        let followers = User.followers;\r\n        if (!followers) followers = [];\r\n        followers.push(contextUser.email);\r\n        firebase.firestore().doc(`/users/${User.email}`).update({\r\n          followers: followers,\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleFollow1 = (userEmail) => {\r\n    let following = user.following;\r\n    if (!following) {\r\n      following = [];\r\n    }\r\n    following.push(userEmail);\r\n    firebase\r\n      .firestore()\r\n      .doc(`/users/${contextUser.email}`)\r\n      .update({\r\n        following: following,\r\n      })\r\n      .then(() => {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .doc(userEmail)\r\n          .get()\r\n          .then((data) => {\r\n            let followers = data.data().followers;\r\n            if (!followers) followers = [];\r\n            followers.push(contextUser.email);\r\n            firebase.firestore().collection(\"users\").doc(userEmail).update({\r\n              followers: followers,\r\n            });\r\n          });\r\n      });\r\n  };\r\n\r\n  const handleUnFollow = () => {\r\n    let following = user.following;\r\n    following = following.filter((user1) => {\r\n      return !(user1 == User.email);\r\n    });\r\n    firebase\r\n      .firestore()\r\n      .doc(`/users/${contextUser.email}`)\r\n      .update({\r\n        following: following,\r\n      })\r\n      .then(() => {\r\n        let followers = User.followers;\r\n        followers = followers.filter((user2) => {\r\n          return !(user2 == contextUser.email);\r\n        });\r\n        firebase.firestore().doc(`/users/${User.email}`).update({\r\n          followers: followers,\r\n        });\r\n      });\r\n  };\r\n  const handleUnFollow1 = (userEmail) => {\r\n    let following = user.following;\r\n    following = following.filter((user1) => {\r\n      return !(user1 == userEmail);\r\n    });\r\n    firebase\r\n      .firestore()\r\n      .doc(`/users/${contextUser.email}`)\r\n      .update({\r\n        following: following,\r\n      })\r\n      .then(() => {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .doc(userEmail)\r\n          .get()\r\n          .then((data) => {\r\n            let followers = data.data().followers;\r\n            followers = followers.filter((user2) => {\r\n              return !(user2 == contextUser.email);\r\n            });\r\n            firebase.firestore().doc(`/users/${userEmail}`).update({\r\n              followers: followers,\r\n            });\r\n          });\r\n      });\r\n  };\r\n\r\n  const formItemLayout =\r\n    formLayout === \"horizontal\"\r\n      ? {\r\n          labelCol: {\r\n            span: 4,\r\n          },\r\n          wrapperCol: {\r\n            span: 14,\r\n          },\r\n        }\r\n      : null;\r\n  const buttonItemLayout =\r\n    formLayout === \"horizontal\"\r\n      ? {\r\n          wrapperCol: {\r\n            span: 14,\r\n            offset: 4,\r\n          },\r\n        }\r\n      : null;\r\n\r\n  return (\r\n    <ImgCrop>\r\n      <div>\r\n        {User ? (\r\n          <div>\r\n            <Modal\r\n              title=\"Followers\"\r\n              visible={isModalVisible1}\r\n              onOk={handleOk1}\r\n              onCancel={handleCancel1}\r\n              footer={null}\r\n            >\r\n              {follwers_show\r\n                ? follwers_show.map((follower) => (\r\n                    <div className=\"modal_div\">\r\n                      {follower.photoURL ? (\r\n                        <img src={follower.photoURL} />\r\n                      ) : (\r\n                        <img src={UserImage} />\r\n                      )}\r\n                      <div className=\"modal_div_grid\">\r\n                        <a href={follower.userName}>\r\n                          <span className=\"modal_div_userName\">\r\n                            {follower.userName}\r\n                          </span>\r\n                        </a>\r\n                        <span className=\"modal_div_name\">\r\n                          {follower.userName}\r\n                        </span>\r\n                      </div>\r\n                      <div>\r\n                        {follower.email ===\r\n                        contextUser.email ? null : contextUser.following.includes(\r\n                            follower.email\r\n                          ) ? (\r\n                          <button\r\n                            className=\"edit_btn\"\r\n                            onClick={() => handleUnFollow1(follower.email)}\r\n                          >\r\n                            Unfollow\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            className=\"follow_btn\"\r\n                            onClick={() => handleFollow1(follower.email)}\r\n                          >\r\n                            Follow\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                : null}\r\n            </Modal>\r\n            <Modal\r\n              title=\"Following\"\r\n              visible={isModalVisible2}\r\n              onOk={handleOk2}\r\n              onCancel={handleCancel2}\r\n              footer={null}\r\n            >\r\n              {follwing_show\r\n                ? follwing_show.map((follower) => (\r\n                    <div className=\"modal_div\">\r\n                      {follower.photoURL ? (\r\n                        <img src={follower.photoURL} />\r\n                      ) : (\r\n                        <img src={UserImage} />\r\n                      )}\r\n                      <div className=\"modal_div_grid\">\r\n                        <a href={follower.userName}>\r\n                          <span className=\"modal_div_userName\">\r\n                            {follower.userName}\r\n                          </span>\r\n                        </a>\r\n                        <span className=\"modal_div_name\">\r\n                          {follower.userName}\r\n                        </span>\r\n                      </div>\r\n                      <div>\r\n                        {follower.email ===\r\n                        contextUser.email ? null : contextUser.following.includes(\r\n                            follower.email\r\n                          ) ? (\r\n                          <button\r\n                            className=\"edit_btn\"\r\n                            onClick={() => handleUnFollow1(follower.email)}\r\n                          >\r\n                            Unfollow\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            className=\"follow_btn\"\r\n                            onClick={() => handleFollow1(follower.email)}\r\n                          >\r\n                            Follow\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                : null}\r\n            </Modal>\r\n            <div className=\"profile_grid\">\r\n              <div className=\"profile_image\">\r\n                {User.photoURL ? (\r\n                  <img src={User.photoURL} className=\"user_image\" />\r\n                ) : (\r\n                  <img src={UserImage} className=\"user_image\" />\r\n                )}\r\n              </div>\r\n              <div className=\"flex_info\">\r\n                <span className=\"userName_profile\">\r\n                  {User.userName}{\" \"}\r\n                  {User.admin ? (\r\n                    <img\r\n                      src=\"https://www.flaticon.com/svg/static/icons/svg/1271/1271380.svg\"\r\n                      className=\"verify_icons\"\r\n                    />\r\n                  ) : null}{\" \"}\r\n                </span>{\" \"}\r\n                {contextUser.email == User.email ? (\r\n                  <button className=\"edit_btn1\" onClick={showModal}>\r\n                    Edit Profile\r\n                  </button>\r\n                ) : follow ? (\r\n                  <button className=\"edit_btn\" onClick={handleUnFollow}>\r\n                    Unfollow\r\n                  </button>\r\n                ) : (\r\n                  <button className=\"follow_btn\" onClick={handleFollow}>\r\n                    Follow\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <div className=\"info_profile\">\r\n                <div className=\"info_grid\">\r\n                  {!User.posts ? (\r\n                    <div>\r\n                      <span className=\"span_1\">0 </span>\r\n                      <span className=\"span_2\">posts</span>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <span>{User.posts.length} </span>\r\n                      <span>posts</span>\r\n                    </div>\r\n                  )}\r\n                  {!User.followers || !User.followers.length ? (\r\n                    <div>\r\n                      <span className=\"span_1\">0 </span>\r\n                      <span className=\"span_2\">followers</span>\r\n                    </div>\r\n                  ) : (\r\n                    <div onClick={showModal1} className=\"pointer_div\">\r\n                      <span className=\"span_1\">{User.followers.length} </span>\r\n                      <span className=\"span_2\">followers</span>\r\n                    </div>\r\n                  )}\r\n                  {!User.following || !User.following.length ? (\r\n                    <div>\r\n                      <span className=\"span_1\">0 </span>\r\n                      <span className=\"span_2\">following</span>\r\n                    </div>\r\n                  ) : (\r\n                    <div onClick={showModal2} className=\"pointer_div\">\r\n                      <span className=\"span_1 \">{User.following.length} </span>\r\n                      <span className=\"span_2\">following</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <div>\r\n                    <span className=\"user_name_style\">{User.name}</span>\r\n                  </div>\r\n                  <div>\r\n                    {User.bio ? (\r\n                      <div className=\"bio_div\">{User.bio}</div>\r\n                    ) : null}\r\n                  </div>\r\n                  {User.website ? (\r\n                    <div>\r\n                      <a\r\n                        href={User.website}\r\n                        target=\"_blank\"\r\n                        className=\"website_div\"\r\n                      >\r\n                        {User.website}\r\n                      </a>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Modal\r\n              title=\"Edit Profile\"\r\n              visible={visible}\r\n              confirmLoading={confirmLoading}\r\n              okButtonProps={{ style: { display: \"none\" } }}\r\n              onCancel={handleCancel}\r\n            >\r\n              <div className=\"image_div\">\r\n                {User.photoURL ? (\r\n                  <img src={User.photoURL} className=\"edit_image\" />\r\n                ) : (\r\n                  <img src={UserImage} className=\"edit_image\" />\r\n                )}{\" \"}\r\n                <div className=\"edit_userName\">{user.userName}</div>\r\n                <br />\r\n                <label for=\"file-upload\" class=\"image_upload\">\r\n                  <span id=\"profile_btn\">Choose profile photo</span>\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"file-upload\"\r\n                  name=\"avatar\"\r\n                  accept=\"image/*\"\r\n                  onChange={normFile}\r\n                />\r\n              </div>\r\n              <Form\r\n                {...formItemLayout}\r\n                layout={formLayout}\r\n                form={form}\r\n                style={{ marginTop: \"2rem\" }}\r\n                onFinish={handleFinish}\r\n                initialValues={{\r\n                  layout: formLayout,\r\n                  username: User.userName,\r\n                  email: User.email,\r\n                  name: User.name,\r\n                  bio: User.bio,\r\n                  website: User.website,\r\n                }}\r\n                onValuesChange={onFormLayoutChange}\r\n              >\r\n                <Form.Item label=\"Email\">\r\n                  <Form.Item\r\n                    name=\"email\"\r\n                    noStyle\r\n                    rules={[\r\n                      { required: true, message: \"Username is required\" },\r\n                    ]}\r\n                  >\r\n                    <Input placeholder=\"Please input\" disabled />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item label=\"Username\">\r\n                  <Form.Item\r\n                    name=\"username\"\r\n                    hasFeedback\r\n                    validateStatus={validation.status1}\r\n                    style={{ height: \"30px\" }}\r\n                    help={validation.help1}\r\n                    rules={[\r\n                      { required: true, message: \"Username is required\" },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      placeholder=\"Please input\"\r\n                      onChange={handleUserName}\r\n                    />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item label=\"Website\">\r\n                  <Form.Item name=\"website\" style={{ height: \"30px\" }}>\r\n                    <Input placeholder=\"Your website\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Name\">\r\n                  <Form.Item\r\n                    name=\"name\"\r\n                    noStyle\r\n                    rules={[{ required: true, message: \"Name is required\" }]}\r\n                  >\r\n                    <Input placeholder=\"Your name\" />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Bio\">\r\n                  <Form.Item name=\"bio\" noStyle>\r\n                    <Input.TextArea />\r\n                  </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                    style={{ margin: \"auto 0\" }}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </Modal>\r\n          </div>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </div>\r\n    </ImgCrop>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Loader.js",[],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\PrivateRoutes.js",[],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Header.js",["122","123","124","125","126","127","128","129","130","131","132","133"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport InstaImage from \"../images/insta_image.png\";\r\nimport Home from \"../icons/home.svg\";\r\nimport Plus from \"../icons/plus.svg\";\r\nimport UserImage from \"../images/user.svg\";\r\nimport Explore from \"../icons/explore.svg\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport firebase from \"firebase/app\";\r\nimport { Modal, Form, Button, Upload, Input } from \"antd\";\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\n\r\nconst Header = () => {\r\n  const { user, updateProfile, loading } = useContext(FirebaseContext);\r\n  const [users, setUsers] = useState(null);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      span: 6,\r\n    },\r\n    wrapperCol: {\r\n      span: 14,\r\n    },\r\n  };\r\n\r\n  const onFinish = (data) => {\r\n    console.log(data);\r\n  };\r\n  const normFile = (e) => {\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n\r\n    return e && e.fileList;\r\n  };\r\n  const handleFileChange = (e) => {\r\n    setFile(e.file.originFileObj);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const [showUsers, setShowUsers] = useState([]);\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .get()\r\n      .then((data) => {\r\n        let arr = [];\r\n        data.docs.forEach((x) => {\r\n          const { name, userName, photoURL } = x.data();\r\n          let y = {};\r\n          y.name = name;\r\n          y.userName = userName;\r\n          y.photoURL = photoURL;\r\n          arr.push(y);\r\n        });\r\n        setUsers(arr);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const regex = new RegExp(e.target.value, \"gi\");\r\n    let arr = [];\r\n    if (e.target.value == \"\") {\r\n      setShowUsers(arr);\r\n    } else {\r\n      users.forEach((item) => {\r\n        if (item.name.match(regex) || item.userName.match(regex))\r\n          arr.push(item);\r\n      });\r\n      setShowUsers(arr);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {!loading ? (\r\n        <nav>\r\n          <label>\r\n            <img src={InstaImage} className=\"logo\" />\r\n          </label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"input_header\"\r\n              placeholder=\"Search\"\r\n              onChange={handleChange}\r\n            />\r\n            <ul className=\"list-group\">\r\n              {showUsers.map((data) => (\r\n                <>\r\n                  <a href={data.userName}>\r\n                    <li className=\"list-group-item\">\r\n                      {data.photoURL ? (\r\n                        <img src={data.photoURL} className=\"search_img\" />\r\n                      ) : (\r\n                        <img src={UserImage} className=\"search_img\" />\r\n                      )}\r\n                      <div className=\"serach_flex\">\r\n                        <span className=\"userName_search\">{data.userName}</span>\r\n                        <span className=\"name_search\">{data.name}</span>\r\n                      </div>\r\n                    </li>\r\n                  </a>\r\n                </>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <ul className=\"header_list\">\r\n            <li>\r\n              <img src={Home} />\r\n            </li>\r\n            <li>\r\n              <img src={Explore} />\r\n            </li>\r\n            <li>\r\n              <img\r\n                src={Plus}\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={showModal}\r\n              />\r\n            </li>\r\n            <li>\r\n              {user.photoURL ? (\r\n                <img src={user.photoURL} className=\"user_header\" />\r\n              ) : (\r\n                <img src={UserImage} className=\"user_header\" />\r\n              )}\r\n            </li>\r\n          </ul>\r\n          <Modal\r\n            title=\"Add a new post\"\r\n            visible={isModalVisible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n          >\r\n            <Form name=\"validate_other\" {...formItemLayout} onFinish={onFinish}>\r\n              <Form.Item\r\n                name=\"upload\"\r\n                label=\"Upload\"\r\n                valuePropName=\"fileList\"\r\n                getValueFromEvent={normFile}\r\n              >\r\n                <Upload\r\n                  name=\"logo\"\r\n                  listType=\"picture\"\r\n                  maxCount={1}\r\n                  onChange={handleFileChange}\r\n                >\r\n                  <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n                </Upload>\r\n              </Form.Item>\r\n              <Form.Item label=\"Caption\">\r\n                <Form.Item name=\"caption\" noStyle>\r\n                  <Input.TextArea />\r\n                </Form.Item>\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        </nav>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\credentials.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":6,"column":25,"nodeType":"140","messageId":"141","endLine":6,"endColumn":34},{"ruleId":"138","severity":1,"message":"142","line":2,"column":31,"nodeType":"140","messageId":"141","endLine":2,"endColumn":39},{"ruleId":"138","severity":1,"message":"143","line":12,"column":10,"nodeType":"140","messageId":"141","endLine":12,"endColumn":14},{"ruleId":"138","severity":1,"message":"144","line":20,"column":11,"nodeType":"140","messageId":"141","endLine":20,"endColumn":19},{"ruleId":"138","severity":1,"message":"145","line":22,"column":10,"nodeType":"140","messageId":"141","endLine":22,"endColumn":18},{"ruleId":"138","severity":1,"message":"146","line":22,"column":20,"nodeType":"140","messageId":"141","endLine":22,"endColumn":31},{"ruleId":"138","severity":1,"message":"147","line":28,"column":5,"nodeType":"140","messageId":"141","endLine":28,"endColumn":20},{"ruleId":"148","severity":1,"message":"149","line":38,"column":6,"nodeType":"150","endLine":38,"endColumn":12,"suggestions":"151"},{"ruleId":"138","severity":1,"message":"152","line":120,"column":13,"nodeType":"140","messageId":"141","endLine":120,"endColumn":24},{"ruleId":"138","severity":1,"message":"153","line":126,"column":13,"nodeType":"140","messageId":"141","endLine":126,"endColumn":22},{"ruleId":"138","severity":1,"message":"154","line":127,"column":13,"nodeType":"140","messageId":"141","endLine":127,"endColumn":25},{"ruleId":"138","severity":1,"message":"155","line":129,"column":13,"nodeType":"140","messageId":"141","endLine":129,"endColumn":18},{"ruleId":"138","severity":1,"message":"156","line":131,"column":13,"nodeType":"140","messageId":"141","endLine":131,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":153,"column":15,"nodeType":"159","endLine":153,"endColumn":63},{"ruleId":"138","severity":1,"message":"160","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":27},{"ruleId":"148","severity":1,"message":"161","line":45,"column":6,"nodeType":"150","endLine":45,"endColumn":8,"suggestions":"162"},{"ruleId":"138","severity":1,"message":"163","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"164","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"165","severity":1,"message":"166","line":3,"column":1,"nodeType":"167","endLine":34,"endColumn":2},{"ruleId":"168","severity":1,"message":"169","line":4,"column":5,"nodeType":"170","messageId":"171","endLine":33,"endColumn":6},{"ruleId":"138","severity":1,"message":"142","line":2,"column":31,"nodeType":"140","messageId":"141","endLine":2,"endColumn":39},{"ruleId":"138","severity":1,"message":"172","line":4,"column":3,"nodeType":"140","messageId":"141","endLine":4,"endColumn":15},{"ruleId":"138","severity":1,"message":"143","line":12,"column":10,"nodeType":"140","messageId":"141","endLine":12,"endColumn":14},{"ruleId":"138","severity":1,"message":"173","line":15,"column":10,"nodeType":"140","messageId":"141","endLine":15,"endColumn":23},{"ruleId":"148","severity":1,"message":"174","line":36,"column":6,"nodeType":"150","endLine":36,"endColumn":13,"suggestions":"175"},{"ruleId":"148","severity":1,"message":"149","line":40,"column":6,"nodeType":"150","endLine":40,"endColumn":12,"suggestions":"176"},{"ruleId":"138","severity":1,"message":"152","line":95,"column":13,"nodeType":"140","messageId":"141","endLine":95,"endColumn":24},{"ruleId":"138","severity":1,"message":"153","line":101,"column":13,"nodeType":"140","messageId":"141","endLine":101,"endColumn":22},{"ruleId":"138","severity":1,"message":"154","line":102,"column":13,"nodeType":"140","messageId":"141","endLine":102,"endColumn":25},{"ruleId":"138","severity":1,"message":"155","line":104,"column":13,"nodeType":"140","messageId":"141","endLine":104,"endColumn":18},{"ruleId":"138","severity":1,"message":"156","line":106,"column":13,"nodeType":"140","messageId":"141","endLine":106,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":123,"column":13,"nodeType":"159","endLine":123,"endColumn":61},{"ruleId":"138","severity":1,"message":"177","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":14},{"ruleId":"138","severity":1,"message":"178","line":3,"column":27,"nodeType":"140","messageId":"141","endLine":3,"endColumn":35},{"ruleId":"138","severity":1,"message":"179","line":6,"column":38,"nodeType":"140","messageId":"141","endLine":6,"endColumn":44},{"ruleId":"138","severity":1,"message":"173","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":23},{"ruleId":"138","severity":1,"message":"180","line":9,"column":10,"nodeType":"140","messageId":"141","endLine":9,"endColumn":24},{"ruleId":"138","severity":1,"message":"181","line":24,"column":10,"nodeType":"140","messageId":"141","endLine":24,"endColumn":17},{"ruleId":"148","severity":1,"message":"182","line":45,"column":6,"nodeType":"150","endLine":45,"endColumn":8,"suggestions":"183"},{"ruleId":"138","severity":1,"message":"184","line":111,"column":26,"nodeType":"140","messageId":"141","endLine":111,"endColumn":43},{"ruleId":"185","severity":1,"message":"186","line":121,"column":62,"nodeType":"187","messageId":"188","endLine":121,"endColumn":64},{"ruleId":"185","severity":1,"message":"189","line":225,"column":22,"nodeType":"187","messageId":"188","endLine":225,"endColumn":24},{"ruleId":"185","severity":1,"message":"189","line":236,"column":26,"nodeType":"187","messageId":"188","endLine":236,"endColumn":28},{"ruleId":"185","severity":1,"message":"189","line":246,"column":22,"nodeType":"187","messageId":"188","endLine":246,"endColumn":24},{"ruleId":"185","severity":1,"message":"189","line":263,"column":30,"nodeType":"187","messageId":"188","endLine":263,"endColumn":32},{"ruleId":"138","severity":1,"message":"190","line":283,"column":9,"nodeType":"140","messageId":"141","endLine":283,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":309,"column":25,"nodeType":"159","endLine":309,"endColumn":56},{"ruleId":"157","severity":1,"message":"158","line":311,"column":25,"nodeType":"159","endLine":311,"endColumn":48},{"ruleId":"157","severity":1,"message":"158","line":358,"column":25,"nodeType":"159","endLine":358,"endColumn":56},{"ruleId":"157","severity":1,"message":"158","line":360,"column":25,"nodeType":"159","endLine":360,"endColumn":48},{"ruleId":"157","severity":1,"message":"158","line":399,"column":19,"nodeType":"159","endLine":399,"endColumn":69},{"ruleId":"157","severity":1,"message":"158","line":401,"column":19,"nodeType":"159","endLine":401,"endColumn":65},{"ruleId":"157","severity":1,"message":"158","line":408,"column":21,"nodeType":"159","endLine":411,"endColumn":23},{"ruleId":"185","severity":1,"message":"189","line":414,"column":36,"nodeType":"187","messageId":"188","endLine":414,"endColumn":38},{"ruleId":"191","severity":1,"message":"192","line":476,"column":23,"nodeType":"159","endLine":480,"endColumn":24},{"ruleId":"157","severity":1,"message":"158","line":497,"column":19,"nodeType":"159","endLine":497,"endColumn":69},{"ruleId":"157","severity":1,"message":"158","line":499,"column":19,"nodeType":"159","endLine":499,"endColumn":65},{"ruleId":"138","severity":1,"message":"193","line":10,"column":26,"nodeType":"140","messageId":"141","endLine":10,"endColumn":39},{"ruleId":"138","severity":1,"message":"194","line":13,"column":17,"nodeType":"140","messageId":"141","endLine":13,"endColumn":30},{"ruleId":"138","severity":1,"message":"195","line":16,"column":10,"nodeType":"140","messageId":"141","endLine":16,"endColumn":14},{"ruleId":"185","severity":1,"message":"189","line":75,"column":24,"nodeType":"187","messageId":"188","endLine":75,"endColumn":26},{"ruleId":"157","severity":1,"message":"158","line":90,"column":13,"nodeType":"159","endLine":90,"endColumn":54},{"ruleId":"157","severity":1,"message":"158","line":105,"column":25,"nodeType":"159","endLine":105,"endColumn":75},{"ruleId":"157","severity":1,"message":"158","line":107,"column":25,"nodeType":"159","endLine":107,"endColumn":71},{"ruleId":"157","severity":1,"message":"158","line":121,"column":15,"nodeType":"159","endLine":121,"endColumn":33},{"ruleId":"157","severity":1,"message":"158","line":124,"column":15,"nodeType":"159","endLine":124,"endColumn":36},{"ruleId":"157","severity":1,"message":"158","line":127,"column":15,"nodeType":"159","endLine":131,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":135,"column":17,"nodeType":"159","endLine":135,"endColumn":68},{"ruleId":"157","severity":1,"message":"158","line":137,"column":17,"nodeType":"159","endLine":137,"endColumn":64},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'useToasts' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'auth' is defined but never used.","'addToast' is assigned a value but never used.","'userName' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["198"],"'accessToken' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'state.user'. Either include it or remove the dependency array.",["199"],"'React' is defined but never used.","'act' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'UserOutlined' is defined but never used.","'ToastProvider' is defined but never used.","React Hook useEffect has a missing dependency: 'addToast'. Either include it or remove the dependency array.",["200"],["201"],"'Link' is defined but never used.","'Redirect' is defined but never used.","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history', 'user.following', and 'userName'. Either include them or remove the dependency array.",["202"],"'setConfirmLoading' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'buttonItemLayout' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'InboxOutlined' is defined but never used.","'updateProfile' is assigned a value but never used.","'file' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"203","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [props.history, user]",{"range":"212","text":"213"},"Update the dependencies array to be: [state.user]",{"range":"214","text":"215"},"Update the dependencies array to be: [addToast, error]",{"range":"216","text":"217"},{"range":"218","text":"213"},"Update the dependencies array to be: [props.history, user.following, userName]",{"range":"219","text":"220"},[1219,1225],"[props.history, user]",[1276,1278],"[state.user]",[1171,1178],"[addToast, error]",[1266,1272],[1643,1645],"[props.history, user.following, userName]"]