[{"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\index.js":"1","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\App.js":"2","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Signup.js":"3","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\firebase\\config.js":"4","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FireState.js":"5","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FirebaseContext.js":"6","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FireReducer.js":"7","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Login.js":"8","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Profile.js":"9","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Loader.js":"10","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\PrivateRoutes.js":"11","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Header.js":"12","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\credentials.js":"13","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Posts.js":"14","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Post.js":"15","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Saved.js":"16","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Explore.js":"17","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Home.js":"18","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\FeedPost.js":"19","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Not_Found.js":"20","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Footer.js":"21"},{"size":434,"mtime":1609853688756,"results":"22","hashOfConfig":"23"},{"size":1555,"mtime":1611500275291,"results":"24","hashOfConfig":"23"},{"size":8272,"mtime":1611496633523,"results":"25","hashOfConfig":"23"},{"size":190,"mtime":1610865826593,"results":"26","hashOfConfig":"23"},{"size":6803,"mtime":1611491125689,"results":"27","hashOfConfig":"23"},{"size":120,"mtime":1609915551878,"results":"28","hashOfConfig":"23"},{"size":1093,"mtime":1611491099827,"results":"29","hashOfConfig":"23"},{"size":6017,"mtime":1611496777446,"results":"30","hashOfConfig":"23"},{"size":21639,"mtime":1611563281230,"results":"31","hashOfConfig":"23"},{"size":396,"mtime":1610184129630,"results":"32","hashOfConfig":"23"},{"size":619,"mtime":1611327432710,"results":"33","hashOfConfig":"23"},{"size":7339,"mtime":1611490956763,"results":"34","hashOfConfig":"23"},{"size":327,"mtime":1610865791395,"results":"35","hashOfConfig":"23"},{"size":4281,"mtime":1611490486888,"results":"36","hashOfConfig":"23"},{"size":17139,"mtime":1611493690308,"results":"37","hashOfConfig":"23"},{"size":2883,"mtime":1611418207442,"results":"38","hashOfConfig":"23"},{"size":3027,"mtime":1611418467418,"results":"39","hashOfConfig":"23"},{"size":9718,"mtime":1611563198857,"results":"40","hashOfConfig":"23"},{"size":16114,"mtime":1611499691699,"results":"41","hashOfConfig":"23"},{"size":232,"mtime":1611491052474,"results":"42","hashOfConfig":"23"},{"size":373,"mtime":1611500406209,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"6mwa2l",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"46"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\index.js",[],["101","102"],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\App.js",["103"],"import \"./App.css\";\nimport \"./mobile.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Signup from \"./components/Signup\";\nimport FireState from \"./Context/Firebase/FireState\";\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\nimport Login from \"./components/Login\";\nimport Profile from \"./components/Profile\";\nimport PrivateRoute from \"./components/PrivateRoutes\";\nimport Header from \"./components/Header\";\nimport Post from \"./components/Post\";\nimport Explore from \"./components/Explore\";\nimport Home from \"./components/Home\";\nimport Not_Found from \"./components/Not_Found\";\nimport Footer from \"./components/Footer\";\n\nconst DefaultContainer = () => (\n  <div className=\"container\">\n    <Header />\n    <PrivateRoute exact path=\"/\" component={Home} />\n    <PrivateRoute exact path=\"/posts/:postId\" component={Post} />\n    <PrivateRoute exact path=\"/explore/posts\" component={Explore} />\n    <PrivateRoute exact path=\"/:userName\" component={Profile} />\n    <PrivateRoute exact path=\"/image/not_found\" component={Not_Found} />\n  </div>\n);\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <ToastProvider>\n          <FireState>\n            <Switch>\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route component={DefaultContainer} />\n            </Switch>\n            <Footer />\n          </FireState>\n        </ToastProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Signup.js",["104","105","106","107","108","109","110","111","112","113","114","115","116"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MailOutlined,\r\n  FacebookFilled,\r\n} from \"@ant-design/icons\";\r\nimport InstaImage from \"../images/insta_image.png\";\r\nimport Illustation from \"../images/login_illus.jpg\";\r\nimport \"antd/dist/antd.css\";\r\nimport { auth } from \"../firebase/config\";\r\nimport firebase from \"firebase/app\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Signup = (props) => {\r\n  const { addToast } = useToasts();\r\n  const [form] = Form.useForm();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [loading, setLoading] = useState({});\r\n  const {\r\n    user,\r\n    signup,\r\n    facebookSignup,\r\n    isAuthenticated,\r\n    loading: newLoading,\r\n    error,\r\n  } = useContext(FirebaseContext);\r\n\r\n  const onFinish = async (values) => {\r\n    if (!loading?.help2?.length && !loading?.help1?.length)\r\n      await signup(values);\r\n  };\r\n  useEffect(() => {\r\n    if (user) props.history.push(`/${user.userName}`);\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      addToast(error, {\r\n        appearance: \"error\",\r\n        autoDismiss: true,\r\n      });\r\n    }\r\n  }, [error]);\r\n\r\n  const checkUserName = (e) => {\r\n    setLoading({ ...loading, status1: \"validating\" });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"userName\", \"==\", e.target.value)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.docs.length) {\r\n          setLoading({\r\n            ...loading,\r\n            status1: \"error\",\r\n            help1: \"This username already exists\",\r\n          });\r\n        } else if (e.target.value === \"\") {\r\n          setLoading({\r\n            ...loading,\r\n            status1: \"error\",\r\n            help1: \"Please input your username!\",\r\n          });\r\n        } else {\r\n          setLoading({ ...loading, status1: \"success\", help1: \"\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  const checkEmail = (e) => {\r\n    setLoading({ ...loading, status2: \"validating\" });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"==\", e.target.value)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.docs.length) {\r\n          setLoading({\r\n            ...loading,\r\n            status2: \"error\",\r\n            help2: \"This email already exists\",\r\n          });\r\n        } else if (e.target.value === \"\") {\r\n          setLoading({\r\n            ...loading,\r\n            status2: \"error\",\r\n            help2: \"Please input your email id!\",\r\n          });\r\n        } else if (e.target.value) {\r\n          setLoading({ ...loading, status2: \"success\", help2: \"\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  const [password, setPassword] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    validateStatus: \"\",\r\n    help: \"\",\r\n  });\r\n  const handleClick = (e) => {\r\n    var provider = new firebase.auth.FacebookAuthProvider();\r\n    provider.setCustomParameters({\r\n      display: \"popup\",\r\n    });\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        var credential = result.credential;\r\n\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n\r\n        let email = user.email,\r\n          name = user.displayName,\r\n          photoURL = user.photoURL;\r\n        facebookSignup({ email, name, photoURL });\r\n\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var accessToken = credential.accessToken;\r\n\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n\r\n        // ...\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ToastProvider>\r\n      <div>\r\n        {newLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div className=\"flex_login\">\r\n            <div>\r\n              <img\r\n                src={Illustation}\r\n                alt=\"illustration\"\r\n                className=\"image_illus\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"signup_form\">\r\n              <img src={InstaImage} className=\"insta_image\" />\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button fb_button\"\r\n                onClick={handleClick}\r\n              >\r\n                <FacebookFilled width=\"2rem\" /> Signup with Facebook\r\n              </Button>\r\n\r\n              <span className=\"breaker\">OR</span>\r\n              <Form\r\n                form={form}\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                onFinish={onFinish}\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n              >\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  hasFeedback\r\n                  validateStatus={loading.status2}\r\n                  help={loading.help2}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your email id!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={checkEmail}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your Name!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    placeholder=\"Full Name\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"userName\"\r\n                  hasFeedback\r\n                  validateStatus={loading.status1}\r\n                  help={loading.help1}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your Username!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    placeholder=\"Username\"\r\n                    onChange={checkUserName}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  allowClear\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your Password!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    onChange={(e) =>\r\n                      setPassword({ ...password, password: e.target.value })\r\n                    }\r\n                    placeholder=\"Password\"\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                    style={{ margin: \"auto 0.5rem\" }}\r\n                  >\r\n                    Signup\r\n                  </Button>\r\n                  Or <Link to=\"/\">login now!</Link>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </ToastProvider>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\firebase\\config.js",[],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FireState.js",["117","118"],"import React, { useContext, useReducer, useEffect } from \"react\";\r\nimport FirebaseContext from \"./FirebaseContext\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport FireReducer from \"./FireReducer\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst FireState = (props) => {\r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    user: null,\r\n    loading: true,\r\n    error: null,\r\n    posted: false,\r\n    update: false,\r\n  };\r\n  const [state, dispatch] = useReducer(FireReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\r\n      if (!user) {\r\n        dispatch({ type: \"USER_LOADED\", payload: null });\r\n      } else {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .doc(user.email)\r\n          .onSnapshot((snap) => {\r\n            dispatch({ type: \"USER_LOADED\", payload: snap.data() });\r\n          });\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (state.user) {\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(state.user.email)\r\n        .onSnapshot((snap) => {\r\n          dispatch({ type: \"USER_LOADED\", payload: snap.data() });\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const signup = async (values) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(values.email, values.password)\r\n      .then(async (resp) => {\r\n        const docRef = firebase.firestore().doc(`/users/${values.email}`);\r\n        let user = {};\r\n        user.name = values.name;\r\n        user.email = values.email;\r\n        user.photoURL = resp.user.photoURL;\r\n        user.userName = values.userName;\r\n        docRef.set(user);\r\n        dispatch({ type: \"SIGNUP\", payload: user });\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: \"SET_ERROR\", payload: e.message });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"REMOVE_ERROR\" });\r\n        }, 2000);\r\n      });\r\n  };\r\n\r\n  const login = async (values) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(values.email, values.password)\r\n      .then(async (resp) => {\r\n        const docRef = firebase.firestore().doc(`/users/${values.email}`);\r\n        docRef.get().then((data) => {\r\n          dispatch({ type: \"SIGNUP\", payload: data.data() });\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        setTimeout(() => {\r\n          dispatch({ type: \"REMOVE_ERROR\" });\r\n        }, 2000);\r\n      });\r\n  };\r\n\r\n  const facebookSignup = ({ name, email, photoURL }) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"==\", email)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.docs.length) {\r\n          let user = {};\r\n          user.name = name;\r\n          user.email = email;\r\n          user.photoURL = photoURL;\r\n          dispatch({ type: \"SIGNUP\", payload: data.docs[0].data() });\r\n        } else {\r\n          const docRef = firebase.firestore().doc(`/users/${email}`);\r\n          let user = {};\r\n          user.name = name;\r\n          user.email = email;\r\n          user.photoURL = photoURL;\r\n          user.userName = nanoid(10);\r\n          docRef.set(user);\r\n          dispatch({ type: \"SIGNUP\", payload: user });\r\n        }\r\n      });\r\n  };\r\n\r\n  const updateProfile = async (values) => {\r\n    if (values.file) {\r\n      var metadata = {\r\n        contentType: values.file.type,\r\n      };\r\n      const filePath = `users/${state.user.email}/profile-image`;\r\n      const fileRef = firebase.storage().ref().child(filePath);\r\n      const uploadTask = fileRef.put(values.file, metadata);\r\n      uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n        firebase\r\n          .storage()\r\n          .ref()\r\n          .child(filePath)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            let b, x;\r\n            if (values.bio) b = values.bio;\r\n            else b = \"\";\r\n            if (values.website) x = values.website;\r\n            else x = \"\";\r\n\r\n            firebase\r\n              .firestore()\r\n              .collection(\"users\")\r\n              .doc(values.email)\r\n              .update({\r\n                name: values.name,\r\n                userName: values.username,\r\n                bio: b,\r\n                photoURL: url,\r\n                website: x,\r\n              })\r\n              .then(() => {\r\n                dispatch({ type: \"UPDATE_TRUE\" });\r\n                setTimeout(() => {\r\n                  dispatch({ type: \"UPDATE_FALSE\" });\r\n                }, 2000);\r\n              });\r\n          });\r\n      });\r\n    } else {\r\n      let b, x;\r\n      if (values.bio) b = values.bio;\r\n      else b = \"\";\r\n      if (values.website) x = values.website;\r\n      else x = \"\";\r\n\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(values.email)\r\n        .update({\r\n          name: values.name,\r\n          userName: values.username,\r\n          bio: b,\r\n          website: x,\r\n        })\r\n        .then(() => {\r\n          dispatch({ type: \"UPDATE_TRUE\" });\r\n          setTimeout(() => {\r\n            dispatch({ type: \"UPDATE_FALSE\" });\r\n          }, 2000);\r\n        });\r\n    }\r\n  };\r\n\r\n  const uploadPost = (file, caption) => {\r\n    let id = nanoid(15);\r\n    var metadata = {\r\n      contentType: file.type,\r\n    };\r\n    const filePath = `posts/${id}`;\r\n    const fileRef = firebase.storage().ref().child(filePath);\r\n    const uploadTask = fileRef.put(file, metadata);\r\n    uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n      firebase\r\n        .storage()\r\n        .ref()\r\n        .child(filePath)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          let post = {};\r\n          post.id = id;\r\n          post.email = state.user.email;\r\n          post.url = url;\r\n          if (caption) post.caption = caption;\r\n          post.timestamp = firebase.firestore.FieldValue.serverTimestamp();\r\n          firebase\r\n            .firestore()\r\n            .collection(\"posts\")\r\n            .doc(id)\r\n            .set(post)\r\n            .then(() => {\r\n              dispatch({ type: \"POSTED\" });\r\n              setTimeout(() => {\r\n                dispatch({ type: \"REMOVE_POSTED\" });\r\n              }, 2000);\r\n            });\r\n        });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FirebaseContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        loading: state.loading,\r\n        signup: signup,\r\n        facebookSignup: facebookSignup,\r\n        login: login,\r\n        error: state.error,\r\n        updateProfile,\r\n        uploadPost,\r\n        posted: state.posted,\r\n        update: state.update,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      {props.children}{\" \"}\r\n    </FirebaseContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FireState;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FirebaseContext.js",["119"],"import React, { createContext } from \"react\";\r\nconst FirebaseContext = createContext();\r\nexport default FirebaseContext;","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\Context\\Firebase\\FireReducer.js",["120","121","122"],"import { act } from \"react-dom/test-utils\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case \"USER_LOADED\":\r\n      let isAuth = false;\r\n      if (action.payload) isAuth = true;\r\n      return {\r\n        ...state,\r\n        isAuthenticated: isAuth,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n    case \"SIGNUP\":\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n    case \"SET_ERROR\":\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case \"REMOVE_ERROR\":\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case \"POSTED\":\r\n      return {\r\n        ...state,\r\n        posted: true,\r\n      };\r\n    case \"REMOVE_POSTED\": {\r\n      return {\r\n        ...state,\r\n        posted: false,\r\n      };\r\n    }\r\n    case \"UPDATE_TRUE\": {\r\n      return {\r\n        ...state,\r\n        update: true,\r\n      };\r\n    }\r\n    case \"UPDATE_FALSE\": {\r\n      return {\r\n        ...state,\r\n        update: false,\r\n      };\r\n    }\r\n  }\r\n};\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Login.js",["123","124","125","126","127","128","129","130","131","132","133","134"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MailOutlined,\r\n  FacebookFilled,\r\n} from \"@ant-design/icons\";\r\nimport InstaImage from \"../images/insta_image.png\";\r\nimport Illustation from \"../images/login_illus.jpg\";\r\nimport \"antd/dist/antd.css\";\r\nimport { auth } from \"../firebase/config\";\r\nimport firebase from \"firebase/app\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Login = (props) => {\r\n  const [form] = Form.useForm();\r\n  const { addToast } = useToasts();\r\n  const [loading, setLoading] = useState({});\r\n  const {\r\n    user,\r\n    login,\r\n    facebookSignup,\r\n    error,\r\n    loading: newLoading,\r\n  } = useContext(FirebaseContext);\r\n\r\n  const onFinish = async (values) => {\r\n    if (!loading?.help2?.length && !loading?.help1?.length) await login(values);\r\n  };\r\n  useEffect(() => {\r\n    if (error) addToast(error, { appearance: \"error\", autoDismiss: true });\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (user) props.history.push(`/${user.userName}`);\r\n  }, [user]);\r\n\r\n  const checkEmail = (e) => {\r\n    setLoading({ ...loading, status2: \"validating\" });\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where(\"email\", \"==\", e.target.value)\r\n      .limit(1)\r\n      .get()\r\n      .then((data) => {\r\n        if (!data.docs.length) {\r\n          setLoading({\r\n            ...loading,\r\n            status2: \"error\",\r\n            help2: \"This account is not registered\",\r\n          });\r\n        } else if (e.target.value === \"\") {\r\n          setLoading({\r\n            ...loading,\r\n            status2: \"error\",\r\n            help2: \"Please input your email id!\",\r\n          });\r\n        } else if (e.target.value) {\r\n          setLoading({ ...loading, status2: \"success\", help2: \"\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  const [password, setPassword] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    validateStatus: \"\",\r\n    help: \"\",\r\n  });\r\n  const handleClick = (e) => {\r\n    var provider = new firebase.auth.FacebookAuthProvider();\r\n    provider.setCustomParameters({\r\n      display: \"popup\",\r\n    });\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        var credential = result.credential;\r\n\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n\r\n        let email = user.email,\r\n          name = user.displayName,\r\n          photoURL = user.photoURL;\r\n        facebookSignup({ email, name, photoURL });\r\n\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var accessToken = credential.accessToken;\r\n\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n\r\n        // ...\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {newLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"flex_login\">\r\n          <div>\r\n            <img src={Illustation} alt=\"illustration\" className=\"image_illus\" />\r\n          </div>\r\n\r\n          <div className=\"signup_form\">\r\n            <img src={InstaImage} className=\"insta_image\" />\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button fb_button\"\r\n              onClick={handleClick}\r\n            >\r\n              <FacebookFilled width=\"2rem\" /> Login with Facebook\r\n            </Button>\r\n\r\n            <span className=\"breaker\">OR</span>\r\n            <Form\r\n              form={form}\r\n              name=\"normal_login\"\r\n              className=\"login-form\"\r\n              onFinish={onFinish}\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n            >\r\n              <Form.Item\r\n                name=\"email\"\r\n                hasFeedback\r\n                validateStatus={loading.status2}\r\n                help={loading.help2}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your email id!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={checkEmail}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"password\"\r\n                allowClear\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your Password!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  onChange={(e) =>\r\n                    setPassword({ ...password, password: e.target.value })\r\n                  }\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"login-form-button\"\r\n                  style={{ margin: \"auto 0.5rem\" }}\r\n                >\r\n                  Login\r\n                </Button>\r\n                Or <Link to=\"/signup\">signup now!</Link>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Profile.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167"],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Loader.js",[],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\PrivateRoutes.js",[],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Header.js",["168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport InstaImage from \"../images/insta_image.png\";\r\nimport Home from \"../icons/home.svg\";\r\nimport Plus from \"../icons/plus.svg\";\r\nimport Logout from \"../icons/log-out.svg\";\r\nimport UserImage from \"../images/user.svg\";\r\nimport Explore from \"../icons/explore.svg\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport firebase from \"firebase/app\";\r\nimport { Modal, Form, Button, Upload, Input, Alert } from \"antd\";\r\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\n\r\nconst Header = () => {\r\n  const {\r\n    user,\r\n    updateProfile,\r\n    loading,\r\n    uploadPost,\r\n    posted,\r\n    update,\r\n  } = useContext(FirebaseContext);\r\n  const { addToast } = useToasts();\r\n  const [users, setUsers] = useState(null);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const [v, setV] = useState(null);\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      span: 6,\r\n    },\r\n    wrapperCol: {\r\n      span: 14,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (update) {\r\n      addToast(\"Profile updated successfully!\", {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n      });\r\n    }\r\n  }, [update]);\r\n\r\n  const handleLogout = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        // Sign-out successful.\r\n      })\r\n      .catch((error) => {\r\n        // An error happened.\r\n      });\r\n  };\r\n\r\n  const onFinish = async (data) => {\r\n    if (!file) {\r\n      setError(true);\r\n      setTimeout(() => {\r\n        setError(null);\r\n      }, 2000);\r\n    } else {\r\n      uploadPost(file, data.caption);\r\n      setIsModalVisible(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (posted) {\r\n      addToast(\"Posted successfully\", {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n      });\r\n    }\r\n  }, [posted]);\r\n  const normFile = (e) => {\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n\r\n    return e && e.fileList;\r\n  };\r\n  const handleFileChange = (e) => {\r\n    setFile(e.file.originFileObj);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const close = () => {\r\n    setShowUsers([]);\r\n    setV(\"\");\r\n  };\r\n  const [showUsers, setShowUsers] = useState([]);\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .get()\r\n      .then((data) => {\r\n        let arr = [];\r\n        data.docs.forEach((x) => {\r\n          const { name, userName, photoURL } = x.data();\r\n          let y = {};\r\n          y.name = name;\r\n          y.userName = userName;\r\n          y.photoURL = photoURL;\r\n          arr.push(y);\r\n        });\r\n        setUsers(arr);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setV(e.target.value);\r\n    const regex = new RegExp(e.target.value, \"gi\");\r\n    let arr = [];\r\n    if (e.target.value == \"\") {\r\n      setShowUsers(arr);\r\n    } else {\r\n      users.forEach((item) => {\r\n        if (item.name.match(regex) || item.userName.match(regex))\r\n          arr.push(item);\r\n      });\r\n      setShowUsers(arr);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {!loading && user ? (\r\n        <nav>\r\n          <NavLink to={`/`}>\r\n            <label style={{ cursor: \"pointer\" }}>\r\n              <img src={InstaImage} className=\"logo\" />\r\n            </label>\r\n          </NavLink>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"input_header\"\r\n              placeholder=\"Search\"\r\n              onChange={handleChange}\r\n              value={v}\r\n            />\r\n            <ul className=\"list-group\">\r\n              {showUsers.map((data) => (\r\n                <>\r\n                  <a href={`/${data.userName}`}>\r\n                    <li className=\"list-group-item\" onClick={close}>\r\n                      {data.photoURL ? (\r\n                        <img src={data.photoURL} className=\"search_img\" />\r\n                      ) : (\r\n                        <img src={UserImage} className=\"search_img\" />\r\n                      )}\r\n                      <div className=\"serach_flex\">\r\n                        <span className=\"userName_search\">{data.userName}</span>\r\n                        <span className=\"name_search\">{data.name}</span>\r\n                      </div>\r\n                    </li>\r\n                  </a>\r\n                </>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <ul className=\"header_list\">\r\n            <NavLink to={`/`} className=\"hide_home\">\r\n              <li>\r\n                <img src={Home} />\r\n              </li>\r\n            </NavLink>\r\n            <NavLink to={`/explore/posts`}>\r\n              <li>\r\n                <img src={Explore} className=\"display_explore\" />\r\n              </li>\r\n            </NavLink>\r\n            <li>\r\n              <img\r\n                src={Plus}\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={showModal}\r\n              />\r\n            </li>\r\n\r\n            <a href={`/${user.userName}`}>\r\n              <li>\r\n                {user.photoURL ? (\r\n                  <img src={user.photoURL} className=\"user_header\" />\r\n                ) : (\r\n                  <img src={UserImage} className=\"user_header\" />\r\n                )}\r\n              </li>\r\n            </a>\r\n            <li>\r\n              <img src={Logout} onClick={handleLogout} />\r\n            </li>\r\n          </ul>\r\n          <Modal\r\n            title=\"Add a new post\"\r\n            visible={isModalVisible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            className=\"wrapper\"\r\n          >\r\n            {error && (\r\n              <Alert\r\n                message=\"Please select a file!\"\r\n                type=\"error\"\r\n                showIcon\r\n                className=\"alert_show\"\r\n              />\r\n            )}\r\n\r\n            <Form name=\"validate_other\" {...formItemLayout} onFinish={onFinish}>\r\n              <Form.Item\r\n                name=\"upload\"\r\n                label=\"Upload\"\r\n                valuePropName=\"fileList\"\r\n                getValueFromEvent={normFile}\r\n              >\r\n                <Upload\r\n                  name=\"logo\"\r\n                  listType=\"picture\"\r\n                  maxCount={1}\r\n                  onChange={handleFileChange}\r\n                  accept=\"image/*\"\r\n                >\r\n                  <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n                </Upload>\r\n              </Form.Item>\r\n              <Form.Item label=\"Caption\">\r\n                <Form.Item name=\"caption\" noStyle>\r\n                  <Input.TextArea />\r\n                </Form.Item>\r\n              </Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                size=\"middle\"\r\n                className=\"margin_upload\"\r\n              >\r\n                Upload Post\r\n              </Button>\r\n            </Form>\r\n          </Modal>\r\n        </nav>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\credentials.js",[],"C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Posts.js",["184","185","186","187","188","189","190"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport firebase from \"firebase/app\";\r\nimport Heart from \"../icons/heart.svg\";\r\nimport Upload from \"../icons/upload.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spin } from \"antd\";\r\nimport Loader from \"./Loader\";\r\nconst Posts = (props) => {\r\n  const { user, updateProfile, posted } = useContext(FirebaseContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [posts, setPosts] = useState([]);\r\n  useEffect(() => {\r\n    if (props.userName) {\r\n      if (posts) {\r\n        if (posted) {\r\n          let x = [];\r\n          setLoading(true);\r\n          firebase\r\n            .firestore()\r\n            .collection(\"users\")\r\n            .where(\"userName\", \"==\", props.userName)\r\n            .get()\r\n            .then((u) => {\r\n              firebase\r\n                .firestore()\r\n                .collection(\"posts\")\r\n                .where(\"email\", \"==\", u.docs[0].data().email)\r\n                .orderBy(\"timestamp\", \"desc\")\r\n                .get()\r\n                .then((data) => {\r\n                  data.docs.forEach((post) => {\r\n                    x.push(post.data());\r\n                  });\r\n                  setPosts(x);\r\n                  setLoading(false);\r\n                });\r\n            });\r\n        } else {\r\n          let x = [];\r\n          setLoading(true);\r\n          firebase\r\n            .firestore()\r\n            .collection(\"users\")\r\n            .where(\"userName\", \"==\", props.userName)\r\n            .get()\r\n            .then((u) => {\r\n              firebase\r\n                .firestore()\r\n                .collection(\"posts\")\r\n\r\n                .where(\"email\", \"==\", u.docs[0].data().email)\r\n                .orderBy(\"timestamp\", \"desc\")\r\n                .get()\r\n                .then((data) => {\r\n                  data.docs.forEach((post) => {\r\n                    x.push(post.data());\r\n                  });\r\n                  setPosts(x);\r\n                  setLoading(false);\r\n                });\r\n            });\r\n        }\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, [posted]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spin className=\"spin_loader\" />\r\n      ) : posts.length ? (\r\n        <div className=\"grid_posts\">\r\n          {posts.map((post) => (\r\n            <Link to={`/posts/${post.id}`}>\r\n              <div className=\"image_1\">\r\n                <img src={post.url} className=\"image_post\" />\r\n                <div className=\"middle1\">\r\n                  <div className=\"text1\">\r\n                    {!post.likes ? (\r\n                      <span>\r\n                        0{\" \"}\r\n                        <i\r\n                          class=\"fa fa-heart\"\r\n                          aria-hidden=\"true\"\r\n                          style={{ color: \"white\" }}\r\n                        ></i>\r\n                      </span>\r\n                    ) : (\r\n                      <span>\r\n                        {post.likes.length}{\" \"}\r\n                        <i\r\n                          class=\"fa fa-heart\"\r\n                          aria-hidden=\"true\"\r\n                          style={{ color: \"white\" }}\r\n                        ></i>\r\n                      </span>\r\n                    )}\r\n                    &nbsp;&nbsp;\r\n                    {!post.comments ? (\r\n                      <span>\r\n                        0{\" \"}\r\n                        <i\r\n                          class=\"fa fa-comment\"\r\n                          aria-hidden=\"true\"\r\n                          style={{ color: \"white\" }}\r\n                        ></i>\r\n                      </span>\r\n                    ) : (\r\n                      <span>\r\n                        {post.comments.length}{\" \"}\r\n                        <i\r\n                          class=\"fa fa-comment\"\r\n                          aria-hidden=\"true\"\r\n                          style={{ color: \"white\" }}\r\n                        />\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <img src={Upload} className=\"no_post\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Post.js",["191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207"],"import React, { useEffect, useState, useContext, useRef } from \"react\";\r\nimport { Link, useParams, Redirect } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport Loader from \"./Loader\";\r\nimport UserImage from \"../images/user.svg\";\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport { Popconfirm } from \"antd\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\n\r\nconst Post = (props) => {\r\n  const { postId } = useParams();\r\n  const [post, setPost] = useState(null);\r\n  const [owner, setOwner] = useState(null);\r\n  const [heart, setHeart] = useState(false);\r\n  const myRef = useRef(null);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n  const [latestComments, setLatest] = useState([]);\r\n  var l;\r\n\r\n  const arraysEqual = (a, b) => {\r\n    if (a === b) return true;\r\n    if (a == null || b == null) return false;\r\n    if (a.length !== b.length) return false;\r\n\r\n    for (var i = 0; i < a.length; ++i) {\r\n      if (a[i].comment != b[i].comment || a[i].time != b[i].time) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    var postRef = firebase.storage().ref().child(`/posts/${post.id}`);\r\n    postRef\r\n      .delete()\r\n      .then(function () {\r\n        firebase\r\n          .firestore()\r\n          .doc(`/posts/${post.id}`)\r\n          .delete()\r\n          .then(() => {\r\n            props.history.push(\"/\");\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        // Uh-oh, an error occurred!\r\n      });\r\n  };\r\n  const { user, updateProfile } = useContext(FirebaseContext);\r\n\r\n  const compare = (a, b) => {\r\n    return a.time < b.time;\r\n  };\r\n\r\n  const reload = () => {\r\n    firebase\r\n      .firestore()\r\n      .doc(`/posts/${postId}`)\r\n      .get()\r\n      .then((data) => {\r\n        if (!data.exists) {\r\n          props.history.push(\"/\");\r\n        } else {\r\n          if (data.data().comments) {\r\n            let x = data.data().comments;\r\n            x.sort(compare);\r\n\r\n            let newComments = [];\r\n            let resol = [];\r\n            for (let i = 0; i < x.length; i++) {\r\n              resol.push(\r\n                firebase\r\n                  .firestore()\r\n                  .doc(`/users/${x[i].email}`)\r\n                  .get()\r\n                  .then((u) => {\r\n                    let p = {};\r\n                    p = {\r\n                      ...x[i],\r\n                      userName: u.data().userName,\r\n                      photoURL: u.data().photoURL,\r\n                    };\r\n                    return p;\r\n                  })\r\n              );\r\n            }\r\n            Promise.all(resol).then((ans) => {\r\n              setComments([...ans]);\r\n            });\r\n\r\n            let count = 0;\r\n            var newArr = [];\r\n\r\n            for (let i = x.length - 1; i >= 0; i--) {\r\n              if (count == 2) break;\r\n              firebase\r\n                .firestore()\r\n                .doc(`/users/${x[i].email}`)\r\n                .get()\r\n                .then((u) => {\r\n                  let temp = {};\r\n                  temp.comment = x[i].comment;\r\n                  temp.time = x[i].comment;\r\n                  temp.userName = u.data().userName;\r\n                  temp.photoURL = u.data().photoURL;\r\n                  newArr.push(temp);\r\n                });\r\n              count += 1;\r\n            }\r\n            setLatest(newArr);\r\n          }\r\n          setPost(data.data());\r\n          if (myRef && myRef.current)\r\n            myRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n\r\n          firebase\r\n            .firestore()\r\n            .doc(`/users/${data.data().email}`)\r\n            .get()\r\n            .then((u) => {\r\n              setOwner(u.data());\r\n            });\r\n        }\r\n      });\r\n    if (myRef && myRef.current)\r\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    setComment(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .doc(`/posts/${postId}`)\r\n      .get()\r\n      .then((data) => {\r\n        if (!data.exists) {\r\n          props.history.push(\"/\");\r\n        } else {\r\n          if (data.data().comments) {\r\n            let x = data.data().comments;\r\n            x.sort(compare);\r\n\r\n            let newComments = [];\r\n            let resol = [];\r\n            for (let i = 0; i < x.length; i++) {\r\n              resol.push(\r\n                firebase\r\n                  .firestore()\r\n                  .doc(`/users/${x[i].email}`)\r\n                  .get()\r\n                  .then((u) => {\r\n                    let p = {};\r\n                    p = {\r\n                      ...x[i],\r\n                      userName: u.data().userName,\r\n                      photoURL: u.data().photoURL,\r\n                    };\r\n                    return p;\r\n                  })\r\n              );\r\n            }\r\n            Promise.all(resol).then((ans) => {\r\n              setComments([...ans]);\r\n            });\r\n\r\n            let count = 0;\r\n            var newArr = [];\r\n\r\n            for (let i = x.length - 1; i >= 0; i--) {\r\n              if (count == 2) break;\r\n              firebase\r\n                .firestore()\r\n                .doc(`/users/${x[i].email}`)\r\n                .get()\r\n                .then((u) => {\r\n                  let temp = {};\r\n                  temp.comment = x[i].comment;\r\n                  temp.time = x[i].comment;\r\n                  temp.userName = u.data().userName;\r\n                  temp.photoURL = u.data().photoURL;\r\n                  newArr.push(temp);\r\n                });\r\n              count += 1;\r\n            }\r\n            setLatest(newArr);\r\n          }\r\n          setPost(data.data());\r\n\r\n          firebase\r\n            .firestore()\r\n            .doc(`/users/${data.data().email}`)\r\n            .get()\r\n            .then((u) => {\r\n              setOwner(u.data());\r\n            });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (myRef && myRef.current)\r\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [comments]);\r\n\r\n  const handleDBClick = () => {\r\n    setHeart(true);\r\n    setTimeout(() => {\r\n      setHeart(false);\r\n    }, 800);\r\n    if (post.likes) {\r\n      if (!post.likes.includes(user.email)) {\r\n        firebase\r\n          .firestore()\r\n          .doc(`/posts/${post.id}`)\r\n          .get()\r\n\r\n          .then((data) => {\r\n            l = data.data().likes;\r\n            l.push(user.email);\r\n            firebase.firestore().doc(`/posts/${post.id}`).update({\r\n              likes: l,\r\n            });\r\n          })\r\n          .then(() => {\r\n            setPost({ ...post, likes: l });\r\n          });\r\n      }\r\n    } else {\r\n      firebase\r\n        .firestore()\r\n        .doc(`/posts/${post.id}`)\r\n        .get()\r\n        .then((data) => {\r\n          if (data.data().likes) l = data.data().likes;\r\n          else l = [];\r\n          l.push(user.email);\r\n          firebase.firestore().doc(`/posts/${post.id}`).update({\r\n            likes: l,\r\n          });\r\n        })\r\n        .then(() => {\r\n          setPost({ ...post, likes: l });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleLike = () => {\r\n    if (post.likes) {\r\n      if (!post.likes.includes(user.email)) {\r\n        firebase\r\n          .firestore()\r\n          .doc(`/posts/${post.id}`)\r\n          .get()\r\n\r\n          .then((data) => {\r\n            l = data.data().likes;\r\n            l.push(user.email);\r\n            firebase.firestore().doc(`/posts/${post.id}`).update({\r\n              likes: l,\r\n            });\r\n          })\r\n          .then(() => {\r\n            setPost({ ...post, likes: l });\r\n          });\r\n      } else {\r\n        firebase\r\n          .firestore()\r\n          .doc(`/posts/${post.id}`)\r\n          .get()\r\n          .then((data) => {\r\n            l = data.data().likes;\r\n            l = l.filter((like) => like !== user.email);\r\n            firebase.firestore().doc(`/posts/${post.id}`).update({\r\n              likes: l,\r\n            });\r\n          })\r\n          .then(() => {\r\n            setPost({ ...post, likes: l });\r\n          });\r\n      }\r\n    } else {\r\n      firebase\r\n        .firestore()\r\n        .doc(`/posts/${post.id}`)\r\n        .get()\r\n        .then((data) => {\r\n          if (data.data().likes) l = data.data().likes;\r\n          else l = [];\r\n          l.push(user.email);\r\n          firebase.firestore().doc(`/posts/${post.id}`).update({\r\n            likes: l,\r\n          });\r\n        })\r\n        .then(() => {\r\n          setPost({ ...post, likes: l });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleBookmark = () => {\r\n    if (user.bookmarks) {\r\n      if (!user.bookmarks.includes(post.id)) {\r\n        let bookmarks = user.bookmarks;\r\n        bookmarks.push(post.id);\r\n        firebase\r\n          .firestore()\r\n          .doc(`/users/${user.email}`)\r\n          .update({\r\n            bookmarks,\r\n          })\r\n          .then(() => {});\r\n      } else {\r\n        let bookmarks = user.bookmarks;\r\n        bookmarks = bookmarks.filter((like) => like !== post.id);\r\n        firebase\r\n          .firestore()\r\n          .doc(`/users/${user.email}`)\r\n          .update({\r\n            bookmarks,\r\n          })\r\n          .then(() => {});\r\n      }\r\n    } else {\r\n      let bookmarks = [];\r\n      bookmarks.push(post.id);\r\n      firebase\r\n        .firestore()\r\n        .doc(`/users/${user.email}`)\r\n        .update({\r\n          bookmarks,\r\n        })\r\n        .then(() => {});\r\n    }\r\n  };\r\n\r\n  const handleComment = (e) => {\r\n    e.preventDefault();\r\n    if (comment.length) {\r\n      let newComment = {};\r\n      newComment.time = Date.now();\r\n      newComment.comment = comment;\r\n      newComment.email = user.email;\r\n      firebase\r\n        .firestore()\r\n        .doc(`/posts/${post.id}`)\r\n        .get()\r\n        .then((data) => {\r\n          if (data.data().comments) {\r\n            let comments = data.data().comments;\r\n            comments.push(newComment);\r\n            firebase\r\n              .firestore()\r\n              .doc(`/posts/${post.id}`)\r\n              .update({ comments })\r\n              .then(() => {\r\n                reload();\r\n              });\r\n          } else {\r\n            let comments = [];\r\n            comments.push(newComment);\r\n            firebase\r\n              .firestore()\r\n              .doc(`/posts/${post.id}`)\r\n              .update({ comments })\r\n              .then(() => {\r\n                reload();\r\n              });\r\n          }\r\n        });\r\n    }\r\n    if (myRef && myRef.current)\r\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    setComment(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!post || !owner ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"post_grid\">\r\n          <div className=\"post_photo_grid\">\r\n            <div className=\"post_info_grid\">\r\n              {owner.photoURL ? (\r\n                <img src={owner.photoURL} className=\"image_circle\" />\r\n              ) : (\r\n                <img src={UserImage} className=\"image_circle\" />\r\n              )}\r\n              <div>\r\n                <Link to={`/${owner.userName}`} style={{ color: \"black\" }}>\r\n                  {owner.userName}\r\n                </Link>\r\n              </div>\r\n              {user.email === post.email && (\r\n                <Popconfirm\r\n                  placement=\"top\"\r\n                  title=\"Delete this post?\"\r\n                  okText=\"Yes\"\r\n                  cancelText=\"No\"\r\n                  onConfirm={handleConfirm}\r\n                >\r\n                  <EllipsisOutlined\r\n                    style={{ fontSize: \"1.5rem\", marginRight: \"0.5rem\" }}\r\n                    className=\"delete_post\"\r\n                  />\r\n                </Popconfirm>\r\n              )}\r\n            </div>\r\n            <div className=\"inner_div1\">\r\n              <img\r\n                src={post.url}\r\n                className=\"post_image\"\r\n                onDoubleClick={handleDBClick}\r\n              />\r\n              {heart && <i className=\"fa fa-heart\" aria-hidden=\"true\" />}\r\n            </div>\r\n          </div>\r\n          <div className=\"bio_grid\">\r\n            {owner.photoURL ? (\r\n              <img src={owner.photoURL} className=\"image_circle1\" />\r\n            ) : (\r\n              <img src={UserImage} className=\"image_circle1\" />\r\n            )}\r\n            <div>\r\n              <Link to={`/${owner.userName}`} style={{ color: \"black\" }}>\r\n                {\" \"}\r\n                <span className=\"post_userName\">{owner.userName}</span>{\" \"}\r\n              </Link>{\" \"}\r\n              {post.caption}\r\n            </div>\r\n          </div>\r\n          <div className=\"comments_grid\">\r\n            <div className=\"grid_c_div\">\r\n              {comments.length ? (\r\n                <>\r\n                  {comments.map((c) => (\r\n                    <div className=\"comment_grid\">\r\n                      {c.photoURL ? (\r\n                        <img src={c.photoURL} className=\"comment_img\" />\r\n                      ) : (\r\n                        <img src={UserImage} className=\"comment_img\" />\r\n                      )}\r\n\r\n                      <div>\r\n                        {\" \"}\r\n                        <span className=\"post_userName\">\r\n                          <Link\r\n                            to={`/${c.userName}`}\r\n                            style={{ color: \"black\" }}\r\n                          >\r\n                            {c.userName}\r\n                          </Link>\r\n                        </span>\r\n                        &nbsp;\r\n                        <span>{c.comment}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  <div ref={myRef}></div>\r\n                </>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          {latestComments.length ? (\r\n            <div className=\"mobile_comments\">\r\n              <span className=\"view_comments\">\r\n                View all {comments.length} comments\r\n              </span>\r\n              {latestComments.length > 0 &&\r\n                latestComments.map((com) => (\r\n                  <div>\r\n                    <span className=\"post_userName\">\r\n                      <Link to={`/${com.userName}`} style={{ color: \"black\" }}>\r\n                        {com.userName}\r\n                      </Link>\r\n                    </span>\r\n                    &nbsp;\r\n                    {com.comment}\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className=\"compo_grid\">\r\n            <div className=\"heart_grid\">\r\n              <div>\r\n                <i\r\n                  class={`${\r\n                    !post.likes\r\n                      ? `fa fa-heart-o`\r\n                      : post.likes.includes(user.email)\r\n                      ? `fa fa-heart`\r\n                      : `fa fa-heart-o`\r\n                  }`}\r\n                  aria-hidden=\"true\"\r\n                  onClick={handleLike}\r\n                />\r\n                <i class=\"fa fa-comment-o\" aria-hidden=\"true\"></i>\r\n                <i class=\"fa fa-share\" aria-hidden=\"true\"></i>\r\n              </div>\r\n              <i\r\n                className={`${\r\n                  !user.bookmarks\r\n                    ? `fa fa-bookmark-o bookmark`\r\n                    : user.bookmarks.includes(post.id)\r\n                    ? `fa fa-bookmark bookmark`\r\n                    : `fa fa-bookmark-o bookmark`\r\n                }`}\r\n                aria-hidden=\"true\"\r\n                onClick={handleBookmark}\r\n                style={{ marginRight: \"0.5rem\" }}\r\n              ></i>\r\n            </div>\r\n            <div className=\"separate\">\r\n              {post.likes ? (\r\n                <span className=\"likes_div\">{post.likes.length} likes</span>\r\n              ) : (\r\n                <span className=\"likes_div\">0 likes</span>\r\n              )}\r\n            </div>\r\n            <div className=\"text_input_post\">\r\n              <form onSubmit={handleComment}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Add a comment\"\r\n                  onChange={(e) => setComment(e.target.value)}\r\n                  value={comment}\r\n                />\r\n                <button\r\n                  className=\"post_comment\"\r\n                  onClick={handleComment}\r\n                  disabled={comment.length ? undefined : \"disabled\"}\r\n                >\r\n                  Post\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div className=\"hidden_input\">\r\n            <div className=\"text_input_post1\">\r\n              <form onSubmit={handleComment}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Add a comment\"\r\n                  onChange={(e) => setComment(e.target.value)}\r\n                  value={comment}\r\n                />\r\n                <button\r\n                  className=\"post_comment\"\r\n                  type=\"submit\"\r\n                  disabled={comment.length ? undefined : \"disabled\"}\r\n                >\r\n                  Post\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Saved.js",["208","209","210","211","212","213"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport firebase from \"firebase/app\";\r\nimport Heart from \"../icons/heart.svg\";\r\nimport Upload from \"../icons/upload.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spin } from \"antd\";\r\nimport Loader from \"./Loader\";\r\nconst Saved = (props) => {\r\n  const { user, updateProfile } = useContext(FirebaseContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [posts, setPosts] = useState([]);\r\n  useEffect(() => {\r\n    let x = [];\r\n    let y = [];\r\n    setLoading(true);\r\n\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(user.email)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.data().bookmarks) {\r\n          data.data().bookmarks.forEach((post) => {\r\n            x.push(post);\r\n          });\r\n          if (x.length) {\r\n            firebase\r\n              .firestore()\r\n              .collection(\"posts\")\r\n              .where(\"id\", \"in\", x)\r\n              .get()\r\n              .then((data) => {\r\n                data.docs.forEach((d) => {\r\n                  y.push(d.data());\r\n                });\r\n                setPosts(y);\r\n              });\r\n          }\r\n        } else {\r\n          setPosts(y);\r\n        }\r\n\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spin className=\"spin_loader\" />\r\n      ) : posts.length ? (\r\n        <div className=\"grid_posts\">\r\n          {posts.map((post) => (\r\n            <Link to={`/posts/${post.id}`}>\r\n              <div className=\"image_1\">\r\n                <img src={post.url} className=\"image_post\" />\r\n                <div className=\"middle1\">\r\n                  <div className=\"text1\">\r\n                    {!post.likes ? (\r\n                      <span>\r\n                        0 <i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                    ) : (\r\n                      <span>\r\n                        {post.likes.length}{\" \"}\r\n                        <i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                    )}\r\n                    &nbsp;&nbsp;\r\n                    {!post.comments ? (\r\n                      <span>\r\n                        0 <i class=\"fa fa-comment-o\" aria-hidden=\"true\"></i>\r\n                      </span>\r\n                    ) : (\r\n                      <span>\r\n                        {post.comments.length}{\" \"}\r\n                        <i class=\"fa fa-comment-o\" aria-hidden=\"true\" />\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <img src={Upload} className=\"no_post\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Saved;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Explore.js",["214","215","216","217","218","219","220"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport firebase from \"firebase/app\";\r\nimport Heart from \"../icons/heart.svg\";\r\nimport Upload from \"../icons/upload.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spin } from \"antd\";\r\nimport Loader from \"./Loader\";\r\nconst Explore = (props) => {\r\n  const { user, updateProfile } = useContext(FirebaseContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [posts, setPosts] = useState([]);\r\n  useEffect(() => {\r\n    let x = [];\r\n    firebase\r\n      .firestore()\r\n      .collection(\"posts\")\r\n      .orderBy(\"timestamp\")\r\n      .limit(9)\r\n      .get()\r\n      .then((data) => {\r\n        if (data.docs.length) {\r\n          data.docs.forEach((post) => {\r\n            x.push(post.data());\r\n          });\r\n        }\r\n        setPosts(x);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : posts.length ? (\r\n        <div className=\"grid_posts\">\r\n          {posts.map((post) => (\r\n            <a href={`/posts/${post.id}`}>\r\n              <div className=\"image_1\">\r\n                <img src={post.url} className=\"image_post\" />\r\n                <div className=\"middle1\">\r\n                  <div className=\"text1\">\r\n                    {!post.likes ? (\r\n                      <span>\r\n                        0{\" \"}\r\n                        <i\r\n                          class=\"fa fa-heart\"\r\n                          aria-hidden=\"true\"\r\n                          style={{ color: \"white\" }}\r\n                        ></i>\r\n                      </span>\r\n                    ) : (\r\n                      <span>\r\n                        {post.likes.length}{\" \"}\r\n                        <i\r\n                          class=\"fa fa-heart\"\r\n                          aria-hidden=\"true\"\r\n                          style={{ color: \"white\" }}\r\n                        ></i>\r\n                      </span>\r\n                    )}\r\n                    &nbsp;&nbsp;\r\n                    {!post.comments ? (\r\n                      <span>\r\n                        0{\" \"}\r\n                        <i\r\n                          class=\"fa fa-comment\"\r\n                          aria-hidden=\"true\"\r\n                          style={{ color: \"white\" }}\r\n                        ></i>\r\n                      </span>\r\n                    ) : (\r\n                      <span>\r\n                        {post.comments.length}{\" \"}\r\n                        <i\r\n                          class=\"fa fa-comment\"\r\n                          aria-hidden=\"true\"\r\n                          style={{ color: \"white\" }}\r\n                        />\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <img src={Upload} className=\"no_post\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Explore;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Home.js",["221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport firebase from \"firebase/app\";\r\nimport FeedPost from \"./FeedPost\";\r\nimport Loader from \"./Loader\";\r\nimport UserImage from \"../images/user.svg\";\r\nimport Social from \"../images/social.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Home = () => {\r\n  const { user, updateProfile } = useContext(FirebaseContext);\r\n  const [posts, setPosts] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [users, setUsers] = useState(null);\r\n\r\n  const func = (a, b) => {\r\n    return 0.5 - Math.random();\r\n  };\r\n  const handleFollow1 = (userEmail) => {\r\n    let following = user.following;\r\n    if (!following) {\r\n      following = [];\r\n    }\r\n    following.push(userEmail);\r\n    firebase\r\n      .firestore()\r\n      .doc(`/users/${user.email}`)\r\n      .update({\r\n        following: following,\r\n      })\r\n      .then(() => {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .doc(userEmail)\r\n          .get()\r\n          .then((data) => {\r\n            let followers = data.data().followers;\r\n            if (!followers) followers = [];\r\n            followers.push(user.email);\r\n            firebase.firestore().collection(\"users\").doc(userEmail).update({\r\n              followers: followers,\r\n            });\r\n          });\r\n      });\r\n  };\r\n  const handleUnFollow1 = (userEmail) => {\r\n    let following = user.following;\r\n    following = following.filter((user1) => {\r\n      return !(user1 == userEmail);\r\n    });\r\n    firebase\r\n      .firestore()\r\n      .doc(`/users/${user.email}`)\r\n      .update({\r\n        following: following,\r\n      })\r\n      .then(() => {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .doc(userEmail)\r\n          .get()\r\n          .then((data) => {\r\n            let followers = data.data().followers;\r\n            followers = followers.filter((user2) => {\r\n              return !(user2 == user.email);\r\n            });\r\n            firebase.firestore().doc(`/users/${userEmail}`).update({\r\n              followers: followers,\r\n            });\r\n          });\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (user?.following?.length) {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"posts\")\r\n          .where(\"email\", \"in\", [...user.following, user.email])\r\n          .limit(10)\r\n          .get()\r\n          .then((data) => {\r\n            if (data.docs.length) {\r\n              let x = [];\r\n              data.docs.forEach((post) => {\r\n                x.push(post.data().id);\r\n              });\r\n              setPosts(x);\r\n              setLoading(false);\r\n            }\r\n          });\r\n      }\r\n\r\n      if (user?.following?.length > 0) {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .where(\"email\", \"not-in\", user.following)\r\n          .get()\r\n          .then((data) => {\r\n            if (data.docs) {\r\n              let x = [];\r\n              data.docs.forEach((u) => {\r\n                if (\r\n                  u.data().email !== user.email &&\r\n                  u.data().email != \"mihir0699@gmail.com\"\r\n                )\r\n                  x.push(u.data());\r\n              });\r\n              x.sort(func);\r\n              if (!user?.following?.includes(\"mihir0699@gmail.com\")) {\r\n                firebase\r\n                  .firestore()\r\n                  .doc(`/users/mihir0699@gmail.com`)\r\n                  .get()\r\n                  .then((data) => {\r\n                    x.unshift(data.data());\r\n                    x.sort(func);\r\n                    let z = x.slice(0, 4);\r\n\r\n                    setUsers(z);\r\n                  });\r\n              } else {\r\n                let z = x.slice(0, 4);\r\n                setUsers(z);\r\n              }\r\n            }\r\n          });\r\n      } else {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .get()\r\n          .then((data) => {\r\n            if (data.docs) {\r\n              let x = [];\r\n              data.docs.forEach((u) => {\r\n                if (\r\n                  u.data().email != user.email &&\r\n                  u.data().email != \"mihir0699@gmail.com\"\r\n                )\r\n                  x.push(u.data());\r\n              });\r\n              if (!user?.following?.includes(\"mihir0699@gmail.com\")) {\r\n                firebase\r\n                  .firestore()\r\n                  .doc(`/users/mihir0699@gmail.com`)\r\n                  .get()\r\n                  .then((data) => {\r\n                    x.unshift(data.data());\r\n                    x.sort(func);\r\n                    let z = x.slice(0, 4);\r\n                    setUsers(z);\r\n                  });\r\n              }\r\n              x.sort(func);\r\n              let z = x.slice(0, 4);\r\n              setUsers(z);\r\n            }\r\n          });\r\n      }\r\n    }\r\n\r\n    setLoading(false);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {loading || !users ? (\r\n        <Loader />\r\n      ) : posts ? (\r\n        <div className=\"home_grid\">\r\n          <div>\r\n            {posts.map((post) => (\r\n              <FeedPost id={post} />\r\n            ))}\r\n          </div>\r\n          <div className=\"sidebar\">\r\n            <div className=\"fixed_div\">\r\n              {user.photoURL ? (\r\n                <img src={user.photoURL} className=\"user_home\" />\r\n              ) : (\r\n                <img src={UserImage} className=\"user_home\" />\r\n              )}\r\n              <div className=\"serach_flex\">\r\n                <Link to={`/${user.userName}`}>\r\n                  <span className=\"userName_search\">{user.userName}</span>\r\n                </Link>\r\n                <span className=\"name_search\">{user.name}</span>\r\n              </div>\r\n            </div>\r\n            {users?.length ? (\r\n              <div className=\"suggestions_div\">\r\n                <h3>Suggestions for you</h3>\r\n                <div>\r\n                  {users.map((u) => (\r\n                    <div className=\"suggest_div\">\r\n                      {\" \"}\r\n                      {u.photoURL ? (\r\n                        <img src={u.photoURL} className=\"user_home\" />\r\n                      ) : (\r\n                        <img src={UserImage} className=\"user_home\" />\r\n                      )}\r\n                      <div className=\"serach_flex\">\r\n                        <Link to={`/${u.userName}`}>\r\n                          <span className=\"userName_search\">{u.userName}</span>\r\n                        </Link>\r\n                        <span className=\"name_search\">{u.name}</span>\r\n                      </div>\r\n                      {user?.following.includes(u.email) ? (\r\n                        <button\r\n                          className=\"un_home\"\r\n                          onClick={() => handleUnFollow1(u.email)}\r\n                        >\r\n                          Unfollow\r\n                        </button>\r\n                      ) : (\r\n                        <button\r\n                          className=\"follow_home\"\r\n                          onClick={() => handleFollow1(u.email)}\r\n                        >\r\n                          {\" \"}\r\n                          Follow\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"home_flex\">\r\n          <div className=\"sidebar1\">\r\n            <div className=\"fixed_div1\">\r\n              {user.photoURL ? (\r\n                <img src={user.photoURL} className=\"user_home\" />\r\n              ) : (\r\n                <img src={UserImage} className=\"user_home\" />\r\n              )}\r\n              <div className=\"serach_flex\">\r\n                <Link to={`/${user.userName}`}>\r\n                  <span className=\"userName_search\">{user.userName}</span>\r\n                </Link>\r\n                <span className=\"name_search\">{user.name}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"suggestions_div1\">\r\n              <h3>Suggestions for you</h3>\r\n              <div>\r\n                {users.map((u) => (\r\n                  <div className=\"suggest_div\">\r\n                    {\" \"}\r\n                    {u.photoURL ? (\r\n                      <img src={u.photoURL} className=\"user_home\" />\r\n                    ) : (\r\n                      <img src={UserImage} className=\"user_home\" />\r\n                    )}\r\n                    <div className=\"serach_flex\">\r\n                      <Link to={`/${u.userName}`}>\r\n                        <span className=\"userName_search\">{u.userName}</span>\r\n                      </Link>\r\n                      <span className=\"name_search\">{u.name}</span>\r\n                    </div>\r\n                    {user?.following?.includes(u.email) ? (\r\n                      <button\r\n                        className=\"un_home\"\r\n                        onClick={() => handleUnFollow1(u.email)}\r\n                      >\r\n                        Unfollow\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        className=\"follow_home\"\r\n                        onClick={() => handleFollow1(u.email)}\r\n                      >\r\n                        {\" \"}\r\n                        Follow\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <img src={Social} className=\"social_image\" />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\FeedPost.js",["237","238","239","240","241","242","243","244","245","246","247","248"],"import React, { useEffect, useState, useContext, useRef } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport Loader from \"./Loader\";\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport { Popconfirm } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FirebaseContext from \"../Context/Firebase/FirebaseContext\";\r\nimport UserImage from \"../images/user.svg\";\r\n\r\nconst FeedPost = (props) => {\r\n  const [post, setPost] = useState(null);\r\n  const [owner, setOwner] = useState(null);\r\n  const [heart, setHeart] = useState(false);\r\n  const myRef = useRef(null);\r\n\r\n  const [comment, setComment] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n  const [latestComments, setLatest] = useState([]);\r\n  let l;\r\n\r\n  const handleConfirm = () => {\r\n    var postRef = firebase.storage().ref().child(`/posts/${post.id}`);\r\n    postRef\r\n      .delete()\r\n      .then(function () {\r\n        firebase\r\n          .firestore()\r\n          .doc(`/posts/${post.id}`)\r\n          .delete()\r\n          .then(() => {\r\n            props.history.push(\"/\");\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        // Uh-oh, an error occurred!\r\n      });\r\n  };\r\n  const { user, updateProfile } = useContext(FirebaseContext);\r\n\r\n  const compare = (a, b) => {\r\n    return a.time < b.time;\r\n  };\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .doc(`/posts/${props.id}`)\r\n      .get()\r\n      .then((data) => {\r\n        if (!data.exists) {\r\n          props.history.push(\"/\");\r\n        } else {\r\n          if (data.data().comments) {\r\n            let x = data.data().comments;\r\n            x.sort(compare);\r\n\r\n            let newComments = [];\r\n            let resol = [];\r\n            for (let i = 0; i < x.length; i++) {\r\n              resol.push(\r\n                firebase\r\n                  .firestore()\r\n                  .doc(`/users/${x[i].email}`)\r\n                  .get()\r\n                  .then((u) => {\r\n                    let p = {};\r\n                    p = {\r\n                      ...x[i],\r\n                      userName: u.data().userName,\r\n                      photoURL: u.data().photoURL,\r\n                    };\r\n                    return p;\r\n                  })\r\n              );\r\n            }\r\n            Promise.all(resol).then((ans) => {\r\n              setComments([...ans]);\r\n            });\r\n\r\n            let count = 0;\r\n            var newArr = [];\r\n\r\n            for (let i = x.length - 1; i >= 0; i--) {\r\n              if (count == 2) break;\r\n              firebase\r\n                .firestore()\r\n                .doc(`/users/${x[i].email}`)\r\n                .get()\r\n                .then((u) => {\r\n                  let temp = {};\r\n                  temp.comment = x[i].comment;\r\n                  temp.time = x[i].comment;\r\n                  temp.userName = u.data().userName;\r\n                  temp.photoURL = u.data().photoURL;\r\n                  newArr.push(temp);\r\n                });\r\n              count += 1;\r\n            }\r\n            setLatest(newArr);\r\n          }\r\n          setPost(data.data());\r\n\r\n          firebase\r\n            .firestore()\r\n            .doc(`/users/${data.data().email}`)\r\n            .get()\r\n            .then((u) => {\r\n              setOwner(u.data());\r\n            });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const reload = () => {\r\n    firebase\r\n      .firestore()\r\n      .doc(`/posts/${post.id}`)\r\n      .get()\r\n      .then((data) => {\r\n        if (!data.exists) {\r\n          props.history.push(\"/\");\r\n        } else {\r\n          if (data.data().comments) {\r\n            let x = data.data().comments;\r\n            x.sort(compare);\r\n\r\n            let newComments = [];\r\n            let resol = [];\r\n            for (let i = 0; i < x.length; i++) {\r\n              resol.push(\r\n                firebase\r\n                  .firestore()\r\n                  .doc(`/users/${x[i].email}`)\r\n                  .get()\r\n                  .then((u) => {\r\n                    let p = {};\r\n                    p = {\r\n                      ...x[i],\r\n                      userName: u.data().userName,\r\n                      photoURL: u.data().photoURL,\r\n                    };\r\n                    return p;\r\n                  })\r\n              );\r\n            }\r\n            Promise.all(resol).then((ans) => {\r\n              setComments([...ans]);\r\n            });\r\n\r\n            let count = 0;\r\n            var newArr = [];\r\n\r\n            for (let i = x.length - 1; i >= 0; i--) {\r\n              if (count == 2) break;\r\n              firebase\r\n                .firestore()\r\n                .doc(`/users/${x[i].email}`)\r\n                .get()\r\n                .then((u) => {\r\n                  let temp = {};\r\n                  temp.comment = x[i].comment;\r\n                  temp.time = x[i].comment;\r\n                  temp.userName = u.data().userName;\r\n                  temp.photoURL = u.data().photoURL;\r\n                  newArr.push(temp);\r\n                });\r\n              count += 1;\r\n            }\r\n            setLatest(newArr);\r\n          }\r\n          setPost(data.data());\r\n          if (myRef && myRef.current)\r\n            myRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n\r\n          firebase\r\n            .firestore()\r\n            .doc(`/users/${data.data().email}`)\r\n            .get()\r\n            .then((u) => {\r\n              setOwner(u.data());\r\n            });\r\n        }\r\n      });\r\n    if (myRef && myRef.current)\r\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    setComment(\"\");\r\n  };\r\n\r\n  const handleDBClick = () => {\r\n    setHeart(true);\r\n    setTimeout(() => {\r\n      setHeart(false);\r\n    }, 800);\r\n    if (post.likes) {\r\n      if (!post.likes.includes(user.email)) {\r\n        firebase\r\n          .firestore()\r\n          .doc(`/posts/${post.id}`)\r\n          .get()\r\n\r\n          .then((data) => {\r\n            l = data.data().likes;\r\n            l.push(user.email);\r\n            firebase.firestore().doc(`/posts/${post.id}`).update({\r\n              likes: l,\r\n            });\r\n          })\r\n          .then(() => {\r\n            setPost({ ...post, likes: l });\r\n          });\r\n      }\r\n    } else {\r\n      firebase\r\n        .firestore()\r\n        .doc(`/posts/${post.id}`)\r\n        .get()\r\n        .then((data) => {\r\n          if (data.data().likes) l = data.data().likes;\r\n          else l = [];\r\n          l.push(user.email);\r\n          firebase.firestore().doc(`/posts/${post.id}`).update({\r\n            likes: l,\r\n          });\r\n        })\r\n        .then(() => {\r\n          setPost({ ...post, likes: l });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleLike = () => {\r\n    if (post.likes) {\r\n      if (!post.likes.includes(user.email)) {\r\n        firebase\r\n          .firestore()\r\n          .doc(`/posts/${post.id}`)\r\n          .get()\r\n\r\n          .then((data) => {\r\n            l = data.data().likes;\r\n            l.push(user.email);\r\n            firebase.firestore().doc(`/posts/${post.id}`).update({\r\n              likes: l,\r\n            });\r\n          })\r\n          .then(() => {\r\n            setPost({ ...post, likes: l });\r\n          });\r\n      } else {\r\n        firebase\r\n          .firestore()\r\n          .doc(`/posts/${post.id}`)\r\n          .get()\r\n          .then((data) => {\r\n            l = data.data().likes;\r\n            l = l.filter((like) => like !== user.email);\r\n            firebase.firestore().doc(`/posts/${post.id}`).update({\r\n              likes: l,\r\n            });\r\n          })\r\n          .then(() => {\r\n            setPost({ ...post, likes: l });\r\n          });\r\n      }\r\n    } else {\r\n      firebase\r\n        .firestore()\r\n        .doc(`/posts/${post.id}`)\r\n        .get()\r\n        .then((data) => {\r\n          if (data.data().likes) l = data.data().likes;\r\n          else l = [];\r\n          l.push(user.email);\r\n          firebase.firestore().doc(`/posts/${post.id}`).update({\r\n            likes: l,\r\n          });\r\n        })\r\n        .then(() => {\r\n          setPost({ ...post, likes: l });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleBookmark = () => {\r\n    console.log(user);\r\n    if (user.bookmarks) {\r\n      if (!user.bookmarks.includes(post.id)) {\r\n        let bookmarks = user.bookmarks;\r\n        bookmarks.push(post.id);\r\n        firebase\r\n          .firestore()\r\n          .doc(`/users/${user.email}`)\r\n          .update({\r\n            bookmarks,\r\n          })\r\n          .then(() => {});\r\n      } else {\r\n        let bookmarks = user.bookmarks;\r\n        bookmarks = bookmarks.filter((like) => like !== post.id);\r\n        firebase\r\n          .firestore()\r\n          .doc(`/users/${user.email}`)\r\n          .update({\r\n            bookmarks,\r\n          })\r\n          .then(() => {});\r\n      }\r\n    } else {\r\n      let bookmarks = [];\r\n      bookmarks.push(post.id);\r\n      firebase\r\n        .firestore()\r\n        .doc(`/users/${user.email}`)\r\n        .update({\r\n          bookmarks,\r\n        })\r\n        .then(() => {});\r\n    }\r\n  };\r\n\r\n  const handleComment = (e) => {\r\n    e.preventDefault();\r\n    if (comment.length) {\r\n      let newComment = {};\r\n      newComment.time = Date.now();\r\n      newComment.comment = comment;\r\n      newComment.email = user.email;\r\n      firebase\r\n        .firestore()\r\n        .doc(`/posts/${post.id}`)\r\n        .get()\r\n        .then((data) => {\r\n          if (data.data().comments) {\r\n            let comments = data.data().comments;\r\n            comments.push(newComment);\r\n            firebase\r\n              .firestore()\r\n              .doc(`/posts/${post.id}`)\r\n              .update({ comments })\r\n              .then(() => {\r\n                reload();\r\n              });\r\n          } else {\r\n            let comments = [];\r\n            comments.push(newComment);\r\n            firebase\r\n              .firestore()\r\n              .doc(`/posts/${post.id}`)\r\n              .update({ comments })\r\n              .then(() => {\r\n                reload();\r\n              });\r\n          }\r\n        });\r\n    }\r\n    if (myRef && myRef.current)\r\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    setComment(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (myRef && myRef.current)\r\n      myRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [comments]);\r\n\r\n  return (\r\n    <div>\r\n      {!post || !owner ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"post_grid1\">\r\n          <div className=\"post_photo_grid1\">\r\n            <div className=\"post_info_grid\">\r\n              {owner.photoURL ? (\r\n                <img src={owner.photoURL} className=\"image_circle\" />\r\n              ) : (\r\n                <img src={UserImage} className=\"image_circle\" />\r\n              )}\r\n              <div>\r\n                <Link to={`/${owner.userName}`} style={{ color: \"black\" }}>\r\n                  {owner.userName}\r\n                </Link>\r\n              </div>\r\n              {user.email === post.email && (\r\n                <Popconfirm\r\n                  placement=\"top\"\r\n                  title=\"Delete this post?\"\r\n                  okText=\"Yes\"\r\n                  cancelText=\"No\"\r\n                  onConfirm={handleConfirm}\r\n                >\r\n                  <EllipsisOutlined\r\n                    style={{ fontSize: \"1.5rem\", marginRight: \"0.5rem\" }}\r\n                    className=\"delete_post\"\r\n                  />\r\n                </Popconfirm>\r\n              )}\r\n            </div>\r\n            <div className=\"inner_div1\">\r\n              <img\r\n                src={post.url}\r\n                className=\"post_image1\"\r\n                onDoubleClick={handleDBClick}\r\n              />\r\n              {heart && <i className=\"fa fa-heart\" aria-hidden=\"true\" />}\r\n            </div>\r\n          </div>\r\n          <div className=\"bio_grid1\">\r\n            {owner.photoURL ? (\r\n              <img src={owner.photoURL} className=\"image_circle1\" />\r\n            ) : (\r\n              <img src={UserImage} className=\"image_circle1\" />\r\n            )}\r\n            <div>\r\n              <Link to={`/${owner.userName}`} style={{ color: \"black\" }}>\r\n                {\" \"}\r\n                <span className=\"post_userName\">{owner.userName}</span>{\" \"}\r\n              </Link>{\" \"}\r\n              {post.caption}\r\n            </div>\r\n          </div>\r\n          <div className=\"comments_grid1\">\r\n            <div className=\"grid_c_div1\">\r\n              {comments.length ? (\r\n                <>\r\n                  {comments.map((c) => (\r\n                    <div className=\"comment_grid\">\r\n                      <img src={c.photoURL} className=\"comment_img\" />\r\n                      <div>\r\n                        {\" \"}\r\n                        <span className=\"post_userName\">\r\n                          <Link\r\n                            href={`/${c.userName}`}\r\n                            style={{ color: \"black\" }}\r\n                          >\r\n                            {c.userName}\r\n                          </Link>\r\n                        </span>\r\n                        <span>{c.comment}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  <div ref={myRef}></div>\r\n                </>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          {comments.length ? (\r\n            <div className=\"mobile_comments1\">\r\n              <span className=\"view_comments\">\r\n                View all {comments.length} comments\r\n              </span>\r\n              {latestComments.length\r\n                ? latestComments.map((com) => (\r\n                    <div>\r\n                      <span className=\"post_userName\">\r\n                        <Link\r\n                          to={`/${com.userName}`}\r\n                          style={{ color: \"black\" }}\r\n                        >\r\n                          {com.userName}\r\n                        </Link>\r\n                      </span>\r\n                      &nbsp;\r\n                      {com.comment}\r\n                    </div>\r\n                  ))\r\n                : null}\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className=\"compo_grid1\">\r\n            <div className=\"heart_grid\">\r\n              <div>\r\n                <i\r\n                  class={`${\r\n                    !post.likes\r\n                      ? `fa fa-heart-o`\r\n                      : post.likes.includes(user.email)\r\n                      ? `fa fa-heart`\r\n                      : `fa fa-heart-o`\r\n                  }`}\r\n                  aria-hidden=\"true\"\r\n                  onClick={handleLike}\r\n                />\r\n                <i class=\"fa fa-comment-o\" aria-hidden=\"true\"></i>\r\n                <i class=\"fa fa-share\" aria-hidden=\"true\"></i>\r\n              </div>\r\n              <i\r\n                className={`${\r\n                  !user.bookmarks\r\n                    ? `fa fa-bookmark-o bookmark`\r\n                    : user.bookmarks.includes(post.id)\r\n                    ? `fa fa-bookmark bookmark`\r\n                    : `fa fa-bookmark-o bookmark`\r\n                }`}\r\n                aria-hidden=\"true\"\r\n                onClick={handleBookmark}\r\n                style={{ marginRight: \"0.5rem\" }}\r\n              ></i>\r\n            </div>\r\n            <div className=\"separate\">\r\n              {post.likes ? (\r\n                <span className=\"likes_div\">{post.likes.length} likes</span>\r\n              ) : (\r\n                <span className=\"likes_div\">0 likes</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"hidden_input1\">\r\n            <div className=\"text_input_post2\">\r\n              <form onSubmit={handleComment}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Add a comment\"\r\n                  onChange={(e) => setComment(e.target.value)}\r\n                  value={comment}\r\n                />\r\n                <button\r\n                  className=\"post_comment\"\r\n                  type=\"submit\"\r\n                  disabled={comment.length ? undefined : \"disabled\"}\r\n                >\r\n                  Post\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedPost;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Not_Found.js",["249"],"import React from \"react\";\r\nimport Not_Found1 from \"../images/404.svg\";\r\n\r\nconst Not_Found = () => {\r\n  return (\r\n    <div>\r\n      <img src={Not_Found1} className=\"found_image\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Not_Found;\r\n","C:\\Users\\mihir\\OneDrive\\Desktop\\Insta Clone\\insta_clone\\src\\components\\Footer.js",[],{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":6,"column":25,"nodeType":"256","messageId":"257","endLine":6,"endColumn":34},{"ruleId":"254","severity":1,"message":"258","line":2,"column":31,"nodeType":"256","messageId":"257","endLine":2,"endColumn":39},{"ruleId":"254","severity":1,"message":"259","line":12,"column":10,"nodeType":"256","messageId":"257","endLine":12,"endColumn":14},{"ruleId":"254","severity":1,"message":"260","line":22,"column":10,"nodeType":"256","messageId":"257","endLine":22,"endColumn":18},{"ruleId":"254","severity":1,"message":"261","line":22,"column":20,"nodeType":"256","messageId":"257","endLine":22,"endColumn":31},{"ruleId":"254","severity":1,"message":"262","line":28,"column":5,"nodeType":"256","messageId":"257","endLine":28,"endColumn":20},{"ruleId":"263","severity":1,"message":"264","line":39,"column":6,"nodeType":"265","endLine":39,"endColumn":12,"suggestions":"266"},{"ruleId":"263","severity":1,"message":"267","line":48,"column":6,"nodeType":"265","endLine":48,"endColumn":13,"suggestions":"268"},{"ruleId":"254","severity":1,"message":"269","line":131,"column":13,"nodeType":"256","messageId":"257","endLine":131,"endColumn":24},{"ruleId":"254","severity":1,"message":"270","line":137,"column":13,"nodeType":"256","messageId":"257","endLine":137,"endColumn":22},{"ruleId":"254","severity":1,"message":"271","line":138,"column":13,"nodeType":"256","messageId":"257","endLine":138,"endColumn":25},{"ruleId":"254","severity":1,"message":"272","line":140,"column":13,"nodeType":"256","messageId":"257","endLine":140,"endColumn":18},{"ruleId":"254","severity":1,"message":"273","line":142,"column":13,"nodeType":"256","messageId":"257","endLine":142,"endColumn":23},{"ruleId":"274","severity":1,"message":"275","line":164,"column":15,"nodeType":"276","endLine":164,"endColumn":63},{"ruleId":"254","severity":1,"message":"277","line":1,"column":17,"nodeType":"256","messageId":"257","endLine":1,"endColumn":27},{"ruleId":"263","severity":1,"message":"278","line":47,"column":6,"nodeType":"265","endLine":47,"endColumn":8,"suggestions":"279"},{"ruleId":"254","severity":1,"message":"280","line":1,"column":8,"nodeType":"256","messageId":"257","endLine":1,"endColumn":13},{"ruleId":"254","severity":1,"message":"281","line":1,"column":10,"nodeType":"256","messageId":"257","endLine":1,"endColumn":13},{"ruleId":"282","severity":1,"message":"283","line":3,"column":1,"nodeType":"284","endLine":55,"endColumn":3},{"ruleId":"285","severity":1,"message":"286","line":4,"column":3,"nodeType":"287","messageId":"288","endLine":54,"endColumn":4},{"ruleId":"254","severity":1,"message":"258","line":2,"column":31,"nodeType":"256","messageId":"257","endLine":2,"endColumn":39},{"ruleId":"254","severity":1,"message":"289","line":4,"column":3,"nodeType":"256","messageId":"257","endLine":4,"endColumn":15},{"ruleId":"254","severity":1,"message":"259","line":12,"column":10,"nodeType":"256","messageId":"257","endLine":12,"endColumn":14},{"ruleId":"254","severity":1,"message":"290","line":15,"column":10,"nodeType":"256","messageId":"257","endLine":15,"endColumn":23},{"ruleId":"263","severity":1,"message":"267","line":36,"column":6,"nodeType":"265","endLine":36,"endColumn":13,"suggestions":"291"},{"ruleId":"263","severity":1,"message":"264","line":40,"column":6,"nodeType":"265","endLine":40,"endColumn":12,"suggestions":"292"},{"ruleId":"254","severity":1,"message":"269","line":96,"column":13,"nodeType":"256","messageId":"257","endLine":96,"endColumn":24},{"ruleId":"254","severity":1,"message":"270","line":102,"column":13,"nodeType":"256","messageId":"257","endLine":102,"endColumn":22},{"ruleId":"254","severity":1,"message":"271","line":103,"column":13,"nodeType":"256","messageId":"257","endLine":103,"endColumn":25},{"ruleId":"254","severity":1,"message":"272","line":105,"column":13,"nodeType":"256","messageId":"257","endLine":105,"endColumn":18},{"ruleId":"254","severity":1,"message":"273","line":107,"column":13,"nodeType":"256","messageId":"257","endLine":107,"endColumn":23},{"ruleId":"274","severity":1,"message":"275","line":124,"column":13,"nodeType":"276","endLine":124,"endColumn":61},{"ruleId":"254","severity":1,"message":"293","line":3,"column":10,"nodeType":"256","messageId":"257","endLine":3,"endColumn":14},{"ruleId":"254","severity":1,"message":"294","line":3,"column":27,"nodeType":"256","messageId":"257","endLine":3,"endColumn":35},{"ruleId":"254","severity":1,"message":"295","line":6,"column":38,"nodeType":"256","messageId":"257","endLine":6,"endColumn":44},{"ruleId":"254","severity":1,"message":"290","line":11,"column":10,"nodeType":"256","messageId":"257","endLine":11,"endColumn":23},{"ruleId":"254","severity":1,"message":"296","line":13,"column":3,"nodeType":"256","messageId":"257","endLine":13,"endColumn":17},{"ruleId":"254","severity":1,"message":"297","line":14,"column":3,"nodeType":"256","messageId":"257","endLine":14,"endColumn":16},{"ruleId":"254","severity":1,"message":"298","line":15,"column":3,"nodeType":"256","messageId":"257","endLine":15,"endColumn":18},{"ruleId":"254","severity":1,"message":"299","line":21,"column":8,"nodeType":"256","messageId":"257","endLine":21,"endColumn":12},{"ruleId":"254","severity":1,"message":"300","line":24,"column":11,"nodeType":"256","messageId":"257","endLine":24,"endColumn":19},{"ruleId":"254","severity":1,"message":"301","line":26,"column":32,"nodeType":"256","messageId":"257","endLine":26,"endColumn":38},{"ruleId":"254","severity":1,"message":"302","line":35,"column":9,"nodeType":"256","messageId":"257","endLine":35,"endColumn":12},{"ruleId":"254","severity":1,"message":"303","line":41,"column":10,"nodeType":"256","messageId":"257","endLine":41,"endColumn":17},{"ruleId":"263","severity":1,"message":"304","line":62,"column":6,"nodeType":"265","endLine":62,"endColumn":8,"suggestions":"305"},{"ruleId":"254","severity":1,"message":"306","line":128,"column":26,"nodeType":"256","messageId":"257","endLine":128,"endColumn":43},{"ruleId":"307","severity":1,"message":"308","line":138,"column":62,"nodeType":"309","messageId":"310","endLine":138,"endColumn":64},{"ruleId":"307","severity":1,"message":"311","line":247,"column":22,"nodeType":"309","messageId":"310","endLine":247,"endColumn":24},{"ruleId":"307","severity":1,"message":"311","line":258,"column":26,"nodeType":"309","messageId":"310","endLine":258,"endColumn":28},{"ruleId":"307","severity":1,"message":"311","line":268,"column":22,"nodeType":"309","messageId":"310","endLine":268,"endColumn":24},{"ruleId":"307","severity":1,"message":"311","line":285,"column":30,"nodeType":"309","messageId":"310","endLine":285,"endColumn":32},{"ruleId":"254","severity":1,"message":"312","line":305,"column":9,"nodeType":"256","messageId":"257","endLine":305,"endColumn":25},{"ruleId":"274","severity":1,"message":"275","line":331,"column":25,"nodeType":"276","endLine":331,"endColumn":56},{"ruleId":"274","severity":1,"message":"275","line":333,"column":25,"nodeType":"276","endLine":333,"endColumn":48},{"ruleId":"274","severity":1,"message":"275","line":383,"column":25,"nodeType":"276","endLine":383,"endColumn":56},{"ruleId":"274","severity":1,"message":"275","line":385,"column":25,"nodeType":"276","endLine":385,"endColumn":48},{"ruleId":"274","severity":1,"message":"275","line":427,"column":19,"nodeType":"276","endLine":427,"endColumn":69},{"ruleId":"274","severity":1,"message":"275","line":429,"column":19,"nodeType":"276","endLine":429,"endColumn":65},{"ruleId":"274","severity":1,"message":"275","line":436,"column":21,"nodeType":"276","endLine":439,"endColumn":23},{"ruleId":"307","severity":1,"message":"311","line":442,"column":36,"nodeType":"309","messageId":"310","endLine":442,"endColumn":38},{"ruleId":"313","severity":1,"message":"314","line":498,"column":23,"nodeType":"276","endLine":502,"endColumn":24},{"ruleId":"274","severity":1,"message":"275","line":519,"column":19,"nodeType":"276","endLine":522,"endColumn":21},{"ruleId":"274","severity":1,"message":"275","line":524,"column":19,"nodeType":"276","endLine":527,"endColumn":21},{"ruleId":"274","severity":1,"message":"275","line":623,"column":21,"nodeType":"276","endLine":627,"endColumn":23},{"ruleId":"274","severity":1,"message":"275","line":639,"column":23,"nodeType":"276","endLine":639,"endColumn":63},{"ruleId":"254","severity":1,"message":"315","line":11,"column":26,"nodeType":"256","messageId":"257","endLine":11,"endColumn":39},{"ruleId":"254","severity":1,"message":"293","line":12,"column":19,"nodeType":"256","messageId":"257","endLine":12,"endColumn":23},{"ruleId":"254","severity":1,"message":"290","line":13,"column":10,"nodeType":"256","messageId":"257","endLine":13,"endColumn":23},{"ruleId":"254","severity":1,"message":"316","line":18,"column":5,"nodeType":"256","messageId":"257","endLine":18,"endColumn":18},{"ruleId":"263","severity":1,"message":"267","line":46,"column":6,"nodeType":"265","endLine":46,"endColumn":14,"suggestions":"317"},{"ruleId":"263","severity":1,"message":"267","line":78,"column":6,"nodeType":"265","endLine":78,"endColumn":14,"suggestions":"318"},{"ruleId":"307","severity":1,"message":"311","line":130,"column":24,"nodeType":"309","messageId":"310","endLine":130,"endColumn":26},{"ruleId":"274","severity":1,"message":"275","line":146,"column":15,"nodeType":"276","endLine":146,"endColumn":56},{"ruleId":"274","severity":1,"message":"275","line":163,"column":25,"nodeType":"276","endLine":163,"endColumn":75},{"ruleId":"274","severity":1,"message":"275","line":165,"column":25,"nodeType":"276","endLine":165,"endColumn":71},{"ruleId":"274","severity":1,"message":"275","line":180,"column":17,"nodeType":"276","endLine":180,"endColumn":35},{"ruleId":"274","severity":1,"message":"275","line":185,"column":17,"nodeType":"276","endLine":185,"endColumn":66},{"ruleId":"274","severity":1,"message":"275","line":189,"column":15,"nodeType":"276","endLine":193,"endColumn":17},{"ruleId":"274","severity":1,"message":"275","line":199,"column":19,"nodeType":"276","endLine":199,"endColumn":70},{"ruleId":"274","severity":1,"message":"275","line":201,"column":19,"nodeType":"276","endLine":201,"endColumn":66},{"ruleId":"274","severity":1,"message":"275","line":206,"column":15,"nodeType":"276","endLine":206,"endColumn":58},{"ruleId":"254","severity":1,"message":"319","line":4,"column":8,"nodeType":"256","messageId":"257","endLine":4,"endColumn":13},{"ruleId":"254","severity":1,"message":"320","line":8,"column":8,"nodeType":"256","messageId":"257","endLine":8,"endColumn":14},{"ruleId":"254","severity":1,"message":"321","line":10,"column":11,"nodeType":"256","messageId":"257","endLine":10,"endColumn":15},{"ruleId":"254","severity":1,"message":"316","line":10,"column":17,"nodeType":"256","messageId":"257","endLine":10,"endColumn":30},{"ruleId":"263","severity":1,"message":"322","line":67,"column":6,"nodeType":"265","endLine":67,"endColumn":14,"suggestions":"323"},{"ruleId":"274","severity":1,"message":"275","line":78,"column":17,"nodeType":"276","endLine":78,"endColumn":62},{"ruleId":"274","severity":1,"message":"275","line":127,"column":9,"nodeType":"276","endLine":127,"endColumn":49},{"ruleId":"254","severity":1,"message":"294","line":2,"column":27,"nodeType":"256","messageId":"257","endLine":2,"endColumn":35},{"ruleId":"254","severity":1,"message":"324","line":21,"column":9,"nodeType":"256","messageId":"257","endLine":21,"endColumn":20},{"ruleId":"307","severity":1,"message":"308","line":27,"column":24,"nodeType":"309","messageId":"310","endLine":27,"endColumn":26},{"ruleId":"307","severity":1,"message":"308","line":27,"column":53,"nodeType":"309","messageId":"310","endLine":27,"endColumn":55},{"ruleId":"254","severity":1,"message":"316","line":49,"column":17,"nodeType":"256","messageId":"257","endLine":49,"endColumn":30},{"ruleId":"254","severity":1,"message":"325","line":68,"column":17,"nodeType":"256","messageId":"257","endLine":68,"endColumn":28},{"ruleId":"307","severity":1,"message":"311","line":95,"column":25,"nodeType":"309","messageId":"310","endLine":95,"endColumn":27},{"ruleId":"254","severity":1,"message":"325","line":143,"column":17,"nodeType":"256","messageId":"257","endLine":143,"endColumn":28},{"ruleId":"307","severity":1,"message":"311","line":170,"column":25,"nodeType":"309","messageId":"310","endLine":170,"endColumn":27},{"ruleId":"263","severity":1,"message":"326","line":198,"column":6,"nodeType":"265","endLine":198,"endColumn":8,"suggestions":"327"},{"ruleId":"274","severity":1,"message":"275","line":385,"column":17,"nodeType":"276","endLine":385,"endColumn":70},{"ruleId":"274","severity":1,"message":"275","line":387,"column":17,"nodeType":"276","endLine":387,"endColumn":65},{"ruleId":"274","severity":1,"message":"275","line":410,"column":15,"nodeType":"276","endLine":414,"endColumn":17},{"ruleId":"274","severity":1,"message":"275","line":420,"column":15,"nodeType":"276","endLine":420,"endColumn":69},{"ruleId":"274","severity":1,"message":"275","line":422,"column":15,"nodeType":"276","endLine":422,"endColumn":64},{"ruleId":"274","severity":1,"message":"275","line":439,"column":25,"nodeType":"276","endLine":439,"endColumn":73},{"ruleId":"274","severity":1,"message":"275","line":441,"column":25,"nodeType":"276","endLine":441,"endColumn":72},{"ruleId":"254","severity":1,"message":"319","line":4,"column":8,"nodeType":"256","messageId":"257","endLine":4,"endColumn":13},{"ruleId":"254","severity":1,"message":"320","line":8,"column":8,"nodeType":"256","messageId":"257","endLine":8,"endColumn":14},{"ruleId":"254","severity":1,"message":"316","line":10,"column":17,"nodeType":"256","messageId":"257","endLine":10,"endColumn":30},{"ruleId":"263","severity":1,"message":"328","line":47,"column":6,"nodeType":"265","endLine":47,"endColumn":8,"suggestions":"329"},{"ruleId":"274","severity":1,"message":"275","line":57,"column":17,"nodeType":"276","endLine":57,"endColumn":62},{"ruleId":"274","severity":1,"message":"275","line":88,"column":9,"nodeType":"276","endLine":88,"endColumn":49},{"ruleId":"254","severity":1,"message":"319","line":4,"column":8,"nodeType":"256","messageId":"257","endLine":4,"endColumn":13},{"ruleId":"254","severity":1,"message":"293","line":6,"column":10,"nodeType":"256","messageId":"257","endLine":6,"endColumn":14},{"ruleId":"254","severity":1,"message":"330","line":7,"column":10,"nodeType":"256","messageId":"257","endLine":7,"endColumn":14},{"ruleId":"254","severity":1,"message":"321","line":10,"column":11,"nodeType":"256","messageId":"257","endLine":10,"endColumn":15},{"ruleId":"254","severity":1,"message":"316","line":10,"column":17,"nodeType":"256","messageId":"257","endLine":10,"endColumn":30},{"ruleId":"274","severity":1,"message":"275","line":40,"column":17,"nodeType":"276","endLine":40,"endColumn":62},{"ruleId":"274","severity":1,"message":"275","line":89,"column":9,"nodeType":"276","endLine":89,"endColumn":49},{"ruleId":"254","severity":1,"message":"316","line":10,"column":17,"nodeType":"256","messageId":"257","endLine":10,"endColumn":30},{"ruleId":"307","severity":1,"message":"311","line":49,"column":22,"nodeType":"309","messageId":"310","endLine":49,"endColumn":24},{"ruleId":"307","severity":1,"message":"311","line":66,"column":30,"nodeType":"309","messageId":"310","endLine":66,"endColumn":32},{"ruleId":"307","severity":1,"message":"308","line":107,"column":34,"nodeType":"309","messageId":"310","endLine":107,"endColumn":36},{"ruleId":"307","severity":1,"message":"308","line":140,"column":34,"nodeType":"309","messageId":"310","endLine":140,"endColumn":36},{"ruleId":"307","severity":1,"message":"308","line":141,"column":34,"nodeType":"309","messageId":"310","endLine":141,"endColumn":36},{"ruleId":"263","severity":1,"message":"331","line":166,"column":6,"nodeType":"265","endLine":166,"endColumn":8,"suggestions":"332"},{"ruleId":"274","severity":1,"message":"275","line":181,"column":17,"nodeType":"276","endLine":181,"endColumn":66},{"ruleId":"274","severity":1,"message":"275","line":183,"column":17,"nodeType":"276","endLine":183,"endColumn":62},{"ruleId":"274","severity":1,"message":"275","line":200,"column":25,"nodeType":"276","endLine":200,"endColumn":71},{"ruleId":"274","severity":1,"message":"275","line":202,"column":25,"nodeType":"276","endLine":202,"endColumn":70},{"ruleId":"274","severity":1,"message":"275","line":238,"column":17,"nodeType":"276","endLine":238,"endColumn":66},{"ruleId":"274","severity":1,"message":"275","line":240,"column":17,"nodeType":"276","endLine":240,"endColumn":62},{"ruleId":"274","severity":1,"message":"275","line":256,"column":23,"nodeType":"276","endLine":256,"endColumn":69},{"ruleId":"274","severity":1,"message":"275","line":258,"column":23,"nodeType":"276","endLine":258,"endColumn":68},{"ruleId":"274","severity":1,"message":"275","line":288,"column":13,"nodeType":"276","endLine":288,"endColumn":58},{"ruleId":"254","severity":1,"message":"316","line":38,"column":17,"nodeType":"256","messageId":"257","endLine":38,"endColumn":30},{"ruleId":"254","severity":1,"message":"325","line":57,"column":17,"nodeType":"256","messageId":"257","endLine":57,"endColumn":28},{"ruleId":"307","severity":1,"message":"311","line":84,"column":25,"nodeType":"309","messageId":"310","endLine":84,"endColumn":27},{"ruleId":"263","severity":1,"message":"333","line":112,"column":6,"nodeType":"265","endLine":112,"endColumn":8,"suggestions":"334"},{"ruleId":"254","severity":1,"message":"325","line":127,"column":17,"nodeType":"256","messageId":"257","endLine":127,"endColumn":28},{"ruleId":"307","severity":1,"message":"311","line":154,"column":25,"nodeType":"309","messageId":"310","endLine":154,"endColumn":27},{"ruleId":"274","severity":1,"message":"275","line":375,"column":17,"nodeType":"276","endLine":375,"endColumn":70},{"ruleId":"274","severity":1,"message":"275","line":377,"column":17,"nodeType":"276","endLine":377,"endColumn":65},{"ruleId":"274","severity":1,"message":"275","line":400,"column":15,"nodeType":"276","endLine":404,"endColumn":17},{"ruleId":"274","severity":1,"message":"275","line":410,"column":15,"nodeType":"276","endLine":410,"endColumn":69},{"ruleId":"274","severity":1,"message":"275","line":412,"column":15,"nodeType":"276","endLine":412,"endColumn":64},{"ruleId":"274","severity":1,"message":"275","line":428,"column":23,"nodeType":"276","endLine":428,"endColumn":71},{"ruleId":"274","severity":1,"message":"275","line":7,"column":7,"nodeType":"276","endLine":7,"endColumn":55},"no-native-reassign",["335"],"no-negated-in-lhs",["336"],"no-unused-vars","'useToasts' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'auth' is defined but never used.","'userName' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["337"],"React Hook useEffect has a missing dependency: 'addToast'. Either include it or remove the dependency array.",["338"],"'accessToken' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'state.user'. Either include it or remove the dependency array.",["339"],"'React' is defined but never used.","'act' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'UserOutlined' is defined but never used.","'ToastProvider' is defined but never used.",["340"],["341"],"'Link' is defined but never used.","'Redirect' is defined but never used.","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.","'AppleOutlined' is defined but never used.","'AndroidOutlined' is defined but never used.","'Post' is defined but never used.","'addToast' is assigned a value but never used.","'update' is assigned a value but never used.","'url' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history', 'user.following', and 'userName'. Either include them or remove the dependency array.",["342"],"'setConfirmLoading' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'buttonItemLayout' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'InboxOutlined' is defined but never used.","'updateProfile' is assigned a value but never used.",["343"],["344"],"'Heart' is defined but never used.","'Loader' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'posts' and 'props.userName'. Either include them or remove the dependency array.",["345"],"'arraysEqual' is assigned a value but never used.","'newComments' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'postId' and 'props.history'. Either include them or remove the dependency array.",["346"],"React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.",["347"],"'Spin' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["348"],"React Hook useEffect has missing dependencies: 'props.history' and 'props.id'. Either include them or remove the dependency array.",["349"],"no-global-assign","no-unsafe-negation",{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"352","fix":"356"},{"desc":"350","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},"Update the dependencies array to be: [props.history, user]",{"range":"374","text":"375"},"Update the dependencies array to be: [addToast, error]",{"range":"376","text":"377"},"Update the dependencies array to be: [state.user]",{"range":"378","text":"379"},{"range":"380","text":"377"},{"range":"381","text":"375"},"Update the dependencies array to be: [props.history, user.following, userName]",{"range":"382","text":"383"},"Update the dependencies array to be: [addToast, update]",{"range":"384","text":"385"},"Update the dependencies array to be: [addToast, posted]",{"range":"386","text":"387"},"Update the dependencies array to be: [posted, posts, props.userName]",{"range":"388","text":"389"},"Update the dependencies array to be: [postId, props.history]",{"range":"390","text":"391"},"Update the dependencies array to be: [user.email]",{"range":"392","text":"393"},"Update the dependencies array to be: [user]",{"range":"394","text":"395"},"Update the dependencies array to be: [props.history, props.id]",{"range":"396","text":"397"},[1231,1237],"[props.history, user]",[1388,1395],"[addToast, error]",[1316,1318],"[state.user]",[1171,1178],[1266,1272],[2155,2157],"[props.history, user.following, userName]",[1420,1428],"[addToast, update]",[2064,2072],"[addToast, posted]",[2152,2160],"[posted, posts, props.userName]",[5894,5896],"[postId, props.history]",[1349,1351],"[user.email]",[4964,4966],"[user]",[3312,3314],"[props.history, props.id]"]